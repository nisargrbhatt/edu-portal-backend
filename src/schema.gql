# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AdminTypeCount {
  Admin: Int!
}

type AdminType {
  id: ID!
  name: String!
  description: String!
  thumbnail: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  Admin: [Admin!]
  _count: AdminTypeCount!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type AdminDepartmentCount {
  Admin: Int!
}

type AdminDepartment {
  id: ID!
  name: String!
  description: String!
  thumbnail: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  Admin: [Admin!]
  _count: AdminDepartmentCount!
}

type CountryCount {
  State: Int!
}

type Country {
  id: ID!
  name: String!
  description: String
  image: String
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  State: [State!]
  _count: CountryCount!
}

type StateCount {
  City: Int!
}

type State {
  id: ID!
  name: String!
  description: String
  image: String
  countryId: Int!
  country: Country!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  City: [City!]
  _count: StateCount!
}

type CityCount {
  Address: Int!
}

type City {
  id: ID!
  name: String!
  description: String
  image: String
  stateId: Int!
  state: State!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  Address: [Address!]
  _count: CityCount!
}

type FacultyTypeCount {
  Faculty: Int!
}

type FacultyType {
  id: ID!
  name: String!
  description: String!
  thumbnail: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  Faculty: [Faculty!]
  _count: FacultyTypeCount!
}

type ClassroomSessionCount {
  ClassroomAttendance: Int!
}

type ClassroomSession {
  id: ID!
  name: String!
  description: String!
  collageClassroomId: Int!
  collageClassroom: CollageClassroom!
  active: Boolean!
  meta: JSON!
  attendanceActive: Boolean!
  facultyId: Int!
  faculty: Faculty!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  ClassroomAttendance: [ClassroomAttendance!]
  _count: ClassroomSessionCount!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type QuizAttempts {
  id: ID!
  quizQuestionId: Int!
  quizQuestion: QuizQuestion!
  answer: String!
  studentId: Int!
  student: Student!
  classroomQuizId: Int!
  classroomQuiz: ClassroomQuiz!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}

type QuizQuestionCount {
  QuizAttempts: Int!
}

type QuizQuestion {
  id: ID!
  question: String!
  answer1: String!
  answer2: String!
  answer3: String
  answer4: String
  correctAnswer: String!
  classroomQuizId: Int!
  classroomQuiz: ClassroomQuiz!
  image: String
  marks: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  QuizAttempts: [QuizAttempts!]
  _count: QuizQuestionCount!
}

type QuizResult {
  id: ID!
  totalMarks: Int!
  marksGained: Int!
  studentId: Int!
  student: Student!
  classroomQuizId: Int!
  classroomQuiz: ClassroomQuiz!
  semester: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}

type ClassroomQuizCount {
  QuizQuestion: Int!
  QuizAttempts: Int!
  QuizResult: Int!
}

type ClassroomQuiz {
  id: ID!
  name: String!
  description: String!
  takeTime: DateTime!
  duration: String!
  collageClassroomId: Int!
  collageClassroom: CollageClassroom!
  facultyId: Int!
  faculty: Faculty!
  active: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  QuizQuestion: [QuizQuestion!]
  QuizAttempts: [QuizAttempts!]
  QuizResult: [QuizResult!]
  _count: ClassroomQuizCount!
}

type CollageClassroomCount {
  ClassroomSession: Int!
  ClassroomQuiz: Int!
}

type CollageClassroom {
  id: ID!
  name: String!
  description: String!
  classCode: String!
  syllabus: String!
  thumbnail: String!
  collageDepartmentId: Int!
  collageDepartment: CollageDepartment!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  ClassroomSession: [ClassroomSession!]
  ClassroomQuiz: [ClassroomQuiz!]
  _count: CollageClassroomCount!
}

type CollageDepartmentCount {
  CollageClassroom: Int!
}

type CollageDepartment {
  id: ID!
  name: String!
  description: String!
  thumbnail: String!
  facultyId: Int!
  faculty: Faculty
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  CollageClassroom: [CollageClassroom!]
  _count: CollageDepartmentCount!
}

type FacultyCount {
  CollageDepartment: Int!
  ClassroomSession: Int!
  ClassroomAttendance: Int!
  ClassroomQuiz: Int!
}

type Faculty {
  id: ID!
  name: String!
  displayName: String!
  dateOfBirth: DateTime!
  email: String!
  password: String!
  notificationMail: String!
  contactNo: String!
  emailVerified: Boolean!
  emailOtp: Int
  emailOtpSentTime: DateTime
  lastLogin: DateTime
  uuid: String!
  ip: String
  location: String
  adminId: Int!
  admin: Admin!
  facultyTypeId: Int!
  facultyType: FacultyType
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  Address: Address
  CollageDepartment: [CollageDepartment!]
  ClassroomSession: [ClassroomSession!]
  ClassroomAttendance: [ClassroomAttendance!]
  ClassroomQuiz: [ClassroomQuiz!]
  _count: FacultyCount!
}

type ClassroomAttendance {
  id: ID!
  semester: Int!
  studentId: Int!
  student: Student!
  facultyId: Int!
  faculty: Faculty!
  classroomSessionId: Int!
  classroomSession: ClassroomSession!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}

type StudentFee {
  id: ID!
  semester: Int!
  partial: Boolean!
  amount: Float!
  studentId: Int!
  student: Student!
  approved: Boolean!
  adminId: Int!
  admin: Admin!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}

type StudentCount {
  ClassroomAttendance: Int!
  QuizAttempts: Int!
  QuizResult: Int!
  StudentFee: Int!
}

type Student {
  id: ID!
  name: String!
  displayName: String!
  dateOfBirth: DateTime!
  email: String!
  password: String!
  notificationMail: String!
  contactNo: String!
  emailVerified: Boolean!
  emailOtp: Int
  emailOtpSentTime: DateTime
  lastLogin: DateTime
  uuid: String!
  ip: String
  location: String
  adminId: Int!
  admin: Admin!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  Address: Address
  ClassroomAttendance: [ClassroomAttendance!]
  QuizAttempts: [QuizAttempts!]
  QuizResult: [QuizResult!]
  StudentFee: [StudentFee!]
  _count: StudentCount!
}

type Address {
  id: ID!
  name: String!
  line1: String!
  line2: String
  zipcode: String!
  contactNo: String!
  cityId: Int!
  city: City!
  studentId: Int
  student: Student
  facultyId: Int
  faculty: Faculty
  adminId: Int
  admin: Admin
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}

type CourseCategoryCount {
  Course: Int!
}

type CourseCategory {
  id: ID!
  name: String!
  description: String!
  thumbnail: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  Course: [Course!]
  _count: CourseCategoryCount!
}

type CourseChargeTypeCount {
  Course: Int!
}

type CourseChargeType {
  id: ID!
  name: String!
  description: String!
  thumbnail: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  Course: [Course!]
  _count: CourseChargeTypeCount!
}

type CourseMeta {
  id: ID!
  name: String!
  value: String!
  courseId: Int!
  course: Course!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}

type CourseVideoMeta {
  id: ID!
  name: String!
  value: String!
  videoId: Int!
  video: CourseVideo!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}

type CourseVideoCount {
  CourseVideoMeta: Int!
}

type CourseVideo {
  id: ID!
  title: String!
  description: String!
  thumbnail: String!
  video: String!
  courseId: Int!
  course: Course!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  CourseVideoMeta: [CourseVideoMeta!]
  _count: CourseVideoCount!
}

type CourseCount {
  CourseMeta: Int!
  CourseVideo: Int!
}

type Course {
  id: ID!
  name: String!
  thumbnail: String!
  createdBy: Int!
  creator: Admin
  description: String!
  price: Float!
  banner: String!
  active: Boolean!
  paid: Boolean!
  slug: String!
  trailer: String!
  duration: String!
  languages: [String!]
  courseCategoryId: Int!
  courseCategory: CourseCategory!
  courseChargeTypeId: Int!
  courseChargeType: CourseChargeType!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  CourseMeta: [CourseMeta!]
  CourseVideo: [CourseVideo!]
  _count: CourseCount!
}

type CollageCircular {
  id: ID!
  title: String!
  description: String
  file: String
  for: CircularFor!
  metas: String
  adminId: Int!
  admin: Admin!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}

enum CircularFor {
  Student
  Faculty
  Admin
  All
}

type AdminCount {
  courses: Int!
  Student: Int!
  Faculty: Int!
  CollageCircular: Int!
  StudentFee: Int!
}

type Admin {
  id: ID!
  name: String!
  displayName: String!
  dateOfBirth: DateTime!
  email: String!
  password: String!
  notificationMail: String!
  contactNo: String!
  emailVerified: Boolean!
  emailOtp: Int
  emailOtpSentTime: DateTime
  lastLogin: DateTime
  uuid: String!
  ip: String
  location: String
  permissions: String!
  adminTypeId: Int!
  adminType: AdminType
  adminDepartmentId: Int!
  adminDepartment: AdminDepartment
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  Address: Address
  courses: [Course!]
  Student: [Student!]
  Faculty: [Faculty!]
  CollageCircular: [CollageCircular!]
  StudentFee: [StudentFee!]
  _count: AdminCount!
}

type Module {
  id: ID!
  name: String!
  description: String!
  thumbnail: String!
  active: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}

type Query {
  admins(condition: AdminWhereInput): [Admin!]!
  admin(id: AdminWhereUniqueInput!): Admin!
  students(condition: StudentWhereInput): [Student!]!
  student(id: StudentWhereUniqueInput!): Student!
  facultys(condition: FacultyWhereInput): [Faculty!]!
  faculty(id: FacultyWhereUniqueInput!): Faculty!
  adminTypes(condition: AdminTypeWhereInput): [AdminType!]!
  adminType(id: AdminTypeWhereUniqueInput!): AdminType!
  adminDepartments(condition: AdminDepartmentWhereInput): [AdminDepartment!]!
  adminDepartment(id: AdminDepartmentWhereUniqueInput!): AdminDepartment!
  facultyTypes(condition: FacultyTypeWhereInput): [FacultyType!]!
  facultyType(id: FacultyTypeWhereUniqueInput!): FacultyType!
  modules(condition: ModuleWhereInput): [Module!]!
  module(id: ModuleWhereUniqueInput!): Module!
  addresses(condition: AddressWhereInput): [Address!]!
  address(id: AddressWhereUniqueInput!): Address!
  countrys(condition: CountryWhereInput): [Country!]!
  country(id: CountryWhereUniqueInput!): Country!
  states(condition: StateWhereInput): [State!]!
  state(id: StateWhereUniqueInput!): State!
  cities(condition: CityWhereInput): [City!]!
  city(id: CityWhereUniqueInput!): City!
  collageDepartments(condition: CollageDepartmentWhereInput): [CollageDepartment!]!
  collageDepartment(id: CollageDepartmentWhereUniqueInput!): CollageDepartment!
  collageClassrooms(condition: CollageClassroomWhereInput): [CollageClassroom!]!
  collageClassroom(id: CollageClassroomWhereUniqueInput!): CollageClassroom!
  classroomSessions(condition: ClassroomSessionWhereInput): [ClassroomSession!]!
  classroomSession(id: ClassroomSessionWhereUniqueInput!): ClassroomSession!
  classroomAttendances(condition: ClassroomAttendanceWhereInput): [ClassroomAttendance!]!
  classroomAttendance(id: ClassroomAttendanceWhereUniqueInput!): ClassroomAttendance!
  classroomQuizs(condition: ClassroomQuizWhereInput): [ClassroomQuiz!]!
  classroomQuiz(id: ClassroomQuizWhereUniqueInput!): ClassroomQuiz!
}

input AdminWhereInput {
  AND: [AdminWhereInput!]
  OR: [AdminWhereInput!]
  NOT: [AdminWhereInput!]
  id: IntFilter
  name: StringFilter
  displayName: StringFilter
  dateOfBirth: DateTimeFilter
  email: StringFilter
  password: StringFilter
  notificationMail: StringFilter
  contactNo: StringFilter
  emailVerified: BoolFilter
  emailOtp: IntNullableFilter
  emailOtpSentTime: DateTimeNullableFilter
  lastLogin: DateTimeNullableFilter
  uuid: StringFilter
  ip: StringNullableFilter
  location: StringNullableFilter
  permissions: StringFilter
  adminTypeId: IntFilter
  adminType: AdminTypeRelationFilter
  adminDepartmentId: IntFilter
  adminDepartment: AdminDepartmentRelationFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
  Address: AddressRelationFilter
  courses: CourseListRelationFilter
  Student: StudentListRelationFilter
  Faculty: FacultyListRelationFilter
  CollageCircular: CollageCircularListRelationFilter
  StudentFee: StudentFeeListRelationFilter
}

input IntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input NestedIntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringFilter
}

enum QueryMode {
  default
  insensitive
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input DateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input IntNullableFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntNullableFilter
}

input NestedIntNullableFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntNullableFilter
}

input DateTimeNullableFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeNullableFilter
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeNullableFilter
}

input StringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringNullableFilter
}

input NestedStringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableFilter
}

input AdminTypeRelationFilter {
  is: AdminTypeWhereInput
  isNot: AdminTypeWhereInput
}

input AdminTypeWhereInput {
  AND: [AdminTypeWhereInput!]
  OR: [AdminTypeWhereInput!]
  NOT: [AdminTypeWhereInput!]
  id: IntFilter
  name: StringFilter
  description: StringFilter
  thumbnail: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
  Admin: AdminListRelationFilter
}

input AdminListRelationFilter {
  every: AdminWhereInput
  some: AdminWhereInput
  none: AdminWhereInput
}

input AdminDepartmentRelationFilter {
  is: AdminDepartmentWhereInput
  isNot: AdminDepartmentWhereInput
}

input AdminDepartmentWhereInput {
  AND: [AdminDepartmentWhereInput!]
  OR: [AdminDepartmentWhereInput!]
  NOT: [AdminDepartmentWhereInput!]
  id: IntFilter
  name: StringFilter
  description: StringFilter
  thumbnail: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
  Admin: AdminListRelationFilter
}

input AddressRelationFilter {
  is: AddressWhereInput
  isNot: AddressWhereInput
}

input AddressWhereInput {
  AND: [AddressWhereInput!]
  OR: [AddressWhereInput!]
  NOT: [AddressWhereInput!]
  id: IntFilter
  name: StringFilter
  line1: StringFilter
  line2: StringNullableFilter
  zipcode: BigIntFilter
  contactNo: StringFilter
  cityId: IntFilter
  city: CityRelationFilter
  studentId: IntNullableFilter
  student: StudentRelationFilter
  facultyId: IntNullableFilter
  faculty: FacultyRelationFilter
  adminId: IntNullableFilter
  admin: AdminRelationFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
}

input BigIntFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  not: NestedBigIntFilter
}

input NestedBigIntFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  not: NestedBigIntFilter
}

input CityRelationFilter {
  is: CityWhereInput
  isNot: CityWhereInput
}

input CityWhereInput {
  AND: [CityWhereInput!]
  OR: [CityWhereInput!]
  NOT: [CityWhereInput!]
  id: IntFilter
  name: StringFilter
  description: StringNullableFilter
  image: StringNullableFilter
  stateId: IntFilter
  state: StateRelationFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
  Address: AddressListRelationFilter
}

input StateRelationFilter {
  is: StateWhereInput
  isNot: StateWhereInput
}

input StateWhereInput {
  AND: [StateWhereInput!]
  OR: [StateWhereInput!]
  NOT: [StateWhereInput!]
  id: IntFilter
  name: StringFilter
  description: StringNullableFilter
  image: StringNullableFilter
  countryId: IntFilter
  country: CountryRelationFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
  City: CityListRelationFilter
}

input CountryRelationFilter {
  is: CountryWhereInput
  isNot: CountryWhereInput
}

input CountryWhereInput {
  AND: [CountryWhereInput!]
  OR: [CountryWhereInput!]
  NOT: [CountryWhereInput!]
  id: IntFilter
  name: StringFilter
  description: StringNullableFilter
  image: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
  State: StateListRelationFilter
}

input StateListRelationFilter {
  every: StateWhereInput
  some: StateWhereInput
  none: StateWhereInput
}

input CityListRelationFilter {
  every: CityWhereInput
  some: CityWhereInput
  none: CityWhereInput
}

input AddressListRelationFilter {
  every: AddressWhereInput
  some: AddressWhereInput
  none: AddressWhereInput
}

input StudentRelationFilter {
  is: StudentWhereInput
  isNot: StudentWhereInput
}

input StudentWhereInput {
  AND: [StudentWhereInput!]
  OR: [StudentWhereInput!]
  NOT: [StudentWhereInput!]
  id: IntFilter
  name: StringFilter
  displayName: StringFilter
  dateOfBirth: DateTimeFilter
  email: StringFilter
  password: StringFilter
  notificationMail: StringFilter
  contactNo: StringFilter
  emailVerified: BoolFilter
  emailOtp: IntNullableFilter
  emailOtpSentTime: DateTimeNullableFilter
  lastLogin: DateTimeNullableFilter
  uuid: StringFilter
  ip: StringNullableFilter
  location: StringNullableFilter
  adminId: IntFilter
  admin: AdminRelationFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
  Address: AddressRelationFilter
  ClassroomAttendance: ClassroomAttendanceListRelationFilter
  QuizAttempts: QuizAttemptsListRelationFilter
  QuizResult: QuizResultListRelationFilter
  StudentFee: StudentFeeListRelationFilter
}

input AdminRelationFilter {
  is: AdminWhereInput
  isNot: AdminWhereInput
}

input ClassroomAttendanceListRelationFilter {
  every: ClassroomAttendanceWhereInput
  some: ClassroomAttendanceWhereInput
  none: ClassroomAttendanceWhereInput
}

input ClassroomAttendanceWhereInput {
  AND: [ClassroomAttendanceWhereInput!]
  OR: [ClassroomAttendanceWhereInput!]
  NOT: [ClassroomAttendanceWhereInput!]
  id: IntFilter
  semester: IntFilter
  studentId: IntFilter
  student: StudentRelationFilter
  facultyId: IntFilter
  faculty: FacultyRelationFilter
  classroomSessionId: IntFilter
  classroomSession: ClassroomSessionRelationFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
}

input FacultyRelationFilter {
  is: FacultyWhereInput
  isNot: FacultyWhereInput
}

input FacultyWhereInput {
  AND: [FacultyWhereInput!]
  OR: [FacultyWhereInput!]
  NOT: [FacultyWhereInput!]
  id: IntFilter
  name: StringFilter
  displayName: StringFilter
  dateOfBirth: DateTimeFilter
  email: StringFilter
  password: StringFilter
  notificationMail: StringFilter
  contactNo: StringFilter
  emailVerified: BoolFilter
  emailOtp: IntNullableFilter
  emailOtpSentTime: DateTimeNullableFilter
  lastLogin: DateTimeNullableFilter
  uuid: StringFilter
  ip: StringNullableFilter
  location: StringNullableFilter
  adminId: IntFilter
  admin: AdminRelationFilter
  facultyTypeId: IntFilter
  facultyType: FacultyTypeRelationFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
  Address: AddressRelationFilter
  CollageDepartment: CollageDepartmentListRelationFilter
  ClassroomSession: ClassroomSessionListRelationFilter
  ClassroomAttendance: ClassroomAttendanceListRelationFilter
  ClassroomQuiz: ClassroomQuizListRelationFilter
}

input FacultyTypeRelationFilter {
  is: FacultyTypeWhereInput
  isNot: FacultyTypeWhereInput
}

input FacultyTypeWhereInput {
  AND: [FacultyTypeWhereInput!]
  OR: [FacultyTypeWhereInput!]
  NOT: [FacultyTypeWhereInput!]
  id: IntFilter
  name: StringFilter
  description: StringFilter
  thumbnail: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
  Faculty: FacultyListRelationFilter
}

input FacultyListRelationFilter {
  every: FacultyWhereInput
  some: FacultyWhereInput
  none: FacultyWhereInput
}

input CollageDepartmentListRelationFilter {
  every: CollageDepartmentWhereInput
  some: CollageDepartmentWhereInput
  none: CollageDepartmentWhereInput
}

input CollageDepartmentWhereInput {
  AND: [CollageDepartmentWhereInput!]
  OR: [CollageDepartmentWhereInput!]
  NOT: [CollageDepartmentWhereInput!]
  id: IntFilter
  name: StringFilter
  description: StringFilter
  thumbnail: StringFilter
  facultyId: IntFilter
  faculty: FacultyRelationFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
  CollageClassroom: CollageClassroomListRelationFilter
}

input CollageClassroomListRelationFilter {
  every: CollageClassroomWhereInput
  some: CollageClassroomWhereInput
  none: CollageClassroomWhereInput
}

input CollageClassroomWhereInput {
  AND: [CollageClassroomWhereInput!]
  OR: [CollageClassroomWhereInput!]
  NOT: [CollageClassroomWhereInput!]
  id: IntFilter
  name: StringFilter
  description: StringFilter
  classCode: BigIntFilter
  syllabus: StringFilter
  thumbnail: StringFilter
  collageDepartmentId: IntFilter
  collageDepartment: CollageDepartmentRelationFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
  ClassroomSession: ClassroomSessionListRelationFilter
  ClassroomQuiz: ClassroomQuizListRelationFilter
}

input CollageDepartmentRelationFilter {
  is: CollageDepartmentWhereInput
  isNot: CollageDepartmentWhereInput
}

input ClassroomSessionListRelationFilter {
  every: ClassroomSessionWhereInput
  some: ClassroomSessionWhereInput
  none: ClassroomSessionWhereInput
}

input ClassroomSessionWhereInput {
  AND: [ClassroomSessionWhereInput!]
  OR: [ClassroomSessionWhereInput!]
  NOT: [ClassroomSessionWhereInput!]
  id: IntFilter
  name: StringFilter
  description: StringFilter
  collageClassroomId: IntFilter
  collageClassroom: CollageClassroomRelationFilter
  active: BoolFilter
  meta: JsonFilter
  attendanceActive: BoolFilter
  facultyId: IntFilter
  faculty: FacultyRelationFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
  ClassroomAttendance: ClassroomAttendanceListRelationFilter
}

input CollageClassroomRelationFilter {
  is: CollageClassroomWhereInput
  isNot: CollageClassroomWhereInput
}

input JsonFilter {
  equals: JSON
  not: JSON
}

input ClassroomQuizListRelationFilter {
  every: ClassroomQuizWhereInput
  some: ClassroomQuizWhereInput
  none: ClassroomQuizWhereInput
}

input ClassroomQuizWhereInput {
  AND: [ClassroomQuizWhereInput!]
  OR: [ClassroomQuizWhereInput!]
  NOT: [ClassroomQuizWhereInput!]
  id: IntFilter
  name: StringFilter
  description: StringFilter
  takeTime: DateTimeFilter
  duration: StringFilter
  collageClassroomId: IntFilter
  collageClassroom: CollageClassroomRelationFilter
  facultyId: IntFilter
  faculty: FacultyRelationFilter
  active: BoolFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
  QuizQuestion: QuizQuestionListRelationFilter
  QuizAttempts: QuizAttemptsListRelationFilter
  QuizResult: QuizResultListRelationFilter
}

input QuizQuestionListRelationFilter {
  every: QuizQuestionWhereInput
  some: QuizQuestionWhereInput
  none: QuizQuestionWhereInput
}

input QuizQuestionWhereInput {
  AND: [QuizQuestionWhereInput!]
  OR: [QuizQuestionWhereInput!]
  NOT: [QuizQuestionWhereInput!]
  id: IntFilter
  question: StringFilter
  answer1: StringFilter
  answer2: StringFilter
  answer3: StringNullableFilter
  answer4: StringNullableFilter
  correctAnswer: StringFilter
  classroomQuizId: IntFilter
  classroomQuiz: ClassroomQuizRelationFilter
  image: StringNullableFilter
  marks: IntFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
  QuizAttempts: QuizAttemptsListRelationFilter
}

input ClassroomQuizRelationFilter {
  is: ClassroomQuizWhereInput
  isNot: ClassroomQuizWhereInput
}

input QuizAttemptsListRelationFilter {
  every: QuizAttemptsWhereInput
  some: QuizAttemptsWhereInput
  none: QuizAttemptsWhereInput
}

input QuizAttemptsWhereInput {
  AND: [QuizAttemptsWhereInput!]
  OR: [QuizAttemptsWhereInput!]
  NOT: [QuizAttemptsWhereInput!]
  id: IntFilter
  quizQuestionId: IntFilter
  quizQuestion: QuizQuestionRelationFilter
  answer: StringFilter
  studentId: IntFilter
  student: StudentRelationFilter
  classroomQuizId: IntFilter
  classroomQuiz: ClassroomQuizRelationFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
}

input QuizQuestionRelationFilter {
  is: QuizQuestionWhereInput
  isNot: QuizQuestionWhereInput
}

input QuizResultListRelationFilter {
  every: QuizResultWhereInput
  some: QuizResultWhereInput
  none: QuizResultWhereInput
}

input QuizResultWhereInput {
  AND: [QuizResultWhereInput!]
  OR: [QuizResultWhereInput!]
  NOT: [QuizResultWhereInput!]
  id: IntFilter
  totalMarks: IntFilter
  marksGained: IntFilter
  studentId: IntFilter
  student: StudentRelationFilter
  classroomQuizId: IntFilter
  classroomQuiz: ClassroomQuizRelationFilter
  semester: IntFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
}

input ClassroomSessionRelationFilter {
  is: ClassroomSessionWhereInput
  isNot: ClassroomSessionWhereInput
}

input StudentFeeListRelationFilter {
  every: StudentFeeWhereInput
  some: StudentFeeWhereInput
  none: StudentFeeWhereInput
}

input StudentFeeWhereInput {
  AND: [StudentFeeWhereInput!]
  OR: [StudentFeeWhereInput!]
  NOT: [StudentFeeWhereInput!]
  id: IntFilter
  semester: IntFilter
  partial: BoolFilter
  amount: FloatFilter
  studentId: IntFilter
  student: StudentRelationFilter
  approved: BoolFilter
  adminId: IntFilter
  admin: AdminRelationFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
}

input FloatFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: NestedFloatFilter
}

input NestedFloatFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: NestedFloatFilter
}

input CourseListRelationFilter {
  every: CourseWhereInput
  some: CourseWhereInput
  none: CourseWhereInput
}

input CourseWhereInput {
  AND: [CourseWhereInput!]
  OR: [CourseWhereInput!]
  NOT: [CourseWhereInput!]
  id: IntFilter
  name: StringFilter
  thumbnail: StringFilter
  createdBy: IntFilter
  creator: AdminRelationFilter
  description: StringFilter
  price: FloatFilter
  banner: StringFilter
  active: BoolFilter
  paid: BoolFilter
  slug: StringFilter
  trailer: StringFilter
  duration: StringFilter
  languages: StringNullableListFilter
  courseCategoryId: IntFilter
  courseCategory: CourseCategoryRelationFilter
  courseChargeTypeId: IntFilter
  courseChargeType: CourseChargeTypeRelationFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
  CourseMeta: CourseMetaListRelationFilter
  CourseVideo: CourseVideoListRelationFilter
}

input StringNullableListFilter {
  equals: [String!]
  has: String
  hasEvery: [String!]
  hasSome: [String!]
  isEmpty: Boolean
}

input CourseCategoryRelationFilter {
  is: CourseCategoryWhereInput
  isNot: CourseCategoryWhereInput
}

input CourseCategoryWhereInput {
  AND: [CourseCategoryWhereInput!]
  OR: [CourseCategoryWhereInput!]
  NOT: [CourseCategoryWhereInput!]
  id: IntFilter
  name: StringFilter
  description: StringFilter
  thumbnail: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
  Course: CourseListRelationFilter
}

input CourseChargeTypeRelationFilter {
  is: CourseChargeTypeWhereInput
  isNot: CourseChargeTypeWhereInput
}

input CourseChargeTypeWhereInput {
  AND: [CourseChargeTypeWhereInput!]
  OR: [CourseChargeTypeWhereInput!]
  NOT: [CourseChargeTypeWhereInput!]
  id: IntFilter
  name: StringFilter
  description: StringFilter
  thumbnail: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
  Course: CourseListRelationFilter
}

input CourseMetaListRelationFilter {
  every: CourseMetaWhereInput
  some: CourseMetaWhereInput
  none: CourseMetaWhereInput
}

input CourseMetaWhereInput {
  AND: [CourseMetaWhereInput!]
  OR: [CourseMetaWhereInput!]
  NOT: [CourseMetaWhereInput!]
  id: IntFilter
  name: StringFilter
  value: StringFilter
  courseId: IntFilter
  course: CourseRelationFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
}

input CourseRelationFilter {
  is: CourseWhereInput
  isNot: CourseWhereInput
}

input CourseVideoListRelationFilter {
  every: CourseVideoWhereInput
  some: CourseVideoWhereInput
  none: CourseVideoWhereInput
}

input CourseVideoWhereInput {
  AND: [CourseVideoWhereInput!]
  OR: [CourseVideoWhereInput!]
  NOT: [CourseVideoWhereInput!]
  id: IntFilter
  title: StringFilter
  description: StringFilter
  thumbnail: StringFilter
  video: StringFilter
  courseId: IntFilter
  course: CourseRelationFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
  CourseVideoMeta: CourseVideoMetaListRelationFilter
}

input CourseVideoMetaListRelationFilter {
  every: CourseVideoMetaWhereInput
  some: CourseVideoMetaWhereInput
  none: CourseVideoMetaWhereInput
}

input CourseVideoMetaWhereInput {
  AND: [CourseVideoMetaWhereInput!]
  OR: [CourseVideoMetaWhereInput!]
  NOT: [CourseVideoMetaWhereInput!]
  id: IntFilter
  name: StringFilter
  value: StringFilter
  videoId: IntFilter
  video: CourseVideoRelationFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
}

input CourseVideoRelationFilter {
  is: CourseVideoWhereInput
  isNot: CourseVideoWhereInput
}

input StudentListRelationFilter {
  every: StudentWhereInput
  some: StudentWhereInput
  none: StudentWhereInput
}

input CollageCircularListRelationFilter {
  every: CollageCircularWhereInput
  some: CollageCircularWhereInput
  none: CollageCircularWhereInput
}

input CollageCircularWhereInput {
  AND: [CollageCircularWhereInput!]
  OR: [CollageCircularWhereInput!]
  NOT: [CollageCircularWhereInput!]
  id: IntFilter
  title: StringFilter
  description: StringNullableFilter
  file: StringNullableFilter
  for: EnumCircularForFilter
  metas: StringNullableFilter
  adminId: IntFilter
  admin: AdminRelationFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
}

input EnumCircularForFilter {
  equals: CircularFor
  in: [CircularFor!]
  notIn: [CircularFor!]
  not: NestedEnumCircularForFilter
}

input NestedEnumCircularForFilter {
  equals: CircularFor
  in: [CircularFor!]
  notIn: [CircularFor!]
  not: NestedEnumCircularForFilter
}

input AdminWhereUniqueInput {
  id: Int
  displayName: String
}

input StudentWhereUniqueInput {
  id: Int
  displayName: String
}

input FacultyWhereUniqueInput {
  id: Int
  displayName: String
}

input AdminTypeWhereUniqueInput {
  id: Int
}

input AdminDepartmentWhereUniqueInput {
  id: Int
}

input FacultyTypeWhereUniqueInput {
  id: Int
}

input ModuleWhereInput {
  AND: [ModuleWhereInput!]
  OR: [ModuleWhereInput!]
  NOT: [ModuleWhereInput!]
  id: IntFilter
  name: StringFilter
  description: StringFilter
  thumbnail: StringFilter
  active: BoolFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
}

input ModuleWhereUniqueInput {
  id: Int
}

input AddressWhereUniqueInput {
  id: Int
  studentId: Int
  facultyId: Int
  adminId: Int
}

input CountryWhereUniqueInput {
  id: Int
}

input StateWhereUniqueInput {
  id: Int
}

input CityWhereUniqueInput {
  id: Int
}

input CollageDepartmentWhereUniqueInput {
  id: Int
}

input CollageClassroomWhereUniqueInput {
  id: Int
}

input ClassroomSessionWhereUniqueInput {
  id: Int
}

input ClassroomAttendanceWhereUniqueInput {
  id: Int
}

input ClassroomQuizWhereUniqueInput {
  id: Int
}

type Mutation {
  createAdmin(createAdminInput: AdminCreateInput!): Admin!
  updateAdmin(id: AdminWhereUniqueInput!, updateAdminInput: AdminUpdateInput!): Admin!
  removeAdmin(id: AdminWhereUniqueInput!): Admin!
  createStudent(createStudentInput: StudentCreateInput!): Student!
  updateStudent(id: StudentWhereUniqueInput!, updateStudentInput: StudentUpdateInput!): Student!
  removeStudent(id: StudentWhereUniqueInput!): Student!
  createFaculty(createFacultyInput: FacultyCreateInput!): Faculty!
  updateFaculty(id: FacultyWhereUniqueInput!, updateFacultyInput: FacultyUpdateInput!): Faculty!
  removeFaculty(id: FacultyWhereUniqueInput!): Faculty!
  createAdminType(createAdminTypeInput: AdminTypeCreateInput!): AdminType!
  updateAdminType(updateAdminTypeInput: AdminTypeUpdateInput!, id: AdminTypeWhereUniqueInput!): AdminType!
  removeAdminType(id: AdminTypeWhereUniqueInput!): AdminType!
  createAdminDepartment(createAdminDepartmentInput: AdminDepartmentCreateInput!): AdminDepartment!
  updateAdminDepartment(updateAdminDepartmentInput: AdminDepartmentUpdateInput!, id: AdminDepartmentWhereUniqueInput!): AdminDepartment!
  removeAdminDepartment(id: AdminDepartmentWhereUniqueInput!): AdminDepartment!
  createFacultyType(createFacultyTypeInput: FacultyTypeCreateInput!): FacultyType!
  updateFacultyType(updateFacultyTypeInput: FacultyTypeUpdateInput!, id: FacultyTypeWhereUniqueInput!): FacultyType!
  removeFacultyType(id: FacultyTypeWhereUniqueInput!): FacultyType!
  createModule(createModuleInput: ModuleCreateInput!): Module!
  updateModule(updateModuleInput: ModuleUpdateInput!, id: ModuleWhereUniqueInput!): Module!
  removeModule(id: ModuleWhereUniqueInput!): Module!
  createAddress(createAddressInput: AddressCreateInput!): Address!
  updateAddress(updateAddressInput: AddressUpdateInput!, id: AddressWhereUniqueInput!): Address!
  removeAddress(id: AddressWhereUniqueInput!): Address!
  createCountry(createCountryInput: CountryCreateInput!): Country!
  updateCountry(updateCountryInput: CountryUpdateInput!, id: CountryWhereUniqueInput!): Country!
  removeCountry(id: CountryWhereUniqueInput!): Country!
  createState(createStateInput: StateCreateInput!): State!
  updateState(id: StateWhereUniqueInput!, updateStateInput: StateUpdateInput!): State!
  removeState(id: StateWhereUniqueInput!): State!
  createCity(createCityInput: CityCreateInput!): City!
  updateCity(id: CityWhereUniqueInput!, updateCityInput: CityUpdateInput!): City!
  removeCity(id: CityWhereUniqueInput!): City!
  createCollageDepartment(createCollageDepartmentInput: CollageDepartmentCreateInput!): CollageDepartment!
  updateCollageDepartment(id: CollageDepartmentWhereUniqueInput!, updateCollageDepartmentInput: CollageDepartmentUpdateInput!): CollageDepartment!
  removeCollageDepartment(id: CollageDepartmentWhereUniqueInput!): CollageDepartment!
  createCollageClassroom(createCollageClassroomInput: CollageClassroomCreateInput!): CollageClassroom!
  updateCollageClassroom(id: CollageClassroomWhereUniqueInput!, updateCollageClassroomInput: CollageClassroomUpdateInput!): CollageClassroom!
  removeCollageClassroom(id: CollageClassroomWhereUniqueInput!): CollageClassroom!
  createClassroomSession(createClassroomSessionInput: ClassroomSessionCreateInput!): ClassroomSession!
  updateClassroomSession(id: ClassroomSessionWhereUniqueInput!, updateClassroomSessionInput: ClassroomSessionUpdateInput!): ClassroomSession!
  removeClassroomSession(id: ClassroomSessionWhereUniqueInput!): ClassroomSession!
  createClassroomAttendance(createClassroomAttendanceInput: ClassroomAttendanceCreateInput!): ClassroomAttendance!
  updateClassroomAttendance(id: ClassroomAttendanceWhereUniqueInput!, updateClassroomAttendanceInput: ClassroomAttendanceUpdateInput!): ClassroomAttendance!
  removeClassroomAttendance(id: ClassroomAttendanceWhereUniqueInput!): ClassroomAttendance!
  createClassroomQuiz(createClassroomQuizInput: ClassroomQuizCreateInput!): ClassroomQuiz!
  updateClassroomQuiz(id: ClassroomQuizWhereUniqueInput!, updateClassroomQuizInput: ClassroomQuizUpdateInput!): ClassroomQuiz!
  removeClassroomQuiz(id: ClassroomQuizWhereUniqueInput!): ClassroomQuiz!
}

input AdminCreateInput {
  name: String!
  displayName: String!
  dateOfBirth: DateTime!
  email: String!
  password: String!
  notificationMail: String!
  contactNo: String!
  emailVerified: Boolean
  emailOtp: Int
  emailOtpSentTime: DateTime
  lastLogin: DateTime
  uuid: String
  ip: String
  location: String
  permissions: String!
  adminType: AdminTypeCreateNestedOneWithoutAdminInput
  adminDepartment: AdminDepartmentCreateNestedOneWithoutAdminInput
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  Address: AddressCreateNestedOneWithoutAdminInput
  courses: CourseCreateNestedManyWithoutCreatorInput
  Student: StudentCreateNestedManyWithoutAdminInput
  Faculty: FacultyCreateNestedManyWithoutAdminInput
  CollageCircular: CollageCircularCreateNestedManyWithoutAdminInput
  StudentFee: StudentFeeCreateNestedManyWithoutAdminInput
}

input AdminTypeCreateNestedOneWithoutAdminInput {
  create: AdminTypeCreateWithoutAdminInput
  connectOrCreate: AdminTypeCreateOrConnectWithoutAdminInput
  connect: AdminTypeWhereUniqueInput
}

input AdminTypeCreateWithoutAdminInput {
  name: String!
  description: String!
  thumbnail: String!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input AdminTypeCreateOrConnectWithoutAdminInput {
  where: AdminTypeWhereUniqueInput!
  create: AdminTypeCreateWithoutAdminInput!
}

input AdminDepartmentCreateNestedOneWithoutAdminInput {
  create: AdminDepartmentCreateWithoutAdminInput
  connectOrCreate: AdminDepartmentCreateOrConnectWithoutAdminInput
  connect: AdminDepartmentWhereUniqueInput
}

input AdminDepartmentCreateWithoutAdminInput {
  name: String!
  description: String!
  thumbnail: String!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input AdminDepartmentCreateOrConnectWithoutAdminInput {
  where: AdminDepartmentWhereUniqueInput!
  create: AdminDepartmentCreateWithoutAdminInput!
}

input AddressCreateNestedOneWithoutAdminInput {
  create: AddressCreateWithoutAdminInput
  connectOrCreate: AddressCreateOrConnectWithoutAdminInput
  connect: AddressWhereUniqueInput
}

input AddressCreateWithoutAdminInput {
  name: String!
  line1: String!
  line2: String
  zipcode: String!
  contactNo: String!
  city: CityCreateNestedOneWithoutAddressInput!
  student: StudentCreateNestedOneWithoutAddressInput
  faculty: FacultyCreateNestedOneWithoutAddressInput
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input CityCreateNestedOneWithoutAddressInput {
  create: CityCreateWithoutAddressInput
  connectOrCreate: CityCreateOrConnectWithoutAddressInput
  connect: CityWhereUniqueInput
}

input CityCreateWithoutAddressInput {
  name: String!
  description: String
  image: String
  state: StateCreateNestedOneWithoutCityInput!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input StateCreateNestedOneWithoutCityInput {
  create: StateCreateWithoutCityInput
  connectOrCreate: StateCreateOrConnectWithoutCityInput
  connect: StateWhereUniqueInput
}

input StateCreateWithoutCityInput {
  name: String!
  description: String
  image: String
  country: CountryCreateNestedOneWithoutStateInput!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input CountryCreateNestedOneWithoutStateInput {
  create: CountryCreateWithoutStateInput
  connectOrCreate: CountryCreateOrConnectWithoutStateInput
  connect: CountryWhereUniqueInput
}

input CountryCreateWithoutStateInput {
  name: String!
  description: String
  image: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input CountryCreateOrConnectWithoutStateInput {
  where: CountryWhereUniqueInput!
  create: CountryCreateWithoutStateInput!
}

input StateCreateOrConnectWithoutCityInput {
  where: StateWhereUniqueInput!
  create: StateCreateWithoutCityInput!
}

input CityCreateOrConnectWithoutAddressInput {
  where: CityWhereUniqueInput!
  create: CityCreateWithoutAddressInput!
}

input StudentCreateNestedOneWithoutAddressInput {
  create: StudentCreateWithoutAddressInput
  connectOrCreate: StudentCreateOrConnectWithoutAddressInput
  connect: StudentWhereUniqueInput
}

input StudentCreateWithoutAddressInput {
  name: String!
  displayName: String!
  dateOfBirth: DateTime!
  email: String!
  password: String!
  notificationMail: String!
  contactNo: String!
  emailVerified: Boolean
  emailOtp: Int
  emailOtpSentTime: DateTime
  lastLogin: DateTime
  uuid: String
  ip: String
  location: String
  admin: AdminCreateNestedOneWithoutStudentInput!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  ClassroomAttendance: ClassroomAttendanceCreateNestedManyWithoutStudentInput
  QuizAttempts: QuizAttemptsCreateNestedManyWithoutStudentInput
  QuizResult: QuizResultCreateNestedManyWithoutStudentInput
  StudentFee: StudentFeeCreateNestedManyWithoutStudentInput
}

input AdminCreateNestedOneWithoutStudentInput {
  create: AdminCreateWithoutStudentInput
  connectOrCreate: AdminCreateOrConnectWithoutStudentInput
  connect: AdminWhereUniqueInput
}

input AdminCreateWithoutStudentInput {
  name: String!
  displayName: String!
  dateOfBirth: DateTime!
  email: String!
  password: String!
  notificationMail: String!
  contactNo: String!
  emailVerified: Boolean
  emailOtp: Int
  emailOtpSentTime: DateTime
  lastLogin: DateTime
  uuid: String
  ip: String
  location: String
  permissions: String!
  adminType: AdminTypeCreateNestedOneWithoutAdminInput
  adminDepartment: AdminDepartmentCreateNestedOneWithoutAdminInput
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  Address: AddressCreateNestedOneWithoutAdminInput
  courses: CourseCreateNestedManyWithoutCreatorInput
  Faculty: FacultyCreateNestedManyWithoutAdminInput
  CollageCircular: CollageCircularCreateNestedManyWithoutAdminInput
  StudentFee: StudentFeeCreateNestedManyWithoutAdminInput
}

input CourseCreateNestedManyWithoutCreatorInput {
  create: [CourseCreateWithoutCreatorInput!]
  connectOrCreate: [CourseCreateOrConnectWithoutCreatorInput!]
  createMany: CourseCreateManyCreatorInputEnvelope
  connect: [CourseWhereUniqueInput!]
}

input CourseCreateWithoutCreatorInput {
  name: String!
  thumbnail: String!
  description: String!
  price: Float!
  banner: String!
  active: Boolean!
  paid: Boolean!
  slug: String!
  trailer: String!
  duration: String!
  languages: CourseCreatelanguagesInput
  courseCategory: CourseCategoryCreateNestedOneWithoutCourseInput!
  courseChargeType: CourseChargeTypeCreateNestedOneWithoutCourseInput!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  CourseMeta: CourseMetaCreateNestedManyWithoutCourseInput
  CourseVideo: CourseVideoCreateNestedManyWithoutCourseInput
}

input CourseCreatelanguagesInput {
  set: [String!]!
}

input CourseCategoryCreateNestedOneWithoutCourseInput {
  create: CourseCategoryCreateWithoutCourseInput
  connectOrCreate: CourseCategoryCreateOrConnectWithoutCourseInput
  connect: CourseCategoryWhereUniqueInput
}

input CourseCategoryCreateWithoutCourseInput {
  name: String!
  description: String!
  thumbnail: String!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input CourseCategoryCreateOrConnectWithoutCourseInput {
  where: CourseCategoryWhereUniqueInput!
  create: CourseCategoryCreateWithoutCourseInput!
}

input CourseCategoryWhereUniqueInput {
  id: Int
  name: String
}

input CourseChargeTypeCreateNestedOneWithoutCourseInput {
  create: CourseChargeTypeCreateWithoutCourseInput
  connectOrCreate: CourseChargeTypeCreateOrConnectWithoutCourseInput
  connect: CourseChargeTypeWhereUniqueInput
}

input CourseChargeTypeCreateWithoutCourseInput {
  name: String!
  description: String!
  thumbnail: String!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input CourseChargeTypeCreateOrConnectWithoutCourseInput {
  where: CourseChargeTypeWhereUniqueInput!
  create: CourseChargeTypeCreateWithoutCourseInput!
}

input CourseChargeTypeWhereUniqueInput {
  id: Int
}

input CourseMetaCreateNestedManyWithoutCourseInput {
  create: [CourseMetaCreateWithoutCourseInput!]
  connectOrCreate: [CourseMetaCreateOrConnectWithoutCourseInput!]
  createMany: CourseMetaCreateManyCourseInputEnvelope
  connect: [CourseMetaWhereUniqueInput!]
}

input CourseMetaCreateWithoutCourseInput {
  name: String!
  value: String!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input CourseMetaCreateOrConnectWithoutCourseInput {
  where: CourseMetaWhereUniqueInput!
  create: CourseMetaCreateWithoutCourseInput!
}

input CourseMetaWhereUniqueInput {
  id: Int
}

input CourseMetaCreateManyCourseInputEnvelope {
  data: [CourseMetaCreateManyCourseInput!]!
  skipDuplicates: Boolean
}

input CourseMetaCreateManyCourseInput {
  id: Int
  name: String!
  value: String!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input CourseVideoCreateNestedManyWithoutCourseInput {
  create: [CourseVideoCreateWithoutCourseInput!]
  connectOrCreate: [CourseVideoCreateOrConnectWithoutCourseInput!]
  createMany: CourseVideoCreateManyCourseInputEnvelope
  connect: [CourseVideoWhereUniqueInput!]
}

input CourseVideoCreateWithoutCourseInput {
  title: String!
  description: String!
  thumbnail: String!
  video: String!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  CourseVideoMeta: CourseVideoMetaCreateNestedManyWithoutVideoInput
}

input CourseVideoMetaCreateNestedManyWithoutVideoInput {
  create: [CourseVideoMetaCreateWithoutVideoInput!]
  connectOrCreate: [CourseVideoMetaCreateOrConnectWithoutVideoInput!]
  createMany: CourseVideoMetaCreateManyVideoInputEnvelope
  connect: [CourseVideoMetaWhereUniqueInput!]
}

input CourseVideoMetaCreateWithoutVideoInput {
  name: String!
  value: String!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input CourseVideoMetaCreateOrConnectWithoutVideoInput {
  where: CourseVideoMetaWhereUniqueInput!
  create: CourseVideoMetaCreateWithoutVideoInput!
}

input CourseVideoMetaWhereUniqueInput {
  id: Int
}

input CourseVideoMetaCreateManyVideoInputEnvelope {
  data: [CourseVideoMetaCreateManyVideoInput!]!
  skipDuplicates: Boolean
}

input CourseVideoMetaCreateManyVideoInput {
  id: Int
  name: String!
  value: String!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input CourseVideoCreateOrConnectWithoutCourseInput {
  where: CourseVideoWhereUniqueInput!
  create: CourseVideoCreateWithoutCourseInput!
}

input CourseVideoWhereUniqueInput {
  id: Int
}

input CourseVideoCreateManyCourseInputEnvelope {
  data: [CourseVideoCreateManyCourseInput!]!
  skipDuplicates: Boolean
}

input CourseVideoCreateManyCourseInput {
  id: Int
  title: String!
  description: String!
  thumbnail: String!
  video: String!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input CourseCreateOrConnectWithoutCreatorInput {
  where: CourseWhereUniqueInput!
  create: CourseCreateWithoutCreatorInput!
}

input CourseWhereUniqueInput {
  id: Int
  name: String
}

input CourseCreateManyCreatorInputEnvelope {
  data: [CourseCreateManyCreatorInput!]!
  skipDuplicates: Boolean
}

input CourseCreateManyCreatorInput {
  id: Int
  name: String!
  thumbnail: String!
  description: String!
  price: Float!
  banner: String!
  active: Boolean!
  paid: Boolean!
  slug: String!
  trailer: String!
  duration: String!
  languages: CourseCreatelanguagesInput
  courseCategoryId: Int!
  courseChargeTypeId: Int!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input FacultyCreateNestedManyWithoutAdminInput {
  create: [FacultyCreateWithoutAdminInput!]
  connectOrCreate: [FacultyCreateOrConnectWithoutAdminInput!]
  createMany: FacultyCreateManyAdminInputEnvelope
  connect: [FacultyWhereUniqueInput!]
}

input FacultyCreateWithoutAdminInput {
  name: String!
  displayName: String!
  dateOfBirth: DateTime!
  email: String!
  password: String!
  notificationMail: String!
  contactNo: String!
  emailVerified: Boolean
  emailOtp: Int
  emailOtpSentTime: DateTime
  lastLogin: DateTime
  uuid: String
  ip: String
  location: String
  facultyType: FacultyTypeCreateNestedOneWithoutFacultyInput
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  Address: AddressCreateNestedOneWithoutFacultyInput
  CollageDepartment: CollageDepartmentCreateNestedManyWithoutFacultyInput
  ClassroomSession: ClassroomSessionCreateNestedManyWithoutFacultyInput
  ClassroomAttendance: ClassroomAttendanceCreateNestedManyWithoutFacultyInput
  ClassroomQuiz: ClassroomQuizCreateNestedManyWithoutFacultyInput
}

input FacultyTypeCreateNestedOneWithoutFacultyInput {
  create: FacultyTypeCreateWithoutFacultyInput
  connectOrCreate: FacultyTypeCreateOrConnectWithoutFacultyInput
  connect: FacultyTypeWhereUniqueInput
}

input FacultyTypeCreateWithoutFacultyInput {
  name: String!
  description: String!
  thumbnail: String!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input FacultyTypeCreateOrConnectWithoutFacultyInput {
  where: FacultyTypeWhereUniqueInput!
  create: FacultyTypeCreateWithoutFacultyInput!
}

input AddressCreateNestedOneWithoutFacultyInput {
  create: AddressCreateWithoutFacultyInput
  connectOrCreate: AddressCreateOrConnectWithoutFacultyInput
  connect: AddressWhereUniqueInput
}

input AddressCreateWithoutFacultyInput {
  name: String!
  line1: String!
  line2: String
  zipcode: String!
  contactNo: String!
  city: CityCreateNestedOneWithoutAddressInput!
  student: StudentCreateNestedOneWithoutAddressInput
  admin: AdminCreateNestedOneWithoutAddressInput
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input AdminCreateNestedOneWithoutAddressInput {
  create: AdminCreateWithoutAddressInput
  connectOrCreate: AdminCreateOrConnectWithoutAddressInput
  connect: AdminWhereUniqueInput
}

input AdminCreateWithoutAddressInput {
  name: String!
  displayName: String!
  dateOfBirth: DateTime!
  email: String!
  password: String!
  notificationMail: String!
  contactNo: String!
  emailVerified: Boolean
  emailOtp: Int
  emailOtpSentTime: DateTime
  lastLogin: DateTime
  uuid: String
  ip: String
  location: String
  permissions: String!
  adminType: AdminTypeCreateNestedOneWithoutAdminInput
  adminDepartment: AdminDepartmentCreateNestedOneWithoutAdminInput
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  courses: CourseCreateNestedManyWithoutCreatorInput
  Student: StudentCreateNestedManyWithoutAdminInput
  Faculty: FacultyCreateNestedManyWithoutAdminInput
  CollageCircular: CollageCircularCreateNestedManyWithoutAdminInput
  StudentFee: StudentFeeCreateNestedManyWithoutAdminInput
}

input StudentCreateNestedManyWithoutAdminInput {
  create: [StudentCreateWithoutAdminInput!]
  connectOrCreate: [StudentCreateOrConnectWithoutAdminInput!]
  createMany: StudentCreateManyAdminInputEnvelope
  connect: [StudentWhereUniqueInput!]
}

input StudentCreateWithoutAdminInput {
  name: String!
  displayName: String!
  dateOfBirth: DateTime!
  email: String!
  password: String!
  notificationMail: String!
  contactNo: String!
  emailVerified: Boolean
  emailOtp: Int
  emailOtpSentTime: DateTime
  lastLogin: DateTime
  uuid: String
  ip: String
  location: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  Address: AddressCreateNestedOneWithoutStudentInput
  ClassroomAttendance: ClassroomAttendanceCreateNestedManyWithoutStudentInput
  QuizAttempts: QuizAttemptsCreateNestedManyWithoutStudentInput
  QuizResult: QuizResultCreateNestedManyWithoutStudentInput
  StudentFee: StudentFeeCreateNestedManyWithoutStudentInput
}

input AddressCreateNestedOneWithoutStudentInput {
  create: AddressCreateWithoutStudentInput
  connectOrCreate: AddressCreateOrConnectWithoutStudentInput
  connect: AddressWhereUniqueInput
}

input AddressCreateWithoutStudentInput {
  name: String!
  line1: String!
  line2: String
  zipcode: String!
  contactNo: String!
  city: CityCreateNestedOneWithoutAddressInput!
  faculty: FacultyCreateNestedOneWithoutAddressInput
  admin: AdminCreateNestedOneWithoutAddressInput
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input FacultyCreateNestedOneWithoutAddressInput {
  create: FacultyCreateWithoutAddressInput
  connectOrCreate: FacultyCreateOrConnectWithoutAddressInput
  connect: FacultyWhereUniqueInput
}

input FacultyCreateWithoutAddressInput {
  name: String!
  displayName: String!
  dateOfBirth: DateTime!
  email: String!
  password: String!
  notificationMail: String!
  contactNo: String!
  emailVerified: Boolean
  emailOtp: Int
  emailOtpSentTime: DateTime
  lastLogin: DateTime
  uuid: String
  ip: String
  location: String
  admin: AdminCreateNestedOneWithoutFacultyInput!
  facultyType: FacultyTypeCreateNestedOneWithoutFacultyInput
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  CollageDepartment: CollageDepartmentCreateNestedManyWithoutFacultyInput
  ClassroomSession: ClassroomSessionCreateNestedManyWithoutFacultyInput
  ClassroomAttendance: ClassroomAttendanceCreateNestedManyWithoutFacultyInput
  ClassroomQuiz: ClassroomQuizCreateNestedManyWithoutFacultyInput
}

input AdminCreateNestedOneWithoutFacultyInput {
  create: AdminCreateWithoutFacultyInput
  connectOrCreate: AdminCreateOrConnectWithoutFacultyInput
  connect: AdminWhereUniqueInput
}

input AdminCreateWithoutFacultyInput {
  name: String!
  displayName: String!
  dateOfBirth: DateTime!
  email: String!
  password: String!
  notificationMail: String!
  contactNo: String!
  emailVerified: Boolean
  emailOtp: Int
  emailOtpSentTime: DateTime
  lastLogin: DateTime
  uuid: String
  ip: String
  location: String
  permissions: String!
  adminType: AdminTypeCreateNestedOneWithoutAdminInput
  adminDepartment: AdminDepartmentCreateNestedOneWithoutAdminInput
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  Address: AddressCreateNestedOneWithoutAdminInput
  courses: CourseCreateNestedManyWithoutCreatorInput
  Student: StudentCreateNestedManyWithoutAdminInput
  CollageCircular: CollageCircularCreateNestedManyWithoutAdminInput
  StudentFee: StudentFeeCreateNestedManyWithoutAdminInput
}

input CollageCircularCreateNestedManyWithoutAdminInput {
  create: [CollageCircularCreateWithoutAdminInput!]
  connectOrCreate: [CollageCircularCreateOrConnectWithoutAdminInput!]
  createMany: CollageCircularCreateManyAdminInputEnvelope
  connect: [CollageCircularWhereUniqueInput!]
}

input CollageCircularCreateWithoutAdminInput {
  title: String!
  description: String
  file: String
  for: CircularFor
  metas: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input CollageCircularCreateOrConnectWithoutAdminInput {
  where: CollageCircularWhereUniqueInput!
  create: CollageCircularCreateWithoutAdminInput!
}

input CollageCircularWhereUniqueInput {
  id: Int
}

input CollageCircularCreateManyAdminInputEnvelope {
  data: [CollageCircularCreateManyAdminInput!]!
  skipDuplicates: Boolean
}

input CollageCircularCreateManyAdminInput {
  id: Int
  title: String!
  description: String
  file: String
  for: CircularFor
  metas: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input StudentFeeCreateNestedManyWithoutAdminInput {
  create: [StudentFeeCreateWithoutAdminInput!]
  connectOrCreate: [StudentFeeCreateOrConnectWithoutAdminInput!]
  createMany: StudentFeeCreateManyAdminInputEnvelope
  connect: [StudentFeeWhereUniqueInput!]
}

input StudentFeeCreateWithoutAdminInput {
  semester: Int!
  partial: Boolean
  amount: Float!
  student: StudentCreateNestedOneWithoutStudentFeeInput!
  approved: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input StudentCreateNestedOneWithoutStudentFeeInput {
  create: StudentCreateWithoutStudentFeeInput
  connectOrCreate: StudentCreateOrConnectWithoutStudentFeeInput
  connect: StudentWhereUniqueInput
}

input StudentCreateWithoutStudentFeeInput {
  name: String!
  displayName: String!
  dateOfBirth: DateTime!
  email: String!
  password: String!
  notificationMail: String!
  contactNo: String!
  emailVerified: Boolean
  emailOtp: Int
  emailOtpSentTime: DateTime
  lastLogin: DateTime
  uuid: String
  ip: String
  location: String
  admin: AdminCreateNestedOneWithoutStudentInput!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  Address: AddressCreateNestedOneWithoutStudentInput
  ClassroomAttendance: ClassroomAttendanceCreateNestedManyWithoutStudentInput
  QuizAttempts: QuizAttemptsCreateNestedManyWithoutStudentInput
  QuizResult: QuizResultCreateNestedManyWithoutStudentInput
}

input ClassroomAttendanceCreateNestedManyWithoutStudentInput {
  create: [ClassroomAttendanceCreateWithoutStudentInput!]
  connectOrCreate: [ClassroomAttendanceCreateOrConnectWithoutStudentInput!]
  createMany: ClassroomAttendanceCreateManyStudentInputEnvelope
  connect: [ClassroomAttendanceWhereUniqueInput!]
}

input ClassroomAttendanceCreateWithoutStudentInput {
  semester: Int!
  faculty: FacultyCreateNestedOneWithoutClassroomAttendanceInput!
  classroomSession: ClassroomSessionCreateNestedOneWithoutClassroomAttendanceInput!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input FacultyCreateNestedOneWithoutClassroomAttendanceInput {
  create: FacultyCreateWithoutClassroomAttendanceInput
  connectOrCreate: FacultyCreateOrConnectWithoutClassroomAttendanceInput
  connect: FacultyWhereUniqueInput
}

input FacultyCreateWithoutClassroomAttendanceInput {
  name: String!
  displayName: String!
  dateOfBirth: DateTime!
  email: String!
  password: String!
  notificationMail: String!
  contactNo: String!
  emailVerified: Boolean
  emailOtp: Int
  emailOtpSentTime: DateTime
  lastLogin: DateTime
  uuid: String
  ip: String
  location: String
  admin: AdminCreateNestedOneWithoutFacultyInput!
  facultyType: FacultyTypeCreateNestedOneWithoutFacultyInput
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  Address: AddressCreateNestedOneWithoutFacultyInput
  CollageDepartment: CollageDepartmentCreateNestedManyWithoutFacultyInput
  ClassroomSession: ClassroomSessionCreateNestedManyWithoutFacultyInput
  ClassroomQuiz: ClassroomQuizCreateNestedManyWithoutFacultyInput
}

input CollageDepartmentCreateNestedManyWithoutFacultyInput {
  create: [CollageDepartmentCreateWithoutFacultyInput!]
  connectOrCreate: [CollageDepartmentCreateOrConnectWithoutFacultyInput!]
  createMany: CollageDepartmentCreateManyFacultyInputEnvelope
  connect: [CollageDepartmentWhereUniqueInput!]
}

input CollageDepartmentCreateWithoutFacultyInput {
  name: String!
  description: String!
  thumbnail: String!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  CollageClassroom: CollageClassroomCreateNestedManyWithoutCollageDepartmentInput
}

input CollageClassroomCreateNestedManyWithoutCollageDepartmentInput {
  create: [CollageClassroomCreateWithoutCollageDepartmentInput!]
  connectOrCreate: [CollageClassroomCreateOrConnectWithoutCollageDepartmentInput!]
  createMany: CollageClassroomCreateManyCollageDepartmentInputEnvelope
  connect: [CollageClassroomWhereUniqueInput!]
}

input CollageClassroomCreateWithoutCollageDepartmentInput {
  name: String!
  description: String!
  classCode: String!
  syllabus: String!
  thumbnail: String!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  ClassroomSession: ClassroomSessionCreateNestedManyWithoutCollageClassroomInput
  ClassroomQuiz: ClassroomQuizCreateNestedManyWithoutCollageClassroomInput
}

input ClassroomSessionCreateNestedManyWithoutCollageClassroomInput {
  create: [ClassroomSessionCreateWithoutCollageClassroomInput!]
  connectOrCreate: [ClassroomSessionCreateOrConnectWithoutCollageClassroomInput!]
  createMany: ClassroomSessionCreateManyCollageClassroomInputEnvelope
  connect: [ClassroomSessionWhereUniqueInput!]
}

input ClassroomSessionCreateWithoutCollageClassroomInput {
  name: String!
  description: String!
  active: Boolean!
  meta: JSON!
  attendanceActive: Boolean!
  faculty: FacultyCreateNestedOneWithoutClassroomSessionInput!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  ClassroomAttendance: ClassroomAttendanceCreateNestedManyWithoutClassroomSessionInput
}

input FacultyCreateNestedOneWithoutClassroomSessionInput {
  create: FacultyCreateWithoutClassroomSessionInput
  connectOrCreate: FacultyCreateOrConnectWithoutClassroomSessionInput
  connect: FacultyWhereUniqueInput
}

input FacultyCreateWithoutClassroomSessionInput {
  name: String!
  displayName: String!
  dateOfBirth: DateTime!
  email: String!
  password: String!
  notificationMail: String!
  contactNo: String!
  emailVerified: Boolean
  emailOtp: Int
  emailOtpSentTime: DateTime
  lastLogin: DateTime
  uuid: String
  ip: String
  location: String
  admin: AdminCreateNestedOneWithoutFacultyInput!
  facultyType: FacultyTypeCreateNestedOneWithoutFacultyInput
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  Address: AddressCreateNestedOneWithoutFacultyInput
  CollageDepartment: CollageDepartmentCreateNestedManyWithoutFacultyInput
  ClassroomAttendance: ClassroomAttendanceCreateNestedManyWithoutFacultyInput
  ClassroomQuiz: ClassroomQuizCreateNestedManyWithoutFacultyInput
}

input ClassroomAttendanceCreateNestedManyWithoutFacultyInput {
  create: [ClassroomAttendanceCreateWithoutFacultyInput!]
  connectOrCreate: [ClassroomAttendanceCreateOrConnectWithoutFacultyInput!]
  createMany: ClassroomAttendanceCreateManyFacultyInputEnvelope
  connect: [ClassroomAttendanceWhereUniqueInput!]
}

input ClassroomAttendanceCreateWithoutFacultyInput {
  semester: Int!
  student: StudentCreateNestedOneWithoutClassroomAttendanceInput!
  classroomSession: ClassroomSessionCreateNestedOneWithoutClassroomAttendanceInput!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input StudentCreateNestedOneWithoutClassroomAttendanceInput {
  create: StudentCreateWithoutClassroomAttendanceInput
  connectOrCreate: StudentCreateOrConnectWithoutClassroomAttendanceInput
  connect: StudentWhereUniqueInput
}

input StudentCreateWithoutClassroomAttendanceInput {
  name: String!
  displayName: String!
  dateOfBirth: DateTime!
  email: String!
  password: String!
  notificationMail: String!
  contactNo: String!
  emailVerified: Boolean
  emailOtp: Int
  emailOtpSentTime: DateTime
  lastLogin: DateTime
  uuid: String
  ip: String
  location: String
  admin: AdminCreateNestedOneWithoutStudentInput!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  Address: AddressCreateNestedOneWithoutStudentInput
  QuizAttempts: QuizAttemptsCreateNestedManyWithoutStudentInput
  QuizResult: QuizResultCreateNestedManyWithoutStudentInput
  StudentFee: StudentFeeCreateNestedManyWithoutStudentInput
}

input QuizAttemptsCreateNestedManyWithoutStudentInput {
  create: [QuizAttemptsCreateWithoutStudentInput!]
  connectOrCreate: [QuizAttemptsCreateOrConnectWithoutStudentInput!]
  createMany: QuizAttemptsCreateManyStudentInputEnvelope
  connect: [QuizAttemptsWhereUniqueInput!]
}

input QuizAttemptsCreateWithoutStudentInput {
  quizQuestion: QuizQuestionCreateNestedOneWithoutQuizAttemptsInput!
  answer: String!
  classroomQuiz: ClassroomQuizCreateNestedOneWithoutQuizAttemptsInput!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input QuizQuestionCreateNestedOneWithoutQuizAttemptsInput {
  create: QuizQuestionCreateWithoutQuizAttemptsInput
  connectOrCreate: QuizQuestionCreateOrConnectWithoutQuizAttemptsInput
  connect: QuizQuestionWhereUniqueInput
}

input QuizQuestionCreateWithoutQuizAttemptsInput {
  question: String!
  answer1: String!
  answer2: String!
  answer3: String
  answer4: String
  correctAnswer: String!
  classroomQuiz: ClassroomQuizCreateNestedOneWithoutQuizQuestionInput!
  image: String
  marks: Int!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input ClassroomQuizCreateNestedOneWithoutQuizQuestionInput {
  create: ClassroomQuizCreateWithoutQuizQuestionInput
  connectOrCreate: ClassroomQuizCreateOrConnectWithoutQuizQuestionInput
  connect: ClassroomQuizWhereUniqueInput
}

input ClassroomQuizCreateWithoutQuizQuestionInput {
  name: String!
  description: String!
  takeTime: DateTime!
  duration: String!
  collageClassroom: CollageClassroomCreateNestedOneWithoutClassroomQuizInput!
  faculty: FacultyCreateNestedOneWithoutClassroomQuizInput!
  active: Boolean!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  QuizAttempts: QuizAttemptsCreateNestedManyWithoutClassroomQuizInput
  QuizResult: QuizResultCreateNestedManyWithoutClassroomQuizInput
}

input CollageClassroomCreateNestedOneWithoutClassroomQuizInput {
  create: CollageClassroomCreateWithoutClassroomQuizInput
  connectOrCreate: CollageClassroomCreateOrConnectWithoutClassroomQuizInput
  connect: CollageClassroomWhereUniqueInput
}

input CollageClassroomCreateWithoutClassroomQuizInput {
  name: String!
  description: String!
  classCode: String!
  syllabus: String!
  thumbnail: String!
  collageDepartment: CollageDepartmentCreateNestedOneWithoutCollageClassroomInput!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  ClassroomSession: ClassroomSessionCreateNestedManyWithoutCollageClassroomInput
}

input CollageDepartmentCreateNestedOneWithoutCollageClassroomInput {
  create: CollageDepartmentCreateWithoutCollageClassroomInput
  connectOrCreate: CollageDepartmentCreateOrConnectWithoutCollageClassroomInput
  connect: CollageDepartmentWhereUniqueInput
}

input CollageDepartmentCreateWithoutCollageClassroomInput {
  name: String!
  description: String!
  thumbnail: String!
  faculty: FacultyCreateNestedOneWithoutCollageDepartmentInput
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input FacultyCreateNestedOneWithoutCollageDepartmentInput {
  create: FacultyCreateWithoutCollageDepartmentInput
  connectOrCreate: FacultyCreateOrConnectWithoutCollageDepartmentInput
  connect: FacultyWhereUniqueInput
}

input FacultyCreateWithoutCollageDepartmentInput {
  name: String!
  displayName: String!
  dateOfBirth: DateTime!
  email: String!
  password: String!
  notificationMail: String!
  contactNo: String!
  emailVerified: Boolean
  emailOtp: Int
  emailOtpSentTime: DateTime
  lastLogin: DateTime
  uuid: String
  ip: String
  location: String
  admin: AdminCreateNestedOneWithoutFacultyInput!
  facultyType: FacultyTypeCreateNestedOneWithoutFacultyInput
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  Address: AddressCreateNestedOneWithoutFacultyInput
  ClassroomSession: ClassroomSessionCreateNestedManyWithoutFacultyInput
  ClassroomAttendance: ClassroomAttendanceCreateNestedManyWithoutFacultyInput
  ClassroomQuiz: ClassroomQuizCreateNestedManyWithoutFacultyInput
}

input ClassroomSessionCreateNestedManyWithoutFacultyInput {
  create: [ClassroomSessionCreateWithoutFacultyInput!]
  connectOrCreate: [ClassroomSessionCreateOrConnectWithoutFacultyInput!]
  createMany: ClassroomSessionCreateManyFacultyInputEnvelope
  connect: [ClassroomSessionWhereUniqueInput!]
}

input ClassroomSessionCreateWithoutFacultyInput {
  name: String!
  description: String!
  collageClassroom: CollageClassroomCreateNestedOneWithoutClassroomSessionInput!
  active: Boolean!
  meta: JSON!
  attendanceActive: Boolean!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  ClassroomAttendance: ClassroomAttendanceCreateNestedManyWithoutClassroomSessionInput
}

input CollageClassroomCreateNestedOneWithoutClassroomSessionInput {
  create: CollageClassroomCreateWithoutClassroomSessionInput
  connectOrCreate: CollageClassroomCreateOrConnectWithoutClassroomSessionInput
  connect: CollageClassroomWhereUniqueInput
}

input CollageClassroomCreateWithoutClassroomSessionInput {
  name: String!
  description: String!
  classCode: String!
  syllabus: String!
  thumbnail: String!
  collageDepartment: CollageDepartmentCreateNestedOneWithoutCollageClassroomInput!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  ClassroomQuiz: ClassroomQuizCreateNestedManyWithoutCollageClassroomInput
}

input ClassroomQuizCreateNestedManyWithoutCollageClassroomInput {
  create: [ClassroomQuizCreateWithoutCollageClassroomInput!]
  connectOrCreate: [ClassroomQuizCreateOrConnectWithoutCollageClassroomInput!]
  createMany: ClassroomQuizCreateManyCollageClassroomInputEnvelope
  connect: [ClassroomQuizWhereUniqueInput!]
}

input ClassroomQuizCreateWithoutCollageClassroomInput {
  name: String!
  description: String!
  takeTime: DateTime!
  duration: String!
  faculty: FacultyCreateNestedOneWithoutClassroomQuizInput!
  active: Boolean!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  QuizQuestion: QuizQuestionCreateNestedManyWithoutClassroomQuizInput
  QuizAttempts: QuizAttemptsCreateNestedManyWithoutClassroomQuizInput
  QuizResult: QuizResultCreateNestedManyWithoutClassroomQuizInput
}

input FacultyCreateNestedOneWithoutClassroomQuizInput {
  create: FacultyCreateWithoutClassroomQuizInput
  connectOrCreate: FacultyCreateOrConnectWithoutClassroomQuizInput
  connect: FacultyWhereUniqueInput
}

input FacultyCreateWithoutClassroomQuizInput {
  name: String!
  displayName: String!
  dateOfBirth: DateTime!
  email: String!
  password: String!
  notificationMail: String!
  contactNo: String!
  emailVerified: Boolean
  emailOtp: Int
  emailOtpSentTime: DateTime
  lastLogin: DateTime
  uuid: String
  ip: String
  location: String
  admin: AdminCreateNestedOneWithoutFacultyInput!
  facultyType: FacultyTypeCreateNestedOneWithoutFacultyInput
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  Address: AddressCreateNestedOneWithoutFacultyInput
  CollageDepartment: CollageDepartmentCreateNestedManyWithoutFacultyInput
  ClassroomSession: ClassroomSessionCreateNestedManyWithoutFacultyInput
  ClassroomAttendance: ClassroomAttendanceCreateNestedManyWithoutFacultyInput
}

input FacultyCreateOrConnectWithoutClassroomQuizInput {
  where: FacultyWhereUniqueInput!
  create: FacultyCreateWithoutClassroomQuizInput!
}

input QuizQuestionCreateNestedManyWithoutClassroomQuizInput {
  create: [QuizQuestionCreateWithoutClassroomQuizInput!]
  connectOrCreate: [QuizQuestionCreateOrConnectWithoutClassroomQuizInput!]
  createMany: QuizQuestionCreateManyClassroomQuizInputEnvelope
  connect: [QuizQuestionWhereUniqueInput!]
}

input QuizQuestionCreateWithoutClassroomQuizInput {
  question: String!
  answer1: String!
  answer2: String!
  answer3: String
  answer4: String
  correctAnswer: String!
  image: String
  marks: Int!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  QuizAttempts: QuizAttemptsCreateNestedManyWithoutQuizQuestionInput
}

input QuizAttemptsCreateNestedManyWithoutQuizQuestionInput {
  create: [QuizAttemptsCreateWithoutQuizQuestionInput!]
  connectOrCreate: [QuizAttemptsCreateOrConnectWithoutQuizQuestionInput!]
  createMany: QuizAttemptsCreateManyQuizQuestionInputEnvelope
  connect: [QuizAttemptsWhereUniqueInput!]
}

input QuizAttemptsCreateWithoutQuizQuestionInput {
  answer: String!
  student: StudentCreateNestedOneWithoutQuizAttemptsInput!
  classroomQuiz: ClassroomQuizCreateNestedOneWithoutQuizAttemptsInput!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input StudentCreateNestedOneWithoutQuizAttemptsInput {
  create: StudentCreateWithoutQuizAttemptsInput
  connectOrCreate: StudentCreateOrConnectWithoutQuizAttemptsInput
  connect: StudentWhereUniqueInput
}

input StudentCreateWithoutQuizAttemptsInput {
  name: String!
  displayName: String!
  dateOfBirth: DateTime!
  email: String!
  password: String!
  notificationMail: String!
  contactNo: String!
  emailVerified: Boolean
  emailOtp: Int
  emailOtpSentTime: DateTime
  lastLogin: DateTime
  uuid: String
  ip: String
  location: String
  admin: AdminCreateNestedOneWithoutStudentInput!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  Address: AddressCreateNestedOneWithoutStudentInput
  ClassroomAttendance: ClassroomAttendanceCreateNestedManyWithoutStudentInput
  QuizResult: QuizResultCreateNestedManyWithoutStudentInput
  StudentFee: StudentFeeCreateNestedManyWithoutStudentInput
}

input QuizResultCreateNestedManyWithoutStudentInput {
  create: [QuizResultCreateWithoutStudentInput!]
  connectOrCreate: [QuizResultCreateOrConnectWithoutStudentInput!]
  createMany: QuizResultCreateManyStudentInputEnvelope
  connect: [QuizResultWhereUniqueInput!]
}

input QuizResultCreateWithoutStudentInput {
  totalMarks: Int!
  marksGained: Int!
  classroomQuiz: ClassroomQuizCreateNestedOneWithoutQuizResultInput!
  semester: Int!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input ClassroomQuizCreateNestedOneWithoutQuizResultInput {
  create: ClassroomQuizCreateWithoutQuizResultInput
  connectOrCreate: ClassroomQuizCreateOrConnectWithoutQuizResultInput
  connect: ClassroomQuizWhereUniqueInput
}

input ClassroomQuizCreateWithoutQuizResultInput {
  name: String!
  description: String!
  takeTime: DateTime!
  duration: String!
  collageClassroom: CollageClassroomCreateNestedOneWithoutClassroomQuizInput!
  faculty: FacultyCreateNestedOneWithoutClassroomQuizInput!
  active: Boolean!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  QuizQuestion: QuizQuestionCreateNestedManyWithoutClassroomQuizInput
  QuizAttempts: QuizAttemptsCreateNestedManyWithoutClassroomQuizInput
}

input QuizAttemptsCreateNestedManyWithoutClassroomQuizInput {
  create: [QuizAttemptsCreateWithoutClassroomQuizInput!]
  connectOrCreate: [QuizAttemptsCreateOrConnectWithoutClassroomQuizInput!]
  createMany: QuizAttemptsCreateManyClassroomQuizInputEnvelope
  connect: [QuizAttemptsWhereUniqueInput!]
}

input QuizAttemptsCreateWithoutClassroomQuizInput {
  quizQuestion: QuizQuestionCreateNestedOneWithoutQuizAttemptsInput!
  answer: String!
  student: StudentCreateNestedOneWithoutQuizAttemptsInput!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input QuizAttemptsCreateOrConnectWithoutClassroomQuizInput {
  where: QuizAttemptsWhereUniqueInput!
  create: QuizAttemptsCreateWithoutClassroomQuizInput!
}

input QuizAttemptsWhereUniqueInput {
  id: Int
}

input QuizAttemptsCreateManyClassroomQuizInputEnvelope {
  data: [QuizAttemptsCreateManyClassroomQuizInput!]!
  skipDuplicates: Boolean
}

input QuizAttemptsCreateManyClassroomQuizInput {
  id: Int
  quizQuestionId: Int!
  answer: String!
  studentId: Int!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input ClassroomQuizCreateOrConnectWithoutQuizResultInput {
  where: ClassroomQuizWhereUniqueInput!
  create: ClassroomQuizCreateWithoutQuizResultInput!
}

input QuizResultCreateOrConnectWithoutStudentInput {
  where: QuizResultWhereUniqueInput!
  create: QuizResultCreateWithoutStudentInput!
}

input QuizResultWhereUniqueInput {
  id: Int
}

input QuizResultCreateManyStudentInputEnvelope {
  data: [QuizResultCreateManyStudentInput!]!
  skipDuplicates: Boolean
}

input QuizResultCreateManyStudentInput {
  id: Int
  totalMarks: Int!
  marksGained: Int!
  classroomQuizId: Int!
  semester: Int!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input StudentFeeCreateNestedManyWithoutStudentInput {
  create: [StudentFeeCreateWithoutStudentInput!]
  connectOrCreate: [StudentFeeCreateOrConnectWithoutStudentInput!]
  createMany: StudentFeeCreateManyStudentInputEnvelope
  connect: [StudentFeeWhereUniqueInput!]
}

input StudentFeeCreateWithoutStudentInput {
  semester: Int!
  partial: Boolean
  amount: Float!
  approved: Boolean
  admin: AdminCreateNestedOneWithoutStudentFeeInput!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input AdminCreateNestedOneWithoutStudentFeeInput {
  create: AdminCreateWithoutStudentFeeInput
  connectOrCreate: AdminCreateOrConnectWithoutStudentFeeInput
  connect: AdminWhereUniqueInput
}

input AdminCreateWithoutStudentFeeInput {
  name: String!
  displayName: String!
  dateOfBirth: DateTime!
  email: String!
  password: String!
  notificationMail: String!
  contactNo: String!
  emailVerified: Boolean
  emailOtp: Int
  emailOtpSentTime: DateTime
  lastLogin: DateTime
  uuid: String
  ip: String
  location: String
  permissions: String!
  adminType: AdminTypeCreateNestedOneWithoutAdminInput
  adminDepartment: AdminDepartmentCreateNestedOneWithoutAdminInput
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  Address: AddressCreateNestedOneWithoutAdminInput
  courses: CourseCreateNestedManyWithoutCreatorInput
  Student: StudentCreateNestedManyWithoutAdminInput
  Faculty: FacultyCreateNestedManyWithoutAdminInput
  CollageCircular: CollageCircularCreateNestedManyWithoutAdminInput
}

input AdminCreateOrConnectWithoutStudentFeeInput {
  where: AdminWhereUniqueInput!
  create: AdminCreateWithoutStudentFeeInput!
}

input StudentFeeCreateOrConnectWithoutStudentInput {
  where: StudentFeeWhereUniqueInput!
  create: StudentFeeCreateWithoutStudentInput!
}

input StudentFeeWhereUniqueInput {
  id: Int
}

input StudentFeeCreateManyStudentInputEnvelope {
  data: [StudentFeeCreateManyStudentInput!]!
  skipDuplicates: Boolean
}

input StudentFeeCreateManyStudentInput {
  id: Int
  semester: Int!
  partial: Boolean
  amount: Float!
  approved: Boolean
  adminId: Int!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input StudentCreateOrConnectWithoutQuizAttemptsInput {
  where: StudentWhereUniqueInput!
  create: StudentCreateWithoutQuizAttemptsInput!
}

input ClassroomQuizCreateNestedOneWithoutQuizAttemptsInput {
  create: ClassroomQuizCreateWithoutQuizAttemptsInput
  connectOrCreate: ClassroomQuizCreateOrConnectWithoutQuizAttemptsInput
  connect: ClassroomQuizWhereUniqueInput
}

input ClassroomQuizCreateWithoutQuizAttemptsInput {
  name: String!
  description: String!
  takeTime: DateTime!
  duration: String!
  collageClassroom: CollageClassroomCreateNestedOneWithoutClassroomQuizInput!
  faculty: FacultyCreateNestedOneWithoutClassroomQuizInput!
  active: Boolean!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  QuizQuestion: QuizQuestionCreateNestedManyWithoutClassroomQuizInput
  QuizResult: QuizResultCreateNestedManyWithoutClassroomQuizInput
}

input QuizResultCreateNestedManyWithoutClassroomQuizInput {
  create: [QuizResultCreateWithoutClassroomQuizInput!]
  connectOrCreate: [QuizResultCreateOrConnectWithoutClassroomQuizInput!]
  createMany: QuizResultCreateManyClassroomQuizInputEnvelope
  connect: [QuizResultWhereUniqueInput!]
}

input QuizResultCreateWithoutClassroomQuizInput {
  totalMarks: Int!
  marksGained: Int!
  student: StudentCreateNestedOneWithoutQuizResultInput!
  semester: Int!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input StudentCreateNestedOneWithoutQuizResultInput {
  create: StudentCreateWithoutQuizResultInput
  connectOrCreate: StudentCreateOrConnectWithoutQuizResultInput
  connect: StudentWhereUniqueInput
}

input StudentCreateWithoutQuizResultInput {
  name: String!
  displayName: String!
  dateOfBirth: DateTime!
  email: String!
  password: String!
  notificationMail: String!
  contactNo: String!
  emailVerified: Boolean
  emailOtp: Int
  emailOtpSentTime: DateTime
  lastLogin: DateTime
  uuid: String
  ip: String
  location: String
  admin: AdminCreateNestedOneWithoutStudentInput!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  Address: AddressCreateNestedOneWithoutStudentInput
  ClassroomAttendance: ClassroomAttendanceCreateNestedManyWithoutStudentInput
  QuizAttempts: QuizAttemptsCreateNestedManyWithoutStudentInput
  StudentFee: StudentFeeCreateNestedManyWithoutStudentInput
}

input StudentCreateOrConnectWithoutQuizResultInput {
  where: StudentWhereUniqueInput!
  create: StudentCreateWithoutQuizResultInput!
}

input QuizResultCreateOrConnectWithoutClassroomQuizInput {
  where: QuizResultWhereUniqueInput!
  create: QuizResultCreateWithoutClassroomQuizInput!
}

input QuizResultCreateManyClassroomQuizInputEnvelope {
  data: [QuizResultCreateManyClassroomQuizInput!]!
  skipDuplicates: Boolean
}

input QuizResultCreateManyClassroomQuizInput {
  id: Int
  totalMarks: Int!
  marksGained: Int!
  studentId: Int!
  semester: Int!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input ClassroomQuizCreateOrConnectWithoutQuizAttemptsInput {
  where: ClassroomQuizWhereUniqueInput!
  create: ClassroomQuizCreateWithoutQuizAttemptsInput!
}

input QuizAttemptsCreateOrConnectWithoutQuizQuestionInput {
  where: QuizAttemptsWhereUniqueInput!
  create: QuizAttemptsCreateWithoutQuizQuestionInput!
}

input QuizAttemptsCreateManyQuizQuestionInputEnvelope {
  data: [QuizAttemptsCreateManyQuizQuestionInput!]!
  skipDuplicates: Boolean
}

input QuizAttemptsCreateManyQuizQuestionInput {
  id: Int
  answer: String!
  studentId: Int!
  classroomQuizId: Int!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input QuizQuestionCreateOrConnectWithoutClassroomQuizInput {
  where: QuizQuestionWhereUniqueInput!
  create: QuizQuestionCreateWithoutClassroomQuizInput!
}

input QuizQuestionWhereUniqueInput {
  id: Int
}

input QuizQuestionCreateManyClassroomQuizInputEnvelope {
  data: [QuizQuestionCreateManyClassroomQuizInput!]!
  skipDuplicates: Boolean
}

input QuizQuestionCreateManyClassroomQuizInput {
  id: Int
  question: String!
  answer1: String!
  answer2: String!
  answer3: String
  answer4: String
  correctAnswer: String!
  image: String
  marks: Int!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input ClassroomQuizCreateOrConnectWithoutCollageClassroomInput {
  where: ClassroomQuizWhereUniqueInput!
  create: ClassroomQuizCreateWithoutCollageClassroomInput!
}

input ClassroomQuizCreateManyCollageClassroomInputEnvelope {
  data: [ClassroomQuizCreateManyCollageClassroomInput!]!
  skipDuplicates: Boolean
}

input ClassroomQuizCreateManyCollageClassroomInput {
  id: Int
  name: String!
  description: String!
  takeTime: DateTime!
  duration: String!
  facultyId: Int!
  active: Boolean!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input CollageClassroomCreateOrConnectWithoutClassroomSessionInput {
  where: CollageClassroomWhereUniqueInput!
  create: CollageClassroomCreateWithoutClassroomSessionInput!
}

input ClassroomAttendanceCreateNestedManyWithoutClassroomSessionInput {
  create: [ClassroomAttendanceCreateWithoutClassroomSessionInput!]
  connectOrCreate: [ClassroomAttendanceCreateOrConnectWithoutClassroomSessionInput!]
  createMany: ClassroomAttendanceCreateManyClassroomSessionInputEnvelope
  connect: [ClassroomAttendanceWhereUniqueInput!]
}

input ClassroomAttendanceCreateWithoutClassroomSessionInput {
  semester: Int!
  student: StudentCreateNestedOneWithoutClassroomAttendanceInput!
  faculty: FacultyCreateNestedOneWithoutClassroomAttendanceInput!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input ClassroomAttendanceCreateOrConnectWithoutClassroomSessionInput {
  where: ClassroomAttendanceWhereUniqueInput!
  create: ClassroomAttendanceCreateWithoutClassroomSessionInput!
}

input ClassroomAttendanceCreateManyClassroomSessionInputEnvelope {
  data: [ClassroomAttendanceCreateManyClassroomSessionInput!]!
  skipDuplicates: Boolean
}

input ClassroomAttendanceCreateManyClassroomSessionInput {
  id: Int
  semester: Int!
  studentId: Int!
  facultyId: Int!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input ClassroomSessionCreateOrConnectWithoutFacultyInput {
  where: ClassroomSessionWhereUniqueInput!
  create: ClassroomSessionCreateWithoutFacultyInput!
}

input ClassroomSessionCreateManyFacultyInputEnvelope {
  data: [ClassroomSessionCreateManyFacultyInput!]!
  skipDuplicates: Boolean
}

input ClassroomSessionCreateManyFacultyInput {
  id: Int
  name: String!
  description: String!
  collageClassroomId: Int!
  active: Boolean!
  meta: JSON!
  attendanceActive: Boolean!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input ClassroomQuizCreateNestedManyWithoutFacultyInput {
  create: [ClassroomQuizCreateWithoutFacultyInput!]
  connectOrCreate: [ClassroomQuizCreateOrConnectWithoutFacultyInput!]
  createMany: ClassroomQuizCreateManyFacultyInputEnvelope
  connect: [ClassroomQuizWhereUniqueInput!]
}

input ClassroomQuizCreateWithoutFacultyInput {
  name: String!
  description: String!
  takeTime: DateTime!
  duration: String!
  collageClassroom: CollageClassroomCreateNestedOneWithoutClassroomQuizInput!
  active: Boolean!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  QuizQuestion: QuizQuestionCreateNestedManyWithoutClassroomQuizInput
  QuizAttempts: QuizAttemptsCreateNestedManyWithoutClassroomQuizInput
  QuizResult: QuizResultCreateNestedManyWithoutClassroomQuizInput
}

input ClassroomQuizCreateOrConnectWithoutFacultyInput {
  where: ClassroomQuizWhereUniqueInput!
  create: ClassroomQuizCreateWithoutFacultyInput!
}

input ClassroomQuizCreateManyFacultyInputEnvelope {
  data: [ClassroomQuizCreateManyFacultyInput!]!
  skipDuplicates: Boolean
}

input ClassroomQuizCreateManyFacultyInput {
  id: Int
  name: String!
  description: String!
  takeTime: DateTime!
  duration: String!
  collageClassroomId: Int!
  active: Boolean!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input FacultyCreateOrConnectWithoutCollageDepartmentInput {
  where: FacultyWhereUniqueInput!
  create: FacultyCreateWithoutCollageDepartmentInput!
}

input CollageDepartmentCreateOrConnectWithoutCollageClassroomInput {
  where: CollageDepartmentWhereUniqueInput!
  create: CollageDepartmentCreateWithoutCollageClassroomInput!
}

input CollageClassroomCreateOrConnectWithoutClassroomQuizInput {
  where: CollageClassroomWhereUniqueInput!
  create: CollageClassroomCreateWithoutClassroomQuizInput!
}

input ClassroomQuizCreateOrConnectWithoutQuizQuestionInput {
  where: ClassroomQuizWhereUniqueInput!
  create: ClassroomQuizCreateWithoutQuizQuestionInput!
}

input QuizQuestionCreateOrConnectWithoutQuizAttemptsInput {
  where: QuizQuestionWhereUniqueInput!
  create: QuizQuestionCreateWithoutQuizAttemptsInput!
}

input QuizAttemptsCreateOrConnectWithoutStudentInput {
  where: QuizAttemptsWhereUniqueInput!
  create: QuizAttemptsCreateWithoutStudentInput!
}

input QuizAttemptsCreateManyStudentInputEnvelope {
  data: [QuizAttemptsCreateManyStudentInput!]!
  skipDuplicates: Boolean
}

input QuizAttemptsCreateManyStudentInput {
  id: Int
  quizQuestionId: Int!
  answer: String!
  classroomQuizId: Int!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input StudentCreateOrConnectWithoutClassroomAttendanceInput {
  where: StudentWhereUniqueInput!
  create: StudentCreateWithoutClassroomAttendanceInput!
}

input ClassroomSessionCreateNestedOneWithoutClassroomAttendanceInput {
  create: ClassroomSessionCreateWithoutClassroomAttendanceInput
  connectOrCreate: ClassroomSessionCreateOrConnectWithoutClassroomAttendanceInput
  connect: ClassroomSessionWhereUniqueInput
}

input ClassroomSessionCreateWithoutClassroomAttendanceInput {
  name: String!
  description: String!
  collageClassroom: CollageClassroomCreateNestedOneWithoutClassroomSessionInput!
  active: Boolean!
  meta: JSON!
  attendanceActive: Boolean!
  faculty: FacultyCreateNestedOneWithoutClassroomSessionInput!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input ClassroomSessionCreateOrConnectWithoutClassroomAttendanceInput {
  where: ClassroomSessionWhereUniqueInput!
  create: ClassroomSessionCreateWithoutClassroomAttendanceInput!
}

input ClassroomAttendanceCreateOrConnectWithoutFacultyInput {
  where: ClassroomAttendanceWhereUniqueInput!
  create: ClassroomAttendanceCreateWithoutFacultyInput!
}

input ClassroomAttendanceCreateManyFacultyInputEnvelope {
  data: [ClassroomAttendanceCreateManyFacultyInput!]!
  skipDuplicates: Boolean
}

input ClassroomAttendanceCreateManyFacultyInput {
  id: Int
  semester: Int!
  studentId: Int!
  classroomSessionId: Int!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input FacultyCreateOrConnectWithoutClassroomSessionInput {
  where: FacultyWhereUniqueInput!
  create: FacultyCreateWithoutClassroomSessionInput!
}

input ClassroomSessionCreateOrConnectWithoutCollageClassroomInput {
  where: ClassroomSessionWhereUniqueInput!
  create: ClassroomSessionCreateWithoutCollageClassroomInput!
}

input ClassroomSessionCreateManyCollageClassroomInputEnvelope {
  data: [ClassroomSessionCreateManyCollageClassroomInput!]!
  skipDuplicates: Boolean
}

input ClassroomSessionCreateManyCollageClassroomInput {
  id: Int
  name: String!
  description: String!
  active: Boolean!
  meta: JSON!
  attendanceActive: Boolean!
  facultyId: Int!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input CollageClassroomCreateOrConnectWithoutCollageDepartmentInput {
  where: CollageClassroomWhereUniqueInput!
  create: CollageClassroomCreateWithoutCollageDepartmentInput!
}

input CollageClassroomCreateManyCollageDepartmentInputEnvelope {
  data: [CollageClassroomCreateManyCollageDepartmentInput!]!
  skipDuplicates: Boolean
}

input CollageClassroomCreateManyCollageDepartmentInput {
  id: Int
  name: String!
  description: String!
  classCode: String!
  syllabus: String!
  thumbnail: String!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input CollageDepartmentCreateOrConnectWithoutFacultyInput {
  where: CollageDepartmentWhereUniqueInput!
  create: CollageDepartmentCreateWithoutFacultyInput!
}

input CollageDepartmentCreateManyFacultyInputEnvelope {
  data: [CollageDepartmentCreateManyFacultyInput!]!
  skipDuplicates: Boolean
}

input CollageDepartmentCreateManyFacultyInput {
  id: Int
  name: String!
  description: String!
  thumbnail: String!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input FacultyCreateOrConnectWithoutClassroomAttendanceInput {
  where: FacultyWhereUniqueInput!
  create: FacultyCreateWithoutClassroomAttendanceInput!
}

input ClassroomAttendanceCreateOrConnectWithoutStudentInput {
  where: ClassroomAttendanceWhereUniqueInput!
  create: ClassroomAttendanceCreateWithoutStudentInput!
}

input ClassroomAttendanceCreateManyStudentInputEnvelope {
  data: [ClassroomAttendanceCreateManyStudentInput!]!
  skipDuplicates: Boolean
}

input ClassroomAttendanceCreateManyStudentInput {
  id: Int
  semester: Int!
  facultyId: Int!
  classroomSessionId: Int!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input StudentCreateOrConnectWithoutStudentFeeInput {
  where: StudentWhereUniqueInput!
  create: StudentCreateWithoutStudentFeeInput!
}

input StudentFeeCreateOrConnectWithoutAdminInput {
  where: StudentFeeWhereUniqueInput!
  create: StudentFeeCreateWithoutAdminInput!
}

input StudentFeeCreateManyAdminInputEnvelope {
  data: [StudentFeeCreateManyAdminInput!]!
  skipDuplicates: Boolean
}

input StudentFeeCreateManyAdminInput {
  id: Int
  semester: Int!
  partial: Boolean
  amount: Float!
  studentId: Int!
  approved: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input AdminCreateOrConnectWithoutFacultyInput {
  where: AdminWhereUniqueInput!
  create: AdminCreateWithoutFacultyInput!
}

input FacultyCreateOrConnectWithoutAddressInput {
  where: FacultyWhereUniqueInput!
  create: FacultyCreateWithoutAddressInput!
}

input AddressCreateOrConnectWithoutStudentInput {
  where: AddressWhereUniqueInput!
  create: AddressCreateWithoutStudentInput!
}

input StudentCreateOrConnectWithoutAdminInput {
  where: StudentWhereUniqueInput!
  create: StudentCreateWithoutAdminInput!
}

input StudentCreateManyAdminInputEnvelope {
  data: [StudentCreateManyAdminInput!]!
  skipDuplicates: Boolean
}

input StudentCreateManyAdminInput {
  id: Int
  name: String!
  displayName: String!
  dateOfBirth: DateTime!
  email: String!
  password: String!
  notificationMail: String!
  contactNo: String!
  emailVerified: Boolean
  emailOtp: Int
  emailOtpSentTime: DateTime
  lastLogin: DateTime
  uuid: String
  ip: String
  location: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input AdminCreateOrConnectWithoutAddressInput {
  where: AdminWhereUniqueInput!
  create: AdminCreateWithoutAddressInput!
}

input AddressCreateOrConnectWithoutFacultyInput {
  where: AddressWhereUniqueInput!
  create: AddressCreateWithoutFacultyInput!
}

input FacultyCreateOrConnectWithoutAdminInput {
  where: FacultyWhereUniqueInput!
  create: FacultyCreateWithoutAdminInput!
}

input FacultyCreateManyAdminInputEnvelope {
  data: [FacultyCreateManyAdminInput!]!
  skipDuplicates: Boolean
}

input FacultyCreateManyAdminInput {
  id: Int
  name: String!
  displayName: String!
  dateOfBirth: DateTime!
  email: String!
  password: String!
  notificationMail: String!
  contactNo: String!
  emailVerified: Boolean
  emailOtp: Int
  emailOtpSentTime: DateTime
  lastLogin: DateTime
  uuid: String
  ip: String
  location: String
  facultyTypeId: Int!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input AdminCreateOrConnectWithoutStudentInput {
  where: AdminWhereUniqueInput!
  create: AdminCreateWithoutStudentInput!
}

input StudentCreateOrConnectWithoutAddressInput {
  where: StudentWhereUniqueInput!
  create: StudentCreateWithoutAddressInput!
}

input AddressCreateOrConnectWithoutAdminInput {
  where: AddressWhereUniqueInput!
  create: AddressCreateWithoutAdminInput!
}

input AdminUpdateInput {
  name: StringFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  dateOfBirth: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  notificationMail: StringFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailOtp: NullableIntFieldUpdateOperationsInput
  emailOtpSentTime: NullableDateTimeFieldUpdateOperationsInput
  lastLogin: NullableDateTimeFieldUpdateOperationsInput
  uuid: StringFieldUpdateOperationsInput
  ip: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  permissions: StringFieldUpdateOperationsInput
  adminType: AdminTypeUpdateOneWithoutAdminInput
  adminDepartment: AdminDepartmentUpdateOneWithoutAdminInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  Address: AddressUpdateOneWithoutAdminInput
  courses: CourseUpdateManyWithoutCreatorInput
  Student: StudentUpdateManyWithoutAdminInput
  Faculty: FacultyUpdateManyWithoutAdminInput
  CollageCircular: CollageCircularUpdateManyWithoutAdminInput
  StudentFee: StudentFeeUpdateManyWithoutAdminInput
}

input StringFieldUpdateOperationsInput {
  set: String
}

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input NullableIntFieldUpdateOperationsInput {
  set: Int
  increment: Int
  decrement: Int
  multiply: Int
  divide: Int
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

input AdminTypeUpdateOneWithoutAdminInput {
  create: AdminTypeCreateWithoutAdminInput
  connectOrCreate: AdminTypeCreateOrConnectWithoutAdminInput
  upsert: AdminTypeUpsertWithoutAdminInput
  disconnect: Boolean
  delete: Boolean
  connect: AdminTypeWhereUniqueInput
  update: AdminTypeUpdateWithoutAdminInput
}

input AdminTypeUpsertWithoutAdminInput {
  update: AdminTypeUpdateWithoutAdminInput!
  create: AdminTypeCreateWithoutAdminInput!
}

input AdminTypeUpdateWithoutAdminInput {
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  thumbnail: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input AdminDepartmentUpdateOneWithoutAdminInput {
  create: AdminDepartmentCreateWithoutAdminInput
  connectOrCreate: AdminDepartmentCreateOrConnectWithoutAdminInput
  upsert: AdminDepartmentUpsertWithoutAdminInput
  disconnect: Boolean
  delete: Boolean
  connect: AdminDepartmentWhereUniqueInput
  update: AdminDepartmentUpdateWithoutAdminInput
}

input AdminDepartmentUpsertWithoutAdminInput {
  update: AdminDepartmentUpdateWithoutAdminInput!
  create: AdminDepartmentCreateWithoutAdminInput!
}

input AdminDepartmentUpdateWithoutAdminInput {
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  thumbnail: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input AddressUpdateOneWithoutAdminInput {
  create: AddressCreateWithoutAdminInput
  connectOrCreate: AddressCreateOrConnectWithoutAdminInput
  upsert: AddressUpsertWithoutAdminInput
  disconnect: Boolean
  delete: Boolean
  connect: AddressWhereUniqueInput
  update: AddressUpdateWithoutAdminInput
}

input AddressUpsertWithoutAdminInput {
  update: AddressUpdateWithoutAdminInput!
  create: AddressCreateWithoutAdminInput!
}

input AddressUpdateWithoutAdminInput {
  name: StringFieldUpdateOperationsInput
  line1: StringFieldUpdateOperationsInput
  line2: NullableStringFieldUpdateOperationsInput
  zipcode: BigIntFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  city: CityUpdateOneRequiredWithoutAddressInput
  student: StudentUpdateOneWithoutAddressInput
  faculty: FacultyUpdateOneWithoutAddressInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input BigIntFieldUpdateOperationsInput {
  set: String
  increment: String
  decrement: String
  multiply: String
  divide: String
}

input CityUpdateOneRequiredWithoutAddressInput {
  create: CityCreateWithoutAddressInput
  connectOrCreate: CityCreateOrConnectWithoutAddressInput
  upsert: CityUpsertWithoutAddressInput
  connect: CityWhereUniqueInput
  update: CityUpdateWithoutAddressInput
}

input CityUpsertWithoutAddressInput {
  update: CityUpdateWithoutAddressInput!
  create: CityCreateWithoutAddressInput!
}

input CityUpdateWithoutAddressInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  state: StateUpdateOneRequiredWithoutCityInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input StateUpdateOneRequiredWithoutCityInput {
  create: StateCreateWithoutCityInput
  connectOrCreate: StateCreateOrConnectWithoutCityInput
  upsert: StateUpsertWithoutCityInput
  connect: StateWhereUniqueInput
  update: StateUpdateWithoutCityInput
}

input StateUpsertWithoutCityInput {
  update: StateUpdateWithoutCityInput!
  create: StateCreateWithoutCityInput!
}

input StateUpdateWithoutCityInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  country: CountryUpdateOneRequiredWithoutStateInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input CountryUpdateOneRequiredWithoutStateInput {
  create: CountryCreateWithoutStateInput
  connectOrCreate: CountryCreateOrConnectWithoutStateInput
  upsert: CountryUpsertWithoutStateInput
  connect: CountryWhereUniqueInput
  update: CountryUpdateWithoutStateInput
}

input CountryUpsertWithoutStateInput {
  update: CountryUpdateWithoutStateInput!
  create: CountryCreateWithoutStateInput!
}

input CountryUpdateWithoutStateInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input StudentUpdateOneWithoutAddressInput {
  create: StudentCreateWithoutAddressInput
  connectOrCreate: StudentCreateOrConnectWithoutAddressInput
  upsert: StudentUpsertWithoutAddressInput
  disconnect: Boolean
  delete: Boolean
  connect: StudentWhereUniqueInput
  update: StudentUpdateWithoutAddressInput
}

input StudentUpsertWithoutAddressInput {
  update: StudentUpdateWithoutAddressInput!
  create: StudentCreateWithoutAddressInput!
}

input StudentUpdateWithoutAddressInput {
  name: StringFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  dateOfBirth: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  notificationMail: StringFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailOtp: NullableIntFieldUpdateOperationsInput
  emailOtpSentTime: NullableDateTimeFieldUpdateOperationsInput
  lastLogin: NullableDateTimeFieldUpdateOperationsInput
  uuid: StringFieldUpdateOperationsInput
  ip: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  admin: AdminUpdateOneRequiredWithoutStudentInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  ClassroomAttendance: ClassroomAttendanceUpdateManyWithoutStudentInput
  QuizAttempts: QuizAttemptsUpdateManyWithoutStudentInput
  QuizResult: QuizResultUpdateManyWithoutStudentInput
  StudentFee: StudentFeeUpdateManyWithoutStudentInput
}

input AdminUpdateOneRequiredWithoutStudentInput {
  create: AdminCreateWithoutStudentInput
  connectOrCreate: AdminCreateOrConnectWithoutStudentInput
  upsert: AdminUpsertWithoutStudentInput
  connect: AdminWhereUniqueInput
  update: AdminUpdateWithoutStudentInput
}

input AdminUpsertWithoutStudentInput {
  update: AdminUpdateWithoutStudentInput!
  create: AdminCreateWithoutStudentInput!
}

input AdminUpdateWithoutStudentInput {
  name: StringFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  dateOfBirth: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  notificationMail: StringFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailOtp: NullableIntFieldUpdateOperationsInput
  emailOtpSentTime: NullableDateTimeFieldUpdateOperationsInput
  lastLogin: NullableDateTimeFieldUpdateOperationsInput
  uuid: StringFieldUpdateOperationsInput
  ip: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  permissions: StringFieldUpdateOperationsInput
  adminType: AdminTypeUpdateOneWithoutAdminInput
  adminDepartment: AdminDepartmentUpdateOneWithoutAdminInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  Address: AddressUpdateOneWithoutAdminInput
  courses: CourseUpdateManyWithoutCreatorInput
  Faculty: FacultyUpdateManyWithoutAdminInput
  CollageCircular: CollageCircularUpdateManyWithoutAdminInput
  StudentFee: StudentFeeUpdateManyWithoutAdminInput
}

input CourseUpdateManyWithoutCreatorInput {
  create: [CourseCreateWithoutCreatorInput!]
  connectOrCreate: [CourseCreateOrConnectWithoutCreatorInput!]
  upsert: [CourseUpsertWithWhereUniqueWithoutCreatorInput!]
  createMany: CourseCreateManyCreatorInputEnvelope
  set: [CourseWhereUniqueInput!]
  disconnect: [CourseWhereUniqueInput!]
  delete: [CourseWhereUniqueInput!]
  connect: [CourseWhereUniqueInput!]
  update: [CourseUpdateWithWhereUniqueWithoutCreatorInput!]
  updateMany: [CourseUpdateManyWithWhereWithoutCreatorInput!]
  deleteMany: [CourseScalarWhereInput!]
}

input CourseUpsertWithWhereUniqueWithoutCreatorInput {
  where: CourseWhereUniqueInput!
  update: CourseUpdateWithoutCreatorInput!
  create: CourseCreateWithoutCreatorInput!
}

input CourseUpdateWithoutCreatorInput {
  name: StringFieldUpdateOperationsInput
  thumbnail: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  price: FloatFieldUpdateOperationsInput
  banner: StringFieldUpdateOperationsInput
  active: BoolFieldUpdateOperationsInput
  paid: BoolFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  trailer: StringFieldUpdateOperationsInput
  duration: StringFieldUpdateOperationsInput
  languages: CourseUpdatelanguagesInput
  courseCategory: CourseCategoryUpdateOneRequiredWithoutCourseInput
  courseChargeType: CourseChargeTypeUpdateOneRequiredWithoutCourseInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  CourseMeta: CourseMetaUpdateManyWithoutCourseInput
  CourseVideo: CourseVideoUpdateManyWithoutCourseInput
}

input FloatFieldUpdateOperationsInput {
  set: Float
  increment: Float
  decrement: Float
  multiply: Float
  divide: Float
}

input CourseUpdatelanguagesInput {
  set: [String!]
  push: [String!]
}

input CourseCategoryUpdateOneRequiredWithoutCourseInput {
  create: CourseCategoryCreateWithoutCourseInput
  connectOrCreate: CourseCategoryCreateOrConnectWithoutCourseInput
  upsert: CourseCategoryUpsertWithoutCourseInput
  connect: CourseCategoryWhereUniqueInput
  update: CourseCategoryUpdateWithoutCourseInput
}

input CourseCategoryUpsertWithoutCourseInput {
  update: CourseCategoryUpdateWithoutCourseInput!
  create: CourseCategoryCreateWithoutCourseInput!
}

input CourseCategoryUpdateWithoutCourseInput {
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  thumbnail: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input CourseChargeTypeUpdateOneRequiredWithoutCourseInput {
  create: CourseChargeTypeCreateWithoutCourseInput
  connectOrCreate: CourseChargeTypeCreateOrConnectWithoutCourseInput
  upsert: CourseChargeTypeUpsertWithoutCourseInput
  connect: CourseChargeTypeWhereUniqueInput
  update: CourseChargeTypeUpdateWithoutCourseInput
}

input CourseChargeTypeUpsertWithoutCourseInput {
  update: CourseChargeTypeUpdateWithoutCourseInput!
  create: CourseChargeTypeCreateWithoutCourseInput!
}

input CourseChargeTypeUpdateWithoutCourseInput {
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  thumbnail: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input CourseMetaUpdateManyWithoutCourseInput {
  create: [CourseMetaCreateWithoutCourseInput!]
  connectOrCreate: [CourseMetaCreateOrConnectWithoutCourseInput!]
  upsert: [CourseMetaUpsertWithWhereUniqueWithoutCourseInput!]
  createMany: CourseMetaCreateManyCourseInputEnvelope
  set: [CourseMetaWhereUniqueInput!]
  disconnect: [CourseMetaWhereUniqueInput!]
  delete: [CourseMetaWhereUniqueInput!]
  connect: [CourseMetaWhereUniqueInput!]
  update: [CourseMetaUpdateWithWhereUniqueWithoutCourseInput!]
  updateMany: [CourseMetaUpdateManyWithWhereWithoutCourseInput!]
  deleteMany: [CourseMetaScalarWhereInput!]
}

input CourseMetaUpsertWithWhereUniqueWithoutCourseInput {
  where: CourseMetaWhereUniqueInput!
  update: CourseMetaUpdateWithoutCourseInput!
  create: CourseMetaCreateWithoutCourseInput!
}

input CourseMetaUpdateWithoutCourseInput {
  name: StringFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input CourseMetaUpdateWithWhereUniqueWithoutCourseInput {
  where: CourseMetaWhereUniqueInput!
  data: CourseMetaUpdateWithoutCourseInput!
}

input CourseMetaUpdateManyWithWhereWithoutCourseInput {
  where: CourseMetaScalarWhereInput!
  data: CourseMetaUpdateManyMutationInput!
}

input CourseMetaScalarWhereInput {
  AND: [CourseMetaScalarWhereInput!]
  OR: [CourseMetaScalarWhereInput!]
  NOT: [CourseMetaScalarWhereInput!]
  id: IntFilter
  name: StringFilter
  value: StringFilter
  courseId: IntFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
}

input CourseMetaUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input CourseVideoUpdateManyWithoutCourseInput {
  create: [CourseVideoCreateWithoutCourseInput!]
  connectOrCreate: [CourseVideoCreateOrConnectWithoutCourseInput!]
  upsert: [CourseVideoUpsertWithWhereUniqueWithoutCourseInput!]
  createMany: CourseVideoCreateManyCourseInputEnvelope
  set: [CourseVideoWhereUniqueInput!]
  disconnect: [CourseVideoWhereUniqueInput!]
  delete: [CourseVideoWhereUniqueInput!]
  connect: [CourseVideoWhereUniqueInput!]
  update: [CourseVideoUpdateWithWhereUniqueWithoutCourseInput!]
  updateMany: [CourseVideoUpdateManyWithWhereWithoutCourseInput!]
  deleteMany: [CourseVideoScalarWhereInput!]
}

input CourseVideoUpsertWithWhereUniqueWithoutCourseInput {
  where: CourseVideoWhereUniqueInput!
  update: CourseVideoUpdateWithoutCourseInput!
  create: CourseVideoCreateWithoutCourseInput!
}

input CourseVideoUpdateWithoutCourseInput {
  title: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  thumbnail: StringFieldUpdateOperationsInput
  video: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  CourseVideoMeta: CourseVideoMetaUpdateManyWithoutVideoInput
}

input CourseVideoMetaUpdateManyWithoutVideoInput {
  create: [CourseVideoMetaCreateWithoutVideoInput!]
  connectOrCreate: [CourseVideoMetaCreateOrConnectWithoutVideoInput!]
  upsert: [CourseVideoMetaUpsertWithWhereUniqueWithoutVideoInput!]
  createMany: CourseVideoMetaCreateManyVideoInputEnvelope
  set: [CourseVideoMetaWhereUniqueInput!]
  disconnect: [CourseVideoMetaWhereUniqueInput!]
  delete: [CourseVideoMetaWhereUniqueInput!]
  connect: [CourseVideoMetaWhereUniqueInput!]
  update: [CourseVideoMetaUpdateWithWhereUniqueWithoutVideoInput!]
  updateMany: [CourseVideoMetaUpdateManyWithWhereWithoutVideoInput!]
  deleteMany: [CourseVideoMetaScalarWhereInput!]
}

input CourseVideoMetaUpsertWithWhereUniqueWithoutVideoInput {
  where: CourseVideoMetaWhereUniqueInput!
  update: CourseVideoMetaUpdateWithoutVideoInput!
  create: CourseVideoMetaCreateWithoutVideoInput!
}

input CourseVideoMetaUpdateWithoutVideoInput {
  name: StringFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input CourseVideoMetaUpdateWithWhereUniqueWithoutVideoInput {
  where: CourseVideoMetaWhereUniqueInput!
  data: CourseVideoMetaUpdateWithoutVideoInput!
}

input CourseVideoMetaUpdateManyWithWhereWithoutVideoInput {
  where: CourseVideoMetaScalarWhereInput!
  data: CourseVideoMetaUpdateManyMutationInput!
}

input CourseVideoMetaScalarWhereInput {
  AND: [CourseVideoMetaScalarWhereInput!]
  OR: [CourseVideoMetaScalarWhereInput!]
  NOT: [CourseVideoMetaScalarWhereInput!]
  id: IntFilter
  name: StringFilter
  value: StringFilter
  videoId: IntFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
}

input CourseVideoMetaUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input CourseVideoUpdateWithWhereUniqueWithoutCourseInput {
  where: CourseVideoWhereUniqueInput!
  data: CourseVideoUpdateWithoutCourseInput!
}

input CourseVideoUpdateManyWithWhereWithoutCourseInput {
  where: CourseVideoScalarWhereInput!
  data: CourseVideoUpdateManyMutationInput!
}

input CourseVideoScalarWhereInput {
  AND: [CourseVideoScalarWhereInput!]
  OR: [CourseVideoScalarWhereInput!]
  NOT: [CourseVideoScalarWhereInput!]
  id: IntFilter
  title: StringFilter
  description: StringFilter
  thumbnail: StringFilter
  video: StringFilter
  courseId: IntFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
}

input CourseVideoUpdateManyMutationInput {
  title: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  thumbnail: StringFieldUpdateOperationsInput
  video: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input CourseUpdateWithWhereUniqueWithoutCreatorInput {
  where: CourseWhereUniqueInput!
  data: CourseUpdateWithoutCreatorInput!
}

input CourseUpdateManyWithWhereWithoutCreatorInput {
  where: CourseScalarWhereInput!
  data: CourseUpdateManyMutationInput!
}

input CourseScalarWhereInput {
  AND: [CourseScalarWhereInput!]
  OR: [CourseScalarWhereInput!]
  NOT: [CourseScalarWhereInput!]
  id: IntFilter
  name: StringFilter
  thumbnail: StringFilter
  createdBy: IntFilter
  description: StringFilter
  price: FloatFilter
  banner: StringFilter
  active: BoolFilter
  paid: BoolFilter
  slug: StringFilter
  trailer: StringFilter
  duration: StringFilter
  languages: StringNullableListFilter
  courseCategoryId: IntFilter
  courseChargeTypeId: IntFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
}

input CourseUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
  thumbnail: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  price: FloatFieldUpdateOperationsInput
  banner: StringFieldUpdateOperationsInput
  active: BoolFieldUpdateOperationsInput
  paid: BoolFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  trailer: StringFieldUpdateOperationsInput
  duration: StringFieldUpdateOperationsInput
  languages: CourseUpdatelanguagesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input FacultyUpdateManyWithoutAdminInput {
  create: [FacultyCreateWithoutAdminInput!]
  connectOrCreate: [FacultyCreateOrConnectWithoutAdminInput!]
  upsert: [FacultyUpsertWithWhereUniqueWithoutAdminInput!]
  createMany: FacultyCreateManyAdminInputEnvelope
  set: [FacultyWhereUniqueInput!]
  disconnect: [FacultyWhereUniqueInput!]
  delete: [FacultyWhereUniqueInput!]
  connect: [FacultyWhereUniqueInput!]
  update: [FacultyUpdateWithWhereUniqueWithoutAdminInput!]
  updateMany: [FacultyUpdateManyWithWhereWithoutAdminInput!]
  deleteMany: [FacultyScalarWhereInput!]
}

input FacultyUpsertWithWhereUniqueWithoutAdminInput {
  where: FacultyWhereUniqueInput!
  update: FacultyUpdateWithoutAdminInput!
  create: FacultyCreateWithoutAdminInput!
}

input FacultyUpdateWithoutAdminInput {
  name: StringFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  dateOfBirth: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  notificationMail: StringFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailOtp: NullableIntFieldUpdateOperationsInput
  emailOtpSentTime: NullableDateTimeFieldUpdateOperationsInput
  lastLogin: NullableDateTimeFieldUpdateOperationsInput
  uuid: StringFieldUpdateOperationsInput
  ip: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  facultyType: FacultyTypeUpdateOneWithoutFacultyInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  Address: AddressUpdateOneWithoutFacultyInput
  CollageDepartment: CollageDepartmentUpdateManyWithoutFacultyInput
  ClassroomSession: ClassroomSessionUpdateManyWithoutFacultyInput
  ClassroomAttendance: ClassroomAttendanceUpdateManyWithoutFacultyInput
  ClassroomQuiz: ClassroomQuizUpdateManyWithoutFacultyInput
}

input FacultyTypeUpdateOneWithoutFacultyInput {
  create: FacultyTypeCreateWithoutFacultyInput
  connectOrCreate: FacultyTypeCreateOrConnectWithoutFacultyInput
  upsert: FacultyTypeUpsertWithoutFacultyInput
  disconnect: Boolean
  delete: Boolean
  connect: FacultyTypeWhereUniqueInput
  update: FacultyTypeUpdateWithoutFacultyInput
}

input FacultyTypeUpsertWithoutFacultyInput {
  update: FacultyTypeUpdateWithoutFacultyInput!
  create: FacultyTypeCreateWithoutFacultyInput!
}

input FacultyTypeUpdateWithoutFacultyInput {
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  thumbnail: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input AddressUpdateOneWithoutFacultyInput {
  create: AddressCreateWithoutFacultyInput
  connectOrCreate: AddressCreateOrConnectWithoutFacultyInput
  upsert: AddressUpsertWithoutFacultyInput
  disconnect: Boolean
  delete: Boolean
  connect: AddressWhereUniqueInput
  update: AddressUpdateWithoutFacultyInput
}

input AddressUpsertWithoutFacultyInput {
  update: AddressUpdateWithoutFacultyInput!
  create: AddressCreateWithoutFacultyInput!
}

input AddressUpdateWithoutFacultyInput {
  name: StringFieldUpdateOperationsInput
  line1: StringFieldUpdateOperationsInput
  line2: NullableStringFieldUpdateOperationsInput
  zipcode: BigIntFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  city: CityUpdateOneRequiredWithoutAddressInput
  student: StudentUpdateOneWithoutAddressInput
  admin: AdminUpdateOneWithoutAddressInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input AdminUpdateOneWithoutAddressInput {
  create: AdminCreateWithoutAddressInput
  connectOrCreate: AdminCreateOrConnectWithoutAddressInput
  upsert: AdminUpsertWithoutAddressInput
  disconnect: Boolean
  delete: Boolean
  connect: AdminWhereUniqueInput
  update: AdminUpdateWithoutAddressInput
}

input AdminUpsertWithoutAddressInput {
  update: AdminUpdateWithoutAddressInput!
  create: AdminCreateWithoutAddressInput!
}

input AdminUpdateWithoutAddressInput {
  name: StringFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  dateOfBirth: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  notificationMail: StringFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailOtp: NullableIntFieldUpdateOperationsInput
  emailOtpSentTime: NullableDateTimeFieldUpdateOperationsInput
  lastLogin: NullableDateTimeFieldUpdateOperationsInput
  uuid: StringFieldUpdateOperationsInput
  ip: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  permissions: StringFieldUpdateOperationsInput
  adminType: AdminTypeUpdateOneWithoutAdminInput
  adminDepartment: AdminDepartmentUpdateOneWithoutAdminInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  courses: CourseUpdateManyWithoutCreatorInput
  Student: StudentUpdateManyWithoutAdminInput
  Faculty: FacultyUpdateManyWithoutAdminInput
  CollageCircular: CollageCircularUpdateManyWithoutAdminInput
  StudentFee: StudentFeeUpdateManyWithoutAdminInput
}

input StudentUpdateManyWithoutAdminInput {
  create: [StudentCreateWithoutAdminInput!]
  connectOrCreate: [StudentCreateOrConnectWithoutAdminInput!]
  upsert: [StudentUpsertWithWhereUniqueWithoutAdminInput!]
  createMany: StudentCreateManyAdminInputEnvelope
  set: [StudentWhereUniqueInput!]
  disconnect: [StudentWhereUniqueInput!]
  delete: [StudentWhereUniqueInput!]
  connect: [StudentWhereUniqueInput!]
  update: [StudentUpdateWithWhereUniqueWithoutAdminInput!]
  updateMany: [StudentUpdateManyWithWhereWithoutAdminInput!]
  deleteMany: [StudentScalarWhereInput!]
}

input StudentUpsertWithWhereUniqueWithoutAdminInput {
  where: StudentWhereUniqueInput!
  update: StudentUpdateWithoutAdminInput!
  create: StudentCreateWithoutAdminInput!
}

input StudentUpdateWithoutAdminInput {
  name: StringFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  dateOfBirth: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  notificationMail: StringFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailOtp: NullableIntFieldUpdateOperationsInput
  emailOtpSentTime: NullableDateTimeFieldUpdateOperationsInput
  lastLogin: NullableDateTimeFieldUpdateOperationsInput
  uuid: StringFieldUpdateOperationsInput
  ip: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  Address: AddressUpdateOneWithoutStudentInput
  ClassroomAttendance: ClassroomAttendanceUpdateManyWithoutStudentInput
  QuizAttempts: QuizAttemptsUpdateManyWithoutStudentInput
  QuizResult: QuizResultUpdateManyWithoutStudentInput
  StudentFee: StudentFeeUpdateManyWithoutStudentInput
}

input AddressUpdateOneWithoutStudentInput {
  create: AddressCreateWithoutStudentInput
  connectOrCreate: AddressCreateOrConnectWithoutStudentInput
  upsert: AddressUpsertWithoutStudentInput
  disconnect: Boolean
  delete: Boolean
  connect: AddressWhereUniqueInput
  update: AddressUpdateWithoutStudentInput
}

input AddressUpsertWithoutStudentInput {
  update: AddressUpdateWithoutStudentInput!
  create: AddressCreateWithoutStudentInput!
}

input AddressUpdateWithoutStudentInput {
  name: StringFieldUpdateOperationsInput
  line1: StringFieldUpdateOperationsInput
  line2: NullableStringFieldUpdateOperationsInput
  zipcode: BigIntFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  city: CityUpdateOneRequiredWithoutAddressInput
  faculty: FacultyUpdateOneWithoutAddressInput
  admin: AdminUpdateOneWithoutAddressInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input FacultyUpdateOneWithoutAddressInput {
  create: FacultyCreateWithoutAddressInput
  connectOrCreate: FacultyCreateOrConnectWithoutAddressInput
  upsert: FacultyUpsertWithoutAddressInput
  disconnect: Boolean
  delete: Boolean
  connect: FacultyWhereUniqueInput
  update: FacultyUpdateWithoutAddressInput
}

input FacultyUpsertWithoutAddressInput {
  update: FacultyUpdateWithoutAddressInput!
  create: FacultyCreateWithoutAddressInput!
}

input FacultyUpdateWithoutAddressInput {
  name: StringFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  dateOfBirth: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  notificationMail: StringFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailOtp: NullableIntFieldUpdateOperationsInput
  emailOtpSentTime: NullableDateTimeFieldUpdateOperationsInput
  lastLogin: NullableDateTimeFieldUpdateOperationsInput
  uuid: StringFieldUpdateOperationsInput
  ip: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  admin: AdminUpdateOneRequiredWithoutFacultyInput
  facultyType: FacultyTypeUpdateOneWithoutFacultyInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  CollageDepartment: CollageDepartmentUpdateManyWithoutFacultyInput
  ClassroomSession: ClassroomSessionUpdateManyWithoutFacultyInput
  ClassroomAttendance: ClassroomAttendanceUpdateManyWithoutFacultyInput
  ClassroomQuiz: ClassroomQuizUpdateManyWithoutFacultyInput
}

input AdminUpdateOneRequiredWithoutFacultyInput {
  create: AdminCreateWithoutFacultyInput
  connectOrCreate: AdminCreateOrConnectWithoutFacultyInput
  upsert: AdminUpsertWithoutFacultyInput
  connect: AdminWhereUniqueInput
  update: AdminUpdateWithoutFacultyInput
}

input AdminUpsertWithoutFacultyInput {
  update: AdminUpdateWithoutFacultyInput!
  create: AdminCreateWithoutFacultyInput!
}

input AdminUpdateWithoutFacultyInput {
  name: StringFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  dateOfBirth: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  notificationMail: StringFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailOtp: NullableIntFieldUpdateOperationsInput
  emailOtpSentTime: NullableDateTimeFieldUpdateOperationsInput
  lastLogin: NullableDateTimeFieldUpdateOperationsInput
  uuid: StringFieldUpdateOperationsInput
  ip: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  permissions: StringFieldUpdateOperationsInput
  adminType: AdminTypeUpdateOneWithoutAdminInput
  adminDepartment: AdminDepartmentUpdateOneWithoutAdminInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  Address: AddressUpdateOneWithoutAdminInput
  courses: CourseUpdateManyWithoutCreatorInput
  Student: StudentUpdateManyWithoutAdminInput
  CollageCircular: CollageCircularUpdateManyWithoutAdminInput
  StudentFee: StudentFeeUpdateManyWithoutAdminInput
}

input CollageCircularUpdateManyWithoutAdminInput {
  create: [CollageCircularCreateWithoutAdminInput!]
  connectOrCreate: [CollageCircularCreateOrConnectWithoutAdminInput!]
  upsert: [CollageCircularUpsertWithWhereUniqueWithoutAdminInput!]
  createMany: CollageCircularCreateManyAdminInputEnvelope
  set: [CollageCircularWhereUniqueInput!]
  disconnect: [CollageCircularWhereUniqueInput!]
  delete: [CollageCircularWhereUniqueInput!]
  connect: [CollageCircularWhereUniqueInput!]
  update: [CollageCircularUpdateWithWhereUniqueWithoutAdminInput!]
  updateMany: [CollageCircularUpdateManyWithWhereWithoutAdminInput!]
  deleteMany: [CollageCircularScalarWhereInput!]
}

input CollageCircularUpsertWithWhereUniqueWithoutAdminInput {
  where: CollageCircularWhereUniqueInput!
  update: CollageCircularUpdateWithoutAdminInput!
  create: CollageCircularCreateWithoutAdminInput!
}

input CollageCircularUpdateWithoutAdminInput {
  title: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  file: NullableStringFieldUpdateOperationsInput
  for: EnumCircularForFieldUpdateOperationsInput
  metas: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input EnumCircularForFieldUpdateOperationsInput {
  set: CircularFor
}

input CollageCircularUpdateWithWhereUniqueWithoutAdminInput {
  where: CollageCircularWhereUniqueInput!
  data: CollageCircularUpdateWithoutAdminInput!
}

input CollageCircularUpdateManyWithWhereWithoutAdminInput {
  where: CollageCircularScalarWhereInput!
  data: CollageCircularUpdateManyMutationInput!
}

input CollageCircularScalarWhereInput {
  AND: [CollageCircularScalarWhereInput!]
  OR: [CollageCircularScalarWhereInput!]
  NOT: [CollageCircularScalarWhereInput!]
  id: IntFilter
  title: StringFilter
  description: StringNullableFilter
  file: StringNullableFilter
  for: EnumCircularForFilter
  metas: StringNullableFilter
  adminId: IntFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
}

input CollageCircularUpdateManyMutationInput {
  title: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  file: NullableStringFieldUpdateOperationsInput
  for: EnumCircularForFieldUpdateOperationsInput
  metas: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input StudentFeeUpdateManyWithoutAdminInput {
  create: [StudentFeeCreateWithoutAdminInput!]
  connectOrCreate: [StudentFeeCreateOrConnectWithoutAdminInput!]
  upsert: [StudentFeeUpsertWithWhereUniqueWithoutAdminInput!]
  createMany: StudentFeeCreateManyAdminInputEnvelope
  set: [StudentFeeWhereUniqueInput!]
  disconnect: [StudentFeeWhereUniqueInput!]
  delete: [StudentFeeWhereUniqueInput!]
  connect: [StudentFeeWhereUniqueInput!]
  update: [StudentFeeUpdateWithWhereUniqueWithoutAdminInput!]
  updateMany: [StudentFeeUpdateManyWithWhereWithoutAdminInput!]
  deleteMany: [StudentFeeScalarWhereInput!]
}

input StudentFeeUpsertWithWhereUniqueWithoutAdminInput {
  where: StudentFeeWhereUniqueInput!
  update: StudentFeeUpdateWithoutAdminInput!
  create: StudentFeeCreateWithoutAdminInput!
}

input StudentFeeUpdateWithoutAdminInput {
  semester: IntFieldUpdateOperationsInput
  partial: BoolFieldUpdateOperationsInput
  amount: FloatFieldUpdateOperationsInput
  student: StudentUpdateOneRequiredWithoutStudentFeeInput
  approved: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input IntFieldUpdateOperationsInput {
  set: Int
  increment: Int
  decrement: Int
  multiply: Int
  divide: Int
}

input StudentUpdateOneRequiredWithoutStudentFeeInput {
  create: StudentCreateWithoutStudentFeeInput
  connectOrCreate: StudentCreateOrConnectWithoutStudentFeeInput
  upsert: StudentUpsertWithoutStudentFeeInput
  connect: StudentWhereUniqueInput
  update: StudentUpdateWithoutStudentFeeInput
}

input StudentUpsertWithoutStudentFeeInput {
  update: StudentUpdateWithoutStudentFeeInput!
  create: StudentCreateWithoutStudentFeeInput!
}

input StudentUpdateWithoutStudentFeeInput {
  name: StringFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  dateOfBirth: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  notificationMail: StringFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailOtp: NullableIntFieldUpdateOperationsInput
  emailOtpSentTime: NullableDateTimeFieldUpdateOperationsInput
  lastLogin: NullableDateTimeFieldUpdateOperationsInput
  uuid: StringFieldUpdateOperationsInput
  ip: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  admin: AdminUpdateOneRequiredWithoutStudentInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  Address: AddressUpdateOneWithoutStudentInput
  ClassroomAttendance: ClassroomAttendanceUpdateManyWithoutStudentInput
  QuizAttempts: QuizAttemptsUpdateManyWithoutStudentInput
  QuizResult: QuizResultUpdateManyWithoutStudentInput
}

input ClassroomAttendanceUpdateManyWithoutStudentInput {
  create: [ClassroomAttendanceCreateWithoutStudentInput!]
  connectOrCreate: [ClassroomAttendanceCreateOrConnectWithoutStudentInput!]
  upsert: [ClassroomAttendanceUpsertWithWhereUniqueWithoutStudentInput!]
  createMany: ClassroomAttendanceCreateManyStudentInputEnvelope
  set: [ClassroomAttendanceWhereUniqueInput!]
  disconnect: [ClassroomAttendanceWhereUniqueInput!]
  delete: [ClassroomAttendanceWhereUniqueInput!]
  connect: [ClassroomAttendanceWhereUniqueInput!]
  update: [ClassroomAttendanceUpdateWithWhereUniqueWithoutStudentInput!]
  updateMany: [ClassroomAttendanceUpdateManyWithWhereWithoutStudentInput!]
  deleteMany: [ClassroomAttendanceScalarWhereInput!]
}

input ClassroomAttendanceUpsertWithWhereUniqueWithoutStudentInput {
  where: ClassroomAttendanceWhereUniqueInput!
  update: ClassroomAttendanceUpdateWithoutStudentInput!
  create: ClassroomAttendanceCreateWithoutStudentInput!
}

input ClassroomAttendanceUpdateWithoutStudentInput {
  semester: IntFieldUpdateOperationsInput
  faculty: FacultyUpdateOneRequiredWithoutClassroomAttendanceInput
  classroomSession: ClassroomSessionUpdateOneRequiredWithoutClassroomAttendanceInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input FacultyUpdateOneRequiredWithoutClassroomAttendanceInput {
  create: FacultyCreateWithoutClassroomAttendanceInput
  connectOrCreate: FacultyCreateOrConnectWithoutClassroomAttendanceInput
  upsert: FacultyUpsertWithoutClassroomAttendanceInput
  connect: FacultyWhereUniqueInput
  update: FacultyUpdateWithoutClassroomAttendanceInput
}

input FacultyUpsertWithoutClassroomAttendanceInput {
  update: FacultyUpdateWithoutClassroomAttendanceInput!
  create: FacultyCreateWithoutClassroomAttendanceInput!
}

input FacultyUpdateWithoutClassroomAttendanceInput {
  name: StringFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  dateOfBirth: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  notificationMail: StringFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailOtp: NullableIntFieldUpdateOperationsInput
  emailOtpSentTime: NullableDateTimeFieldUpdateOperationsInput
  lastLogin: NullableDateTimeFieldUpdateOperationsInput
  uuid: StringFieldUpdateOperationsInput
  ip: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  admin: AdminUpdateOneRequiredWithoutFacultyInput
  facultyType: FacultyTypeUpdateOneWithoutFacultyInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  Address: AddressUpdateOneWithoutFacultyInput
  CollageDepartment: CollageDepartmentUpdateManyWithoutFacultyInput
  ClassroomSession: ClassroomSessionUpdateManyWithoutFacultyInput
  ClassroomQuiz: ClassroomQuizUpdateManyWithoutFacultyInput
}

input CollageDepartmentUpdateManyWithoutFacultyInput {
  create: [CollageDepartmentCreateWithoutFacultyInput!]
  connectOrCreate: [CollageDepartmentCreateOrConnectWithoutFacultyInput!]
  upsert: [CollageDepartmentUpsertWithWhereUniqueWithoutFacultyInput!]
  createMany: CollageDepartmentCreateManyFacultyInputEnvelope
  set: [CollageDepartmentWhereUniqueInput!]
  disconnect: [CollageDepartmentWhereUniqueInput!]
  delete: [CollageDepartmentWhereUniqueInput!]
  connect: [CollageDepartmentWhereUniqueInput!]
  update: [CollageDepartmentUpdateWithWhereUniqueWithoutFacultyInput!]
  updateMany: [CollageDepartmentUpdateManyWithWhereWithoutFacultyInput!]
  deleteMany: [CollageDepartmentScalarWhereInput!]
}

input CollageDepartmentUpsertWithWhereUniqueWithoutFacultyInput {
  where: CollageDepartmentWhereUniqueInput!
  update: CollageDepartmentUpdateWithoutFacultyInput!
  create: CollageDepartmentCreateWithoutFacultyInput!
}

input CollageDepartmentUpdateWithoutFacultyInput {
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  thumbnail: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  CollageClassroom: CollageClassroomUpdateManyWithoutCollageDepartmentInput
}

input CollageClassroomUpdateManyWithoutCollageDepartmentInput {
  create: [CollageClassroomCreateWithoutCollageDepartmentInput!]
  connectOrCreate: [CollageClassroomCreateOrConnectWithoutCollageDepartmentInput!]
  upsert: [CollageClassroomUpsertWithWhereUniqueWithoutCollageDepartmentInput!]
  createMany: CollageClassroomCreateManyCollageDepartmentInputEnvelope
  set: [CollageClassroomWhereUniqueInput!]
  disconnect: [CollageClassroomWhereUniqueInput!]
  delete: [CollageClassroomWhereUniqueInput!]
  connect: [CollageClassroomWhereUniqueInput!]
  update: [CollageClassroomUpdateWithWhereUniqueWithoutCollageDepartmentInput!]
  updateMany: [CollageClassroomUpdateManyWithWhereWithoutCollageDepartmentInput!]
  deleteMany: [CollageClassroomScalarWhereInput!]
}

input CollageClassroomUpsertWithWhereUniqueWithoutCollageDepartmentInput {
  where: CollageClassroomWhereUniqueInput!
  update: CollageClassroomUpdateWithoutCollageDepartmentInput!
  create: CollageClassroomCreateWithoutCollageDepartmentInput!
}

input CollageClassroomUpdateWithoutCollageDepartmentInput {
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  classCode: BigIntFieldUpdateOperationsInput
  syllabus: StringFieldUpdateOperationsInput
  thumbnail: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  ClassroomSession: ClassroomSessionUpdateManyWithoutCollageClassroomInput
  ClassroomQuiz: ClassroomQuizUpdateManyWithoutCollageClassroomInput
}

input ClassroomSessionUpdateManyWithoutCollageClassroomInput {
  create: [ClassroomSessionCreateWithoutCollageClassroomInput!]
  connectOrCreate: [ClassroomSessionCreateOrConnectWithoutCollageClassroomInput!]
  upsert: [ClassroomSessionUpsertWithWhereUniqueWithoutCollageClassroomInput!]
  createMany: ClassroomSessionCreateManyCollageClassroomInputEnvelope
  set: [ClassroomSessionWhereUniqueInput!]
  disconnect: [ClassroomSessionWhereUniqueInput!]
  delete: [ClassroomSessionWhereUniqueInput!]
  connect: [ClassroomSessionWhereUniqueInput!]
  update: [ClassroomSessionUpdateWithWhereUniqueWithoutCollageClassroomInput!]
  updateMany: [ClassroomSessionUpdateManyWithWhereWithoutCollageClassroomInput!]
  deleteMany: [ClassroomSessionScalarWhereInput!]
}

input ClassroomSessionUpsertWithWhereUniqueWithoutCollageClassroomInput {
  where: ClassroomSessionWhereUniqueInput!
  update: ClassroomSessionUpdateWithoutCollageClassroomInput!
  create: ClassroomSessionCreateWithoutCollageClassroomInput!
}

input ClassroomSessionUpdateWithoutCollageClassroomInput {
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  active: BoolFieldUpdateOperationsInput
  meta: JSON
  attendanceActive: BoolFieldUpdateOperationsInput
  faculty: FacultyUpdateOneRequiredWithoutClassroomSessionInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  ClassroomAttendance: ClassroomAttendanceUpdateManyWithoutClassroomSessionInput
}

input FacultyUpdateOneRequiredWithoutClassroomSessionInput {
  create: FacultyCreateWithoutClassroomSessionInput
  connectOrCreate: FacultyCreateOrConnectWithoutClassroomSessionInput
  upsert: FacultyUpsertWithoutClassroomSessionInput
  connect: FacultyWhereUniqueInput
  update: FacultyUpdateWithoutClassroomSessionInput
}

input FacultyUpsertWithoutClassroomSessionInput {
  update: FacultyUpdateWithoutClassroomSessionInput!
  create: FacultyCreateWithoutClassroomSessionInput!
}

input FacultyUpdateWithoutClassroomSessionInput {
  name: StringFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  dateOfBirth: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  notificationMail: StringFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailOtp: NullableIntFieldUpdateOperationsInput
  emailOtpSentTime: NullableDateTimeFieldUpdateOperationsInput
  lastLogin: NullableDateTimeFieldUpdateOperationsInput
  uuid: StringFieldUpdateOperationsInput
  ip: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  admin: AdminUpdateOneRequiredWithoutFacultyInput
  facultyType: FacultyTypeUpdateOneWithoutFacultyInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  Address: AddressUpdateOneWithoutFacultyInput
  CollageDepartment: CollageDepartmentUpdateManyWithoutFacultyInput
  ClassroomAttendance: ClassroomAttendanceUpdateManyWithoutFacultyInput
  ClassroomQuiz: ClassroomQuizUpdateManyWithoutFacultyInput
}

input ClassroomAttendanceUpdateManyWithoutFacultyInput {
  create: [ClassroomAttendanceCreateWithoutFacultyInput!]
  connectOrCreate: [ClassroomAttendanceCreateOrConnectWithoutFacultyInput!]
  upsert: [ClassroomAttendanceUpsertWithWhereUniqueWithoutFacultyInput!]
  createMany: ClassroomAttendanceCreateManyFacultyInputEnvelope
  set: [ClassroomAttendanceWhereUniqueInput!]
  disconnect: [ClassroomAttendanceWhereUniqueInput!]
  delete: [ClassroomAttendanceWhereUniqueInput!]
  connect: [ClassroomAttendanceWhereUniqueInput!]
  update: [ClassroomAttendanceUpdateWithWhereUniqueWithoutFacultyInput!]
  updateMany: [ClassroomAttendanceUpdateManyWithWhereWithoutFacultyInput!]
  deleteMany: [ClassroomAttendanceScalarWhereInput!]
}

input ClassroomAttendanceUpsertWithWhereUniqueWithoutFacultyInput {
  where: ClassroomAttendanceWhereUniqueInput!
  update: ClassroomAttendanceUpdateWithoutFacultyInput!
  create: ClassroomAttendanceCreateWithoutFacultyInput!
}

input ClassroomAttendanceUpdateWithoutFacultyInput {
  semester: IntFieldUpdateOperationsInput
  student: StudentUpdateOneRequiredWithoutClassroomAttendanceInput
  classroomSession: ClassroomSessionUpdateOneRequiredWithoutClassroomAttendanceInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input StudentUpdateOneRequiredWithoutClassroomAttendanceInput {
  create: StudentCreateWithoutClassroomAttendanceInput
  connectOrCreate: StudentCreateOrConnectWithoutClassroomAttendanceInput
  upsert: StudentUpsertWithoutClassroomAttendanceInput
  connect: StudentWhereUniqueInput
  update: StudentUpdateWithoutClassroomAttendanceInput
}

input StudentUpsertWithoutClassroomAttendanceInput {
  update: StudentUpdateWithoutClassroomAttendanceInput!
  create: StudentCreateWithoutClassroomAttendanceInput!
}

input StudentUpdateWithoutClassroomAttendanceInput {
  name: StringFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  dateOfBirth: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  notificationMail: StringFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailOtp: NullableIntFieldUpdateOperationsInput
  emailOtpSentTime: NullableDateTimeFieldUpdateOperationsInput
  lastLogin: NullableDateTimeFieldUpdateOperationsInput
  uuid: StringFieldUpdateOperationsInput
  ip: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  admin: AdminUpdateOneRequiredWithoutStudentInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  Address: AddressUpdateOneWithoutStudentInput
  QuizAttempts: QuizAttemptsUpdateManyWithoutStudentInput
  QuizResult: QuizResultUpdateManyWithoutStudentInput
  StudentFee: StudentFeeUpdateManyWithoutStudentInput
}

input QuizAttemptsUpdateManyWithoutStudentInput {
  create: [QuizAttemptsCreateWithoutStudentInput!]
  connectOrCreate: [QuizAttemptsCreateOrConnectWithoutStudentInput!]
  upsert: [QuizAttemptsUpsertWithWhereUniqueWithoutStudentInput!]
  createMany: QuizAttemptsCreateManyStudentInputEnvelope
  set: [QuizAttemptsWhereUniqueInput!]
  disconnect: [QuizAttemptsWhereUniqueInput!]
  delete: [QuizAttemptsWhereUniqueInput!]
  connect: [QuizAttemptsWhereUniqueInput!]
  update: [QuizAttemptsUpdateWithWhereUniqueWithoutStudentInput!]
  updateMany: [QuizAttemptsUpdateManyWithWhereWithoutStudentInput!]
  deleteMany: [QuizAttemptsScalarWhereInput!]
}

input QuizAttemptsUpsertWithWhereUniqueWithoutStudentInput {
  where: QuizAttemptsWhereUniqueInput!
  update: QuizAttemptsUpdateWithoutStudentInput!
  create: QuizAttemptsCreateWithoutStudentInput!
}

input QuizAttemptsUpdateWithoutStudentInput {
  quizQuestion: QuizQuestionUpdateOneRequiredWithoutQuizAttemptsInput
  answer: StringFieldUpdateOperationsInput
  classroomQuiz: ClassroomQuizUpdateOneRequiredWithoutQuizAttemptsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input QuizQuestionUpdateOneRequiredWithoutQuizAttemptsInput {
  create: QuizQuestionCreateWithoutQuizAttemptsInput
  connectOrCreate: QuizQuestionCreateOrConnectWithoutQuizAttemptsInput
  upsert: QuizQuestionUpsertWithoutQuizAttemptsInput
  connect: QuizQuestionWhereUniqueInput
  update: QuizQuestionUpdateWithoutQuizAttemptsInput
}

input QuizQuestionUpsertWithoutQuizAttemptsInput {
  update: QuizQuestionUpdateWithoutQuizAttemptsInput!
  create: QuizQuestionCreateWithoutQuizAttemptsInput!
}

input QuizQuestionUpdateWithoutQuizAttemptsInput {
  question: StringFieldUpdateOperationsInput
  answer1: StringFieldUpdateOperationsInput
  answer2: StringFieldUpdateOperationsInput
  answer3: NullableStringFieldUpdateOperationsInput
  answer4: NullableStringFieldUpdateOperationsInput
  correctAnswer: StringFieldUpdateOperationsInput
  classroomQuiz: ClassroomQuizUpdateOneRequiredWithoutQuizQuestionInput
  image: NullableStringFieldUpdateOperationsInput
  marks: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input ClassroomQuizUpdateOneRequiredWithoutQuizQuestionInput {
  create: ClassroomQuizCreateWithoutQuizQuestionInput
  connectOrCreate: ClassroomQuizCreateOrConnectWithoutQuizQuestionInput
  upsert: ClassroomQuizUpsertWithoutQuizQuestionInput
  connect: ClassroomQuizWhereUniqueInput
  update: ClassroomQuizUpdateWithoutQuizQuestionInput
}

input ClassroomQuizUpsertWithoutQuizQuestionInput {
  update: ClassroomQuizUpdateWithoutQuizQuestionInput!
  create: ClassroomQuizCreateWithoutQuizQuestionInput!
}

input ClassroomQuizUpdateWithoutQuizQuestionInput {
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  takeTime: DateTimeFieldUpdateOperationsInput
  duration: StringFieldUpdateOperationsInput
  collageClassroom: CollageClassroomUpdateOneRequiredWithoutClassroomQuizInput
  faculty: FacultyUpdateOneRequiredWithoutClassroomQuizInput
  active: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  QuizAttempts: QuizAttemptsUpdateManyWithoutClassroomQuizInput
  QuizResult: QuizResultUpdateManyWithoutClassroomQuizInput
}

input CollageClassroomUpdateOneRequiredWithoutClassroomQuizInput {
  create: CollageClassroomCreateWithoutClassroomQuizInput
  connectOrCreate: CollageClassroomCreateOrConnectWithoutClassroomQuizInput
  upsert: CollageClassroomUpsertWithoutClassroomQuizInput
  connect: CollageClassroomWhereUniqueInput
  update: CollageClassroomUpdateWithoutClassroomQuizInput
}

input CollageClassroomUpsertWithoutClassroomQuizInput {
  update: CollageClassroomUpdateWithoutClassroomQuizInput!
  create: CollageClassroomCreateWithoutClassroomQuizInput!
}

input CollageClassroomUpdateWithoutClassroomQuizInput {
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  classCode: BigIntFieldUpdateOperationsInput
  syllabus: StringFieldUpdateOperationsInput
  thumbnail: StringFieldUpdateOperationsInput
  collageDepartment: CollageDepartmentUpdateOneRequiredWithoutCollageClassroomInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  ClassroomSession: ClassroomSessionUpdateManyWithoutCollageClassroomInput
}

input CollageDepartmentUpdateOneRequiredWithoutCollageClassroomInput {
  create: CollageDepartmentCreateWithoutCollageClassroomInput
  connectOrCreate: CollageDepartmentCreateOrConnectWithoutCollageClassroomInput
  upsert: CollageDepartmentUpsertWithoutCollageClassroomInput
  connect: CollageDepartmentWhereUniqueInput
  update: CollageDepartmentUpdateWithoutCollageClassroomInput
}

input CollageDepartmentUpsertWithoutCollageClassroomInput {
  update: CollageDepartmentUpdateWithoutCollageClassroomInput!
  create: CollageDepartmentCreateWithoutCollageClassroomInput!
}

input CollageDepartmentUpdateWithoutCollageClassroomInput {
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  thumbnail: StringFieldUpdateOperationsInput
  faculty: FacultyUpdateOneWithoutCollageDepartmentInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input FacultyUpdateOneWithoutCollageDepartmentInput {
  create: FacultyCreateWithoutCollageDepartmentInput
  connectOrCreate: FacultyCreateOrConnectWithoutCollageDepartmentInput
  upsert: FacultyUpsertWithoutCollageDepartmentInput
  disconnect: Boolean
  delete: Boolean
  connect: FacultyWhereUniqueInput
  update: FacultyUpdateWithoutCollageDepartmentInput
}

input FacultyUpsertWithoutCollageDepartmentInput {
  update: FacultyUpdateWithoutCollageDepartmentInput!
  create: FacultyCreateWithoutCollageDepartmentInput!
}

input FacultyUpdateWithoutCollageDepartmentInput {
  name: StringFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  dateOfBirth: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  notificationMail: StringFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailOtp: NullableIntFieldUpdateOperationsInput
  emailOtpSentTime: NullableDateTimeFieldUpdateOperationsInput
  lastLogin: NullableDateTimeFieldUpdateOperationsInput
  uuid: StringFieldUpdateOperationsInput
  ip: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  admin: AdminUpdateOneRequiredWithoutFacultyInput
  facultyType: FacultyTypeUpdateOneWithoutFacultyInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  Address: AddressUpdateOneWithoutFacultyInput
  ClassroomSession: ClassroomSessionUpdateManyWithoutFacultyInput
  ClassroomAttendance: ClassroomAttendanceUpdateManyWithoutFacultyInput
  ClassroomQuiz: ClassroomQuizUpdateManyWithoutFacultyInput
}

input ClassroomSessionUpdateManyWithoutFacultyInput {
  create: [ClassroomSessionCreateWithoutFacultyInput!]
  connectOrCreate: [ClassroomSessionCreateOrConnectWithoutFacultyInput!]
  upsert: [ClassroomSessionUpsertWithWhereUniqueWithoutFacultyInput!]
  createMany: ClassroomSessionCreateManyFacultyInputEnvelope
  set: [ClassroomSessionWhereUniqueInput!]
  disconnect: [ClassroomSessionWhereUniqueInput!]
  delete: [ClassroomSessionWhereUniqueInput!]
  connect: [ClassroomSessionWhereUniqueInput!]
  update: [ClassroomSessionUpdateWithWhereUniqueWithoutFacultyInput!]
  updateMany: [ClassroomSessionUpdateManyWithWhereWithoutFacultyInput!]
  deleteMany: [ClassroomSessionScalarWhereInput!]
}

input ClassroomSessionUpsertWithWhereUniqueWithoutFacultyInput {
  where: ClassroomSessionWhereUniqueInput!
  update: ClassroomSessionUpdateWithoutFacultyInput!
  create: ClassroomSessionCreateWithoutFacultyInput!
}

input ClassroomSessionUpdateWithoutFacultyInput {
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  collageClassroom: CollageClassroomUpdateOneRequiredWithoutClassroomSessionInput
  active: BoolFieldUpdateOperationsInput
  meta: JSON
  attendanceActive: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  ClassroomAttendance: ClassroomAttendanceUpdateManyWithoutClassroomSessionInput
}

input CollageClassroomUpdateOneRequiredWithoutClassroomSessionInput {
  create: CollageClassroomCreateWithoutClassroomSessionInput
  connectOrCreate: CollageClassroomCreateOrConnectWithoutClassroomSessionInput
  upsert: CollageClassroomUpsertWithoutClassroomSessionInput
  connect: CollageClassroomWhereUniqueInput
  update: CollageClassroomUpdateWithoutClassroomSessionInput
}

input CollageClassroomUpsertWithoutClassroomSessionInput {
  update: CollageClassroomUpdateWithoutClassroomSessionInput!
  create: CollageClassroomCreateWithoutClassroomSessionInput!
}

input CollageClassroomUpdateWithoutClassroomSessionInput {
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  classCode: BigIntFieldUpdateOperationsInput
  syllabus: StringFieldUpdateOperationsInput
  thumbnail: StringFieldUpdateOperationsInput
  collageDepartment: CollageDepartmentUpdateOneRequiredWithoutCollageClassroomInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  ClassroomQuiz: ClassroomQuizUpdateManyWithoutCollageClassroomInput
}

input ClassroomQuizUpdateManyWithoutCollageClassroomInput {
  create: [ClassroomQuizCreateWithoutCollageClassroomInput!]
  connectOrCreate: [ClassroomQuizCreateOrConnectWithoutCollageClassroomInput!]
  upsert: [ClassroomQuizUpsertWithWhereUniqueWithoutCollageClassroomInput!]
  createMany: ClassroomQuizCreateManyCollageClassroomInputEnvelope
  set: [ClassroomQuizWhereUniqueInput!]
  disconnect: [ClassroomQuizWhereUniqueInput!]
  delete: [ClassroomQuizWhereUniqueInput!]
  connect: [ClassroomQuizWhereUniqueInput!]
  update: [ClassroomQuizUpdateWithWhereUniqueWithoutCollageClassroomInput!]
  updateMany: [ClassroomQuizUpdateManyWithWhereWithoutCollageClassroomInput!]
  deleteMany: [ClassroomQuizScalarWhereInput!]
}

input ClassroomQuizUpsertWithWhereUniqueWithoutCollageClassroomInput {
  where: ClassroomQuizWhereUniqueInput!
  update: ClassroomQuizUpdateWithoutCollageClassroomInput!
  create: ClassroomQuizCreateWithoutCollageClassroomInput!
}

input ClassroomQuizUpdateWithoutCollageClassroomInput {
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  takeTime: DateTimeFieldUpdateOperationsInput
  duration: StringFieldUpdateOperationsInput
  faculty: FacultyUpdateOneRequiredWithoutClassroomQuizInput
  active: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  QuizQuestion: QuizQuestionUpdateManyWithoutClassroomQuizInput
  QuizAttempts: QuizAttemptsUpdateManyWithoutClassroomQuizInput
  QuizResult: QuizResultUpdateManyWithoutClassroomQuizInput
}

input FacultyUpdateOneRequiredWithoutClassroomQuizInput {
  create: FacultyCreateWithoutClassroomQuizInput
  connectOrCreate: FacultyCreateOrConnectWithoutClassroomQuizInput
  upsert: FacultyUpsertWithoutClassroomQuizInput
  connect: FacultyWhereUniqueInput
  update: FacultyUpdateWithoutClassroomQuizInput
}

input FacultyUpsertWithoutClassroomQuizInput {
  update: FacultyUpdateWithoutClassroomQuizInput!
  create: FacultyCreateWithoutClassroomQuizInput!
}

input FacultyUpdateWithoutClassroomQuizInput {
  name: StringFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  dateOfBirth: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  notificationMail: StringFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailOtp: NullableIntFieldUpdateOperationsInput
  emailOtpSentTime: NullableDateTimeFieldUpdateOperationsInput
  lastLogin: NullableDateTimeFieldUpdateOperationsInput
  uuid: StringFieldUpdateOperationsInput
  ip: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  admin: AdminUpdateOneRequiredWithoutFacultyInput
  facultyType: FacultyTypeUpdateOneWithoutFacultyInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  Address: AddressUpdateOneWithoutFacultyInput
  CollageDepartment: CollageDepartmentUpdateManyWithoutFacultyInput
  ClassroomSession: ClassroomSessionUpdateManyWithoutFacultyInput
  ClassroomAttendance: ClassroomAttendanceUpdateManyWithoutFacultyInput
}

input QuizQuestionUpdateManyWithoutClassroomQuizInput {
  create: [QuizQuestionCreateWithoutClassroomQuizInput!]
  connectOrCreate: [QuizQuestionCreateOrConnectWithoutClassroomQuizInput!]
  upsert: [QuizQuestionUpsertWithWhereUniqueWithoutClassroomQuizInput!]
  createMany: QuizQuestionCreateManyClassroomQuizInputEnvelope
  set: [QuizQuestionWhereUniqueInput!]
  disconnect: [QuizQuestionWhereUniqueInput!]
  delete: [QuizQuestionWhereUniqueInput!]
  connect: [QuizQuestionWhereUniqueInput!]
  update: [QuizQuestionUpdateWithWhereUniqueWithoutClassroomQuizInput!]
  updateMany: [QuizQuestionUpdateManyWithWhereWithoutClassroomQuizInput!]
  deleteMany: [QuizQuestionScalarWhereInput!]
}

input QuizQuestionUpsertWithWhereUniqueWithoutClassroomQuizInput {
  where: QuizQuestionWhereUniqueInput!
  update: QuizQuestionUpdateWithoutClassroomQuizInput!
  create: QuizQuestionCreateWithoutClassroomQuizInput!
}

input QuizQuestionUpdateWithoutClassroomQuizInput {
  question: StringFieldUpdateOperationsInput
  answer1: StringFieldUpdateOperationsInput
  answer2: StringFieldUpdateOperationsInput
  answer3: NullableStringFieldUpdateOperationsInput
  answer4: NullableStringFieldUpdateOperationsInput
  correctAnswer: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  marks: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  QuizAttempts: QuizAttemptsUpdateManyWithoutQuizQuestionInput
}

input QuizAttemptsUpdateManyWithoutQuizQuestionInput {
  create: [QuizAttemptsCreateWithoutQuizQuestionInput!]
  connectOrCreate: [QuizAttemptsCreateOrConnectWithoutQuizQuestionInput!]
  upsert: [QuizAttemptsUpsertWithWhereUniqueWithoutQuizQuestionInput!]
  createMany: QuizAttemptsCreateManyQuizQuestionInputEnvelope
  set: [QuizAttemptsWhereUniqueInput!]
  disconnect: [QuizAttemptsWhereUniqueInput!]
  delete: [QuizAttemptsWhereUniqueInput!]
  connect: [QuizAttemptsWhereUniqueInput!]
  update: [QuizAttemptsUpdateWithWhereUniqueWithoutQuizQuestionInput!]
  updateMany: [QuizAttemptsUpdateManyWithWhereWithoutQuizQuestionInput!]
  deleteMany: [QuizAttemptsScalarWhereInput!]
}

input QuizAttemptsUpsertWithWhereUniqueWithoutQuizQuestionInput {
  where: QuizAttemptsWhereUniqueInput!
  update: QuizAttemptsUpdateWithoutQuizQuestionInput!
  create: QuizAttemptsCreateWithoutQuizQuestionInput!
}

input QuizAttemptsUpdateWithoutQuizQuestionInput {
  answer: StringFieldUpdateOperationsInput
  student: StudentUpdateOneRequiredWithoutQuizAttemptsInput
  classroomQuiz: ClassroomQuizUpdateOneRequiredWithoutQuizAttemptsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input StudentUpdateOneRequiredWithoutQuizAttemptsInput {
  create: StudentCreateWithoutQuizAttemptsInput
  connectOrCreate: StudentCreateOrConnectWithoutQuizAttemptsInput
  upsert: StudentUpsertWithoutQuizAttemptsInput
  connect: StudentWhereUniqueInput
  update: StudentUpdateWithoutQuizAttemptsInput
}

input StudentUpsertWithoutQuizAttemptsInput {
  update: StudentUpdateWithoutQuizAttemptsInput!
  create: StudentCreateWithoutQuizAttemptsInput!
}

input StudentUpdateWithoutQuizAttemptsInput {
  name: StringFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  dateOfBirth: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  notificationMail: StringFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailOtp: NullableIntFieldUpdateOperationsInput
  emailOtpSentTime: NullableDateTimeFieldUpdateOperationsInput
  lastLogin: NullableDateTimeFieldUpdateOperationsInput
  uuid: StringFieldUpdateOperationsInput
  ip: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  admin: AdminUpdateOneRequiredWithoutStudentInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  Address: AddressUpdateOneWithoutStudentInput
  ClassroomAttendance: ClassroomAttendanceUpdateManyWithoutStudentInput
  QuizResult: QuizResultUpdateManyWithoutStudentInput
  StudentFee: StudentFeeUpdateManyWithoutStudentInput
}

input QuizResultUpdateManyWithoutStudentInput {
  create: [QuizResultCreateWithoutStudentInput!]
  connectOrCreate: [QuizResultCreateOrConnectWithoutStudentInput!]
  upsert: [QuizResultUpsertWithWhereUniqueWithoutStudentInput!]
  createMany: QuizResultCreateManyStudentInputEnvelope
  set: [QuizResultWhereUniqueInput!]
  disconnect: [QuizResultWhereUniqueInput!]
  delete: [QuizResultWhereUniqueInput!]
  connect: [QuizResultWhereUniqueInput!]
  update: [QuizResultUpdateWithWhereUniqueWithoutStudentInput!]
  updateMany: [QuizResultUpdateManyWithWhereWithoutStudentInput!]
  deleteMany: [QuizResultScalarWhereInput!]
}

input QuizResultUpsertWithWhereUniqueWithoutStudentInput {
  where: QuizResultWhereUniqueInput!
  update: QuizResultUpdateWithoutStudentInput!
  create: QuizResultCreateWithoutStudentInput!
}

input QuizResultUpdateWithoutStudentInput {
  totalMarks: IntFieldUpdateOperationsInput
  marksGained: IntFieldUpdateOperationsInput
  classroomQuiz: ClassroomQuizUpdateOneRequiredWithoutQuizResultInput
  semester: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input ClassroomQuizUpdateOneRequiredWithoutQuizResultInput {
  create: ClassroomQuizCreateWithoutQuizResultInput
  connectOrCreate: ClassroomQuizCreateOrConnectWithoutQuizResultInput
  upsert: ClassroomQuizUpsertWithoutQuizResultInput
  connect: ClassroomQuizWhereUniqueInput
  update: ClassroomQuizUpdateWithoutQuizResultInput
}

input ClassroomQuizUpsertWithoutQuizResultInput {
  update: ClassroomQuizUpdateWithoutQuizResultInput!
  create: ClassroomQuizCreateWithoutQuizResultInput!
}

input ClassroomQuizUpdateWithoutQuizResultInput {
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  takeTime: DateTimeFieldUpdateOperationsInput
  duration: StringFieldUpdateOperationsInput
  collageClassroom: CollageClassroomUpdateOneRequiredWithoutClassroomQuizInput
  faculty: FacultyUpdateOneRequiredWithoutClassroomQuizInput
  active: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  QuizQuestion: QuizQuestionUpdateManyWithoutClassroomQuizInput
  QuizAttempts: QuizAttemptsUpdateManyWithoutClassroomQuizInput
}

input QuizAttemptsUpdateManyWithoutClassroomQuizInput {
  create: [QuizAttemptsCreateWithoutClassroomQuizInput!]
  connectOrCreate: [QuizAttemptsCreateOrConnectWithoutClassroomQuizInput!]
  upsert: [QuizAttemptsUpsertWithWhereUniqueWithoutClassroomQuizInput!]
  createMany: QuizAttemptsCreateManyClassroomQuizInputEnvelope
  set: [QuizAttemptsWhereUniqueInput!]
  disconnect: [QuizAttemptsWhereUniqueInput!]
  delete: [QuizAttemptsWhereUniqueInput!]
  connect: [QuizAttemptsWhereUniqueInput!]
  update: [QuizAttemptsUpdateWithWhereUniqueWithoutClassroomQuizInput!]
  updateMany: [QuizAttemptsUpdateManyWithWhereWithoutClassroomQuizInput!]
  deleteMany: [QuizAttemptsScalarWhereInput!]
}

input QuizAttemptsUpsertWithWhereUniqueWithoutClassroomQuizInput {
  where: QuizAttemptsWhereUniqueInput!
  update: QuizAttemptsUpdateWithoutClassroomQuizInput!
  create: QuizAttemptsCreateWithoutClassroomQuizInput!
}

input QuizAttemptsUpdateWithoutClassroomQuizInput {
  quizQuestion: QuizQuestionUpdateOneRequiredWithoutQuizAttemptsInput
  answer: StringFieldUpdateOperationsInput
  student: StudentUpdateOneRequiredWithoutQuizAttemptsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input QuizAttemptsUpdateWithWhereUniqueWithoutClassroomQuizInput {
  where: QuizAttemptsWhereUniqueInput!
  data: QuizAttemptsUpdateWithoutClassroomQuizInput!
}

input QuizAttemptsUpdateManyWithWhereWithoutClassroomQuizInput {
  where: QuizAttemptsScalarWhereInput!
  data: QuizAttemptsUpdateManyMutationInput!
}

input QuizAttemptsScalarWhereInput {
  AND: [QuizAttemptsScalarWhereInput!]
  OR: [QuizAttemptsScalarWhereInput!]
  NOT: [QuizAttemptsScalarWhereInput!]
  id: IntFilter
  quizQuestionId: IntFilter
  answer: StringFilter
  studentId: IntFilter
  classroomQuizId: IntFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
}

input QuizAttemptsUpdateManyMutationInput {
  answer: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input QuizResultUpdateWithWhereUniqueWithoutStudentInput {
  where: QuizResultWhereUniqueInput!
  data: QuizResultUpdateWithoutStudentInput!
}

input QuizResultUpdateManyWithWhereWithoutStudentInput {
  where: QuizResultScalarWhereInput!
  data: QuizResultUpdateManyMutationInput!
}

input QuizResultScalarWhereInput {
  AND: [QuizResultScalarWhereInput!]
  OR: [QuizResultScalarWhereInput!]
  NOT: [QuizResultScalarWhereInput!]
  id: IntFilter
  totalMarks: IntFilter
  marksGained: IntFilter
  studentId: IntFilter
  classroomQuizId: IntFilter
  semester: IntFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
}

input QuizResultUpdateManyMutationInput {
  totalMarks: IntFieldUpdateOperationsInput
  marksGained: IntFieldUpdateOperationsInput
  semester: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input StudentFeeUpdateManyWithoutStudentInput {
  create: [StudentFeeCreateWithoutStudentInput!]
  connectOrCreate: [StudentFeeCreateOrConnectWithoutStudentInput!]
  upsert: [StudentFeeUpsertWithWhereUniqueWithoutStudentInput!]
  createMany: StudentFeeCreateManyStudentInputEnvelope
  set: [StudentFeeWhereUniqueInput!]
  disconnect: [StudentFeeWhereUniqueInput!]
  delete: [StudentFeeWhereUniqueInput!]
  connect: [StudentFeeWhereUniqueInput!]
  update: [StudentFeeUpdateWithWhereUniqueWithoutStudentInput!]
  updateMany: [StudentFeeUpdateManyWithWhereWithoutStudentInput!]
  deleteMany: [StudentFeeScalarWhereInput!]
}

input StudentFeeUpsertWithWhereUniqueWithoutStudentInput {
  where: StudentFeeWhereUniqueInput!
  update: StudentFeeUpdateWithoutStudentInput!
  create: StudentFeeCreateWithoutStudentInput!
}

input StudentFeeUpdateWithoutStudentInput {
  semester: IntFieldUpdateOperationsInput
  partial: BoolFieldUpdateOperationsInput
  amount: FloatFieldUpdateOperationsInput
  approved: BoolFieldUpdateOperationsInput
  admin: AdminUpdateOneRequiredWithoutStudentFeeInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input AdminUpdateOneRequiredWithoutStudentFeeInput {
  create: AdminCreateWithoutStudentFeeInput
  connectOrCreate: AdminCreateOrConnectWithoutStudentFeeInput
  upsert: AdminUpsertWithoutStudentFeeInput
  connect: AdminWhereUniqueInput
  update: AdminUpdateWithoutStudentFeeInput
}

input AdminUpsertWithoutStudentFeeInput {
  update: AdminUpdateWithoutStudentFeeInput!
  create: AdminCreateWithoutStudentFeeInput!
}

input AdminUpdateWithoutStudentFeeInput {
  name: StringFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  dateOfBirth: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  notificationMail: StringFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailOtp: NullableIntFieldUpdateOperationsInput
  emailOtpSentTime: NullableDateTimeFieldUpdateOperationsInput
  lastLogin: NullableDateTimeFieldUpdateOperationsInput
  uuid: StringFieldUpdateOperationsInput
  ip: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  permissions: StringFieldUpdateOperationsInput
  adminType: AdminTypeUpdateOneWithoutAdminInput
  adminDepartment: AdminDepartmentUpdateOneWithoutAdminInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  Address: AddressUpdateOneWithoutAdminInput
  courses: CourseUpdateManyWithoutCreatorInput
  Student: StudentUpdateManyWithoutAdminInput
  Faculty: FacultyUpdateManyWithoutAdminInput
  CollageCircular: CollageCircularUpdateManyWithoutAdminInput
}

input StudentFeeUpdateWithWhereUniqueWithoutStudentInput {
  where: StudentFeeWhereUniqueInput!
  data: StudentFeeUpdateWithoutStudentInput!
}

input StudentFeeUpdateManyWithWhereWithoutStudentInput {
  where: StudentFeeScalarWhereInput!
  data: StudentFeeUpdateManyMutationInput!
}

input StudentFeeScalarWhereInput {
  AND: [StudentFeeScalarWhereInput!]
  OR: [StudentFeeScalarWhereInput!]
  NOT: [StudentFeeScalarWhereInput!]
  id: IntFilter
  semester: IntFilter
  partial: BoolFilter
  amount: FloatFilter
  studentId: IntFilter
  approved: BoolFilter
  adminId: IntFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
}

input StudentFeeUpdateManyMutationInput {
  semester: IntFieldUpdateOperationsInput
  partial: BoolFieldUpdateOperationsInput
  amount: FloatFieldUpdateOperationsInput
  approved: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input ClassroomQuizUpdateOneRequiredWithoutQuizAttemptsInput {
  create: ClassroomQuizCreateWithoutQuizAttemptsInput
  connectOrCreate: ClassroomQuizCreateOrConnectWithoutQuizAttemptsInput
  upsert: ClassroomQuizUpsertWithoutQuizAttemptsInput
  connect: ClassroomQuizWhereUniqueInput
  update: ClassroomQuizUpdateWithoutQuizAttemptsInput
}

input ClassroomQuizUpsertWithoutQuizAttemptsInput {
  update: ClassroomQuizUpdateWithoutQuizAttemptsInput!
  create: ClassroomQuizCreateWithoutQuizAttemptsInput!
}

input ClassroomQuizUpdateWithoutQuizAttemptsInput {
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  takeTime: DateTimeFieldUpdateOperationsInput
  duration: StringFieldUpdateOperationsInput
  collageClassroom: CollageClassroomUpdateOneRequiredWithoutClassroomQuizInput
  faculty: FacultyUpdateOneRequiredWithoutClassroomQuizInput
  active: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  QuizQuestion: QuizQuestionUpdateManyWithoutClassroomQuizInput
  QuizResult: QuizResultUpdateManyWithoutClassroomQuizInput
}

input QuizResultUpdateManyWithoutClassroomQuizInput {
  create: [QuizResultCreateWithoutClassroomQuizInput!]
  connectOrCreate: [QuizResultCreateOrConnectWithoutClassroomQuizInput!]
  upsert: [QuizResultUpsertWithWhereUniqueWithoutClassroomQuizInput!]
  createMany: QuizResultCreateManyClassroomQuizInputEnvelope
  set: [QuizResultWhereUniqueInput!]
  disconnect: [QuizResultWhereUniqueInput!]
  delete: [QuizResultWhereUniqueInput!]
  connect: [QuizResultWhereUniqueInput!]
  update: [QuizResultUpdateWithWhereUniqueWithoutClassroomQuizInput!]
  updateMany: [QuizResultUpdateManyWithWhereWithoutClassroomQuizInput!]
  deleteMany: [QuizResultScalarWhereInput!]
}

input QuizResultUpsertWithWhereUniqueWithoutClassroomQuizInput {
  where: QuizResultWhereUniqueInput!
  update: QuizResultUpdateWithoutClassroomQuizInput!
  create: QuizResultCreateWithoutClassroomQuizInput!
}

input QuizResultUpdateWithoutClassroomQuizInput {
  totalMarks: IntFieldUpdateOperationsInput
  marksGained: IntFieldUpdateOperationsInput
  student: StudentUpdateOneRequiredWithoutQuizResultInput
  semester: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input StudentUpdateOneRequiredWithoutQuizResultInput {
  create: StudentCreateWithoutQuizResultInput
  connectOrCreate: StudentCreateOrConnectWithoutQuizResultInput
  upsert: StudentUpsertWithoutQuizResultInput
  connect: StudentWhereUniqueInput
  update: StudentUpdateWithoutQuizResultInput
}

input StudentUpsertWithoutQuizResultInput {
  update: StudentUpdateWithoutQuizResultInput!
  create: StudentCreateWithoutQuizResultInput!
}

input StudentUpdateWithoutQuizResultInput {
  name: StringFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  dateOfBirth: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  notificationMail: StringFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailOtp: NullableIntFieldUpdateOperationsInput
  emailOtpSentTime: NullableDateTimeFieldUpdateOperationsInput
  lastLogin: NullableDateTimeFieldUpdateOperationsInput
  uuid: StringFieldUpdateOperationsInput
  ip: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  admin: AdminUpdateOneRequiredWithoutStudentInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  Address: AddressUpdateOneWithoutStudentInput
  ClassroomAttendance: ClassroomAttendanceUpdateManyWithoutStudentInput
  QuizAttempts: QuizAttemptsUpdateManyWithoutStudentInput
  StudentFee: StudentFeeUpdateManyWithoutStudentInput
}

input QuizResultUpdateWithWhereUniqueWithoutClassroomQuizInput {
  where: QuizResultWhereUniqueInput!
  data: QuizResultUpdateWithoutClassroomQuizInput!
}

input QuizResultUpdateManyWithWhereWithoutClassroomQuizInput {
  where: QuizResultScalarWhereInput!
  data: QuizResultUpdateManyMutationInput!
}

input QuizAttemptsUpdateWithWhereUniqueWithoutQuizQuestionInput {
  where: QuizAttemptsWhereUniqueInput!
  data: QuizAttemptsUpdateWithoutQuizQuestionInput!
}

input QuizAttemptsUpdateManyWithWhereWithoutQuizQuestionInput {
  where: QuizAttemptsScalarWhereInput!
  data: QuizAttemptsUpdateManyMutationInput!
}

input QuizQuestionUpdateWithWhereUniqueWithoutClassroomQuizInput {
  where: QuizQuestionWhereUniqueInput!
  data: QuizQuestionUpdateWithoutClassroomQuizInput!
}

input QuizQuestionUpdateManyWithWhereWithoutClassroomQuizInput {
  where: QuizQuestionScalarWhereInput!
  data: QuizQuestionUpdateManyMutationInput!
}

input QuizQuestionScalarWhereInput {
  AND: [QuizQuestionScalarWhereInput!]
  OR: [QuizQuestionScalarWhereInput!]
  NOT: [QuizQuestionScalarWhereInput!]
  id: IntFilter
  question: StringFilter
  answer1: StringFilter
  answer2: StringFilter
  answer3: StringNullableFilter
  answer4: StringNullableFilter
  correctAnswer: StringFilter
  classroomQuizId: IntFilter
  image: StringNullableFilter
  marks: IntFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
}

input QuizQuestionUpdateManyMutationInput {
  question: StringFieldUpdateOperationsInput
  answer1: StringFieldUpdateOperationsInput
  answer2: StringFieldUpdateOperationsInput
  answer3: NullableStringFieldUpdateOperationsInput
  answer4: NullableStringFieldUpdateOperationsInput
  correctAnswer: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  marks: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input ClassroomQuizUpdateWithWhereUniqueWithoutCollageClassroomInput {
  where: ClassroomQuizWhereUniqueInput!
  data: ClassroomQuizUpdateWithoutCollageClassroomInput!
}

input ClassroomQuizUpdateManyWithWhereWithoutCollageClassroomInput {
  where: ClassroomQuizScalarWhereInput!
  data: ClassroomQuizUpdateManyMutationInput!
}

input ClassroomQuizScalarWhereInput {
  AND: [ClassroomQuizScalarWhereInput!]
  OR: [ClassroomQuizScalarWhereInput!]
  NOT: [ClassroomQuizScalarWhereInput!]
  id: IntFilter
  name: StringFilter
  description: StringFilter
  takeTime: DateTimeFilter
  duration: StringFilter
  collageClassroomId: IntFilter
  facultyId: IntFilter
  active: BoolFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
}

input ClassroomQuizUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  takeTime: DateTimeFieldUpdateOperationsInput
  duration: StringFieldUpdateOperationsInput
  active: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input ClassroomAttendanceUpdateManyWithoutClassroomSessionInput {
  create: [ClassroomAttendanceCreateWithoutClassroomSessionInput!]
  connectOrCreate: [ClassroomAttendanceCreateOrConnectWithoutClassroomSessionInput!]
  upsert: [ClassroomAttendanceUpsertWithWhereUniqueWithoutClassroomSessionInput!]
  createMany: ClassroomAttendanceCreateManyClassroomSessionInputEnvelope
  set: [ClassroomAttendanceWhereUniqueInput!]
  disconnect: [ClassroomAttendanceWhereUniqueInput!]
  delete: [ClassroomAttendanceWhereUniqueInput!]
  connect: [ClassroomAttendanceWhereUniqueInput!]
  update: [ClassroomAttendanceUpdateWithWhereUniqueWithoutClassroomSessionInput!]
  updateMany: [ClassroomAttendanceUpdateManyWithWhereWithoutClassroomSessionInput!]
  deleteMany: [ClassroomAttendanceScalarWhereInput!]
}

input ClassroomAttendanceUpsertWithWhereUniqueWithoutClassroomSessionInput {
  where: ClassroomAttendanceWhereUniqueInput!
  update: ClassroomAttendanceUpdateWithoutClassroomSessionInput!
  create: ClassroomAttendanceCreateWithoutClassroomSessionInput!
}

input ClassroomAttendanceUpdateWithoutClassroomSessionInput {
  semester: IntFieldUpdateOperationsInput
  student: StudentUpdateOneRequiredWithoutClassroomAttendanceInput
  faculty: FacultyUpdateOneRequiredWithoutClassroomAttendanceInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input ClassroomAttendanceUpdateWithWhereUniqueWithoutClassroomSessionInput {
  where: ClassroomAttendanceWhereUniqueInput!
  data: ClassroomAttendanceUpdateWithoutClassroomSessionInput!
}

input ClassroomAttendanceUpdateManyWithWhereWithoutClassroomSessionInput {
  where: ClassroomAttendanceScalarWhereInput!
  data: ClassroomAttendanceUpdateManyMutationInput!
}

input ClassroomAttendanceScalarWhereInput {
  AND: [ClassroomAttendanceScalarWhereInput!]
  OR: [ClassroomAttendanceScalarWhereInput!]
  NOT: [ClassroomAttendanceScalarWhereInput!]
  id: IntFilter
  semester: IntFilter
  studentId: IntFilter
  facultyId: IntFilter
  classroomSessionId: IntFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
}

input ClassroomAttendanceUpdateManyMutationInput {
  semester: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input ClassroomSessionUpdateWithWhereUniqueWithoutFacultyInput {
  where: ClassroomSessionWhereUniqueInput!
  data: ClassroomSessionUpdateWithoutFacultyInput!
}

input ClassroomSessionUpdateManyWithWhereWithoutFacultyInput {
  where: ClassroomSessionScalarWhereInput!
  data: ClassroomSessionUpdateManyMutationInput!
}

input ClassroomSessionScalarWhereInput {
  AND: [ClassroomSessionScalarWhereInput!]
  OR: [ClassroomSessionScalarWhereInput!]
  NOT: [ClassroomSessionScalarWhereInput!]
  id: IntFilter
  name: StringFilter
  description: StringFilter
  collageClassroomId: IntFilter
  active: BoolFilter
  meta: JsonFilter
  attendanceActive: BoolFilter
  facultyId: IntFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
}

input ClassroomSessionUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  active: BoolFieldUpdateOperationsInput
  meta: JSON
  attendanceActive: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input ClassroomQuizUpdateManyWithoutFacultyInput {
  create: [ClassroomQuizCreateWithoutFacultyInput!]
  connectOrCreate: [ClassroomQuizCreateOrConnectWithoutFacultyInput!]
  upsert: [ClassroomQuizUpsertWithWhereUniqueWithoutFacultyInput!]
  createMany: ClassroomQuizCreateManyFacultyInputEnvelope
  set: [ClassroomQuizWhereUniqueInput!]
  disconnect: [ClassroomQuizWhereUniqueInput!]
  delete: [ClassroomQuizWhereUniqueInput!]
  connect: [ClassroomQuizWhereUniqueInput!]
  update: [ClassroomQuizUpdateWithWhereUniqueWithoutFacultyInput!]
  updateMany: [ClassroomQuizUpdateManyWithWhereWithoutFacultyInput!]
  deleteMany: [ClassroomQuizScalarWhereInput!]
}

input ClassroomQuizUpsertWithWhereUniqueWithoutFacultyInput {
  where: ClassroomQuizWhereUniqueInput!
  update: ClassroomQuizUpdateWithoutFacultyInput!
  create: ClassroomQuizCreateWithoutFacultyInput!
}

input ClassroomQuizUpdateWithoutFacultyInput {
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  takeTime: DateTimeFieldUpdateOperationsInput
  duration: StringFieldUpdateOperationsInput
  collageClassroom: CollageClassroomUpdateOneRequiredWithoutClassroomQuizInput
  active: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  QuizQuestion: QuizQuestionUpdateManyWithoutClassroomQuizInput
  QuizAttempts: QuizAttemptsUpdateManyWithoutClassroomQuizInput
  QuizResult: QuizResultUpdateManyWithoutClassroomQuizInput
}

input ClassroomQuizUpdateWithWhereUniqueWithoutFacultyInput {
  where: ClassroomQuizWhereUniqueInput!
  data: ClassroomQuizUpdateWithoutFacultyInput!
}

input ClassroomQuizUpdateManyWithWhereWithoutFacultyInput {
  where: ClassroomQuizScalarWhereInput!
  data: ClassroomQuizUpdateManyMutationInput!
}

input QuizAttemptsUpdateWithWhereUniqueWithoutStudentInput {
  where: QuizAttemptsWhereUniqueInput!
  data: QuizAttemptsUpdateWithoutStudentInput!
}

input QuizAttemptsUpdateManyWithWhereWithoutStudentInput {
  where: QuizAttemptsScalarWhereInput!
  data: QuizAttemptsUpdateManyMutationInput!
}

input ClassroomSessionUpdateOneRequiredWithoutClassroomAttendanceInput {
  create: ClassroomSessionCreateWithoutClassroomAttendanceInput
  connectOrCreate: ClassroomSessionCreateOrConnectWithoutClassroomAttendanceInput
  upsert: ClassroomSessionUpsertWithoutClassroomAttendanceInput
  connect: ClassroomSessionWhereUniqueInput
  update: ClassroomSessionUpdateWithoutClassroomAttendanceInput
}

input ClassroomSessionUpsertWithoutClassroomAttendanceInput {
  update: ClassroomSessionUpdateWithoutClassroomAttendanceInput!
  create: ClassroomSessionCreateWithoutClassroomAttendanceInput!
}

input ClassroomSessionUpdateWithoutClassroomAttendanceInput {
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  collageClassroom: CollageClassroomUpdateOneRequiredWithoutClassroomSessionInput
  active: BoolFieldUpdateOperationsInput
  meta: JSON
  attendanceActive: BoolFieldUpdateOperationsInput
  faculty: FacultyUpdateOneRequiredWithoutClassroomSessionInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input ClassroomAttendanceUpdateWithWhereUniqueWithoutFacultyInput {
  where: ClassroomAttendanceWhereUniqueInput!
  data: ClassroomAttendanceUpdateWithoutFacultyInput!
}

input ClassroomAttendanceUpdateManyWithWhereWithoutFacultyInput {
  where: ClassroomAttendanceScalarWhereInput!
  data: ClassroomAttendanceUpdateManyMutationInput!
}

input ClassroomSessionUpdateWithWhereUniqueWithoutCollageClassroomInput {
  where: ClassroomSessionWhereUniqueInput!
  data: ClassroomSessionUpdateWithoutCollageClassroomInput!
}

input ClassroomSessionUpdateManyWithWhereWithoutCollageClassroomInput {
  where: ClassroomSessionScalarWhereInput!
  data: ClassroomSessionUpdateManyMutationInput!
}

input CollageClassroomUpdateWithWhereUniqueWithoutCollageDepartmentInput {
  where: CollageClassroomWhereUniqueInput!
  data: CollageClassroomUpdateWithoutCollageDepartmentInput!
}

input CollageClassroomUpdateManyWithWhereWithoutCollageDepartmentInput {
  where: CollageClassroomScalarWhereInput!
  data: CollageClassroomUpdateManyMutationInput!
}

input CollageClassroomScalarWhereInput {
  AND: [CollageClassroomScalarWhereInput!]
  OR: [CollageClassroomScalarWhereInput!]
  NOT: [CollageClassroomScalarWhereInput!]
  id: IntFilter
  name: StringFilter
  description: StringFilter
  classCode: BigIntFilter
  syllabus: StringFilter
  thumbnail: StringFilter
  collageDepartmentId: IntFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
}

input CollageClassroomUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  classCode: BigIntFieldUpdateOperationsInput
  syllabus: StringFieldUpdateOperationsInput
  thumbnail: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input CollageDepartmentUpdateWithWhereUniqueWithoutFacultyInput {
  where: CollageDepartmentWhereUniqueInput!
  data: CollageDepartmentUpdateWithoutFacultyInput!
}

input CollageDepartmentUpdateManyWithWhereWithoutFacultyInput {
  where: CollageDepartmentScalarWhereInput!
  data: CollageDepartmentUpdateManyMutationInput!
}

input CollageDepartmentScalarWhereInput {
  AND: [CollageDepartmentScalarWhereInput!]
  OR: [CollageDepartmentScalarWhereInput!]
  NOT: [CollageDepartmentScalarWhereInput!]
  id: IntFilter
  name: StringFilter
  description: StringFilter
  thumbnail: StringFilter
  facultyId: IntFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
}

input CollageDepartmentUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  thumbnail: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input ClassroomAttendanceUpdateWithWhereUniqueWithoutStudentInput {
  where: ClassroomAttendanceWhereUniqueInput!
  data: ClassroomAttendanceUpdateWithoutStudentInput!
}

input ClassroomAttendanceUpdateManyWithWhereWithoutStudentInput {
  where: ClassroomAttendanceScalarWhereInput!
  data: ClassroomAttendanceUpdateManyMutationInput!
}

input StudentFeeUpdateWithWhereUniqueWithoutAdminInput {
  where: StudentFeeWhereUniqueInput!
  data: StudentFeeUpdateWithoutAdminInput!
}

input StudentFeeUpdateManyWithWhereWithoutAdminInput {
  where: StudentFeeScalarWhereInput!
  data: StudentFeeUpdateManyMutationInput!
}

input StudentUpdateWithWhereUniqueWithoutAdminInput {
  where: StudentWhereUniqueInput!
  data: StudentUpdateWithoutAdminInput!
}

input StudentUpdateManyWithWhereWithoutAdminInput {
  where: StudentScalarWhereInput!
  data: StudentUpdateManyMutationInput!
}

input StudentScalarWhereInput {
  AND: [StudentScalarWhereInput!]
  OR: [StudentScalarWhereInput!]
  NOT: [StudentScalarWhereInput!]
  id: IntFilter
  name: StringFilter
  displayName: StringFilter
  dateOfBirth: DateTimeFilter
  email: StringFilter
  password: StringFilter
  notificationMail: StringFilter
  contactNo: StringFilter
  emailVerified: BoolFilter
  emailOtp: IntNullableFilter
  emailOtpSentTime: DateTimeNullableFilter
  lastLogin: DateTimeNullableFilter
  uuid: StringFilter
  ip: StringNullableFilter
  location: StringNullableFilter
  adminId: IntFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
}

input StudentUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  dateOfBirth: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  notificationMail: StringFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailOtp: NullableIntFieldUpdateOperationsInput
  emailOtpSentTime: NullableDateTimeFieldUpdateOperationsInput
  lastLogin: NullableDateTimeFieldUpdateOperationsInput
  uuid: StringFieldUpdateOperationsInput
  ip: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input FacultyUpdateWithWhereUniqueWithoutAdminInput {
  where: FacultyWhereUniqueInput!
  data: FacultyUpdateWithoutAdminInput!
}

input FacultyUpdateManyWithWhereWithoutAdminInput {
  where: FacultyScalarWhereInput!
  data: FacultyUpdateManyMutationInput!
}

input FacultyScalarWhereInput {
  AND: [FacultyScalarWhereInput!]
  OR: [FacultyScalarWhereInput!]
  NOT: [FacultyScalarWhereInput!]
  id: IntFilter
  name: StringFilter
  displayName: StringFilter
  dateOfBirth: DateTimeFilter
  email: StringFilter
  password: StringFilter
  notificationMail: StringFilter
  contactNo: StringFilter
  emailVerified: BoolFilter
  emailOtp: IntNullableFilter
  emailOtpSentTime: DateTimeNullableFilter
  lastLogin: DateTimeNullableFilter
  uuid: StringFilter
  ip: StringNullableFilter
  location: StringNullableFilter
  adminId: IntFilter
  facultyTypeId: IntFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
}

input FacultyUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  dateOfBirth: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  notificationMail: StringFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailOtp: NullableIntFieldUpdateOperationsInput
  emailOtpSentTime: NullableDateTimeFieldUpdateOperationsInput
  lastLogin: NullableDateTimeFieldUpdateOperationsInput
  uuid: StringFieldUpdateOperationsInput
  ip: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input StudentCreateInput {
  name: String!
  displayName: String!
  dateOfBirth: DateTime!
  email: String!
  password: String!
  notificationMail: String!
  contactNo: String!
  emailVerified: Boolean
  emailOtp: Int
  emailOtpSentTime: DateTime
  lastLogin: DateTime
  uuid: String
  ip: String
  location: String
  admin: AdminCreateNestedOneWithoutStudentInput!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  Address: AddressCreateNestedOneWithoutStudentInput
  ClassroomAttendance: ClassroomAttendanceCreateNestedManyWithoutStudentInput
  QuizAttempts: QuizAttemptsCreateNestedManyWithoutStudentInput
  QuizResult: QuizResultCreateNestedManyWithoutStudentInput
  StudentFee: StudentFeeCreateNestedManyWithoutStudentInput
}

input StudentUpdateInput {
  name: StringFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  dateOfBirth: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  notificationMail: StringFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailOtp: NullableIntFieldUpdateOperationsInput
  emailOtpSentTime: NullableDateTimeFieldUpdateOperationsInput
  lastLogin: NullableDateTimeFieldUpdateOperationsInput
  uuid: StringFieldUpdateOperationsInput
  ip: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  admin: AdminUpdateOneRequiredWithoutStudentInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  Address: AddressUpdateOneWithoutStudentInput
  ClassroomAttendance: ClassroomAttendanceUpdateManyWithoutStudentInput
  QuizAttempts: QuizAttemptsUpdateManyWithoutStudentInput
  QuizResult: QuizResultUpdateManyWithoutStudentInput
  StudentFee: StudentFeeUpdateManyWithoutStudentInput
}

input FacultyCreateInput {
  name: String!
  displayName: String!
  dateOfBirth: DateTime!
  email: String!
  password: String!
  notificationMail: String!
  contactNo: String!
  emailVerified: Boolean
  emailOtp: Int
  emailOtpSentTime: DateTime
  lastLogin: DateTime
  uuid: String
  ip: String
  location: String
  admin: AdminCreateNestedOneWithoutFacultyInput!
  facultyType: FacultyTypeCreateNestedOneWithoutFacultyInput
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  Address: AddressCreateNestedOneWithoutFacultyInput
  CollageDepartment: CollageDepartmentCreateNestedManyWithoutFacultyInput
  ClassroomSession: ClassroomSessionCreateNestedManyWithoutFacultyInput
  ClassroomAttendance: ClassroomAttendanceCreateNestedManyWithoutFacultyInput
  ClassroomQuiz: ClassroomQuizCreateNestedManyWithoutFacultyInput
}

input FacultyUpdateInput {
  name: StringFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  dateOfBirth: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  notificationMail: StringFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailOtp: NullableIntFieldUpdateOperationsInput
  emailOtpSentTime: NullableDateTimeFieldUpdateOperationsInput
  lastLogin: NullableDateTimeFieldUpdateOperationsInput
  uuid: StringFieldUpdateOperationsInput
  ip: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  admin: AdminUpdateOneRequiredWithoutFacultyInput
  facultyType: FacultyTypeUpdateOneWithoutFacultyInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  Address: AddressUpdateOneWithoutFacultyInput
  CollageDepartment: CollageDepartmentUpdateManyWithoutFacultyInput
  ClassroomSession: ClassroomSessionUpdateManyWithoutFacultyInput
  ClassroomAttendance: ClassroomAttendanceUpdateManyWithoutFacultyInput
  ClassroomQuiz: ClassroomQuizUpdateManyWithoutFacultyInput
}

input AdminTypeCreateInput {
  name: String!
  description: String!
  thumbnail: String!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  Admin: AdminCreateNestedManyWithoutAdminTypeInput
}

input AdminCreateNestedManyWithoutAdminTypeInput {
  create: [AdminCreateWithoutAdminTypeInput!]
  connectOrCreate: [AdminCreateOrConnectWithoutAdminTypeInput!]
  createMany: AdminCreateManyAdminTypeInputEnvelope
  connect: [AdminWhereUniqueInput!]
}

input AdminCreateWithoutAdminTypeInput {
  name: String!
  displayName: String!
  dateOfBirth: DateTime!
  email: String!
  password: String!
  notificationMail: String!
  contactNo: String!
  emailVerified: Boolean
  emailOtp: Int
  emailOtpSentTime: DateTime
  lastLogin: DateTime
  uuid: String
  ip: String
  location: String
  permissions: String!
  adminDepartment: AdminDepartmentCreateNestedOneWithoutAdminInput
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  Address: AddressCreateNestedOneWithoutAdminInput
  courses: CourseCreateNestedManyWithoutCreatorInput
  Student: StudentCreateNestedManyWithoutAdminInput
  Faculty: FacultyCreateNestedManyWithoutAdminInput
  CollageCircular: CollageCircularCreateNestedManyWithoutAdminInput
  StudentFee: StudentFeeCreateNestedManyWithoutAdminInput
}

input AdminCreateOrConnectWithoutAdminTypeInput {
  where: AdminWhereUniqueInput!
  create: AdminCreateWithoutAdminTypeInput!
}

input AdminCreateManyAdminTypeInputEnvelope {
  data: [AdminCreateManyAdminTypeInput!]!
  skipDuplicates: Boolean
}

input AdminCreateManyAdminTypeInput {
  id: Int
  name: String!
  displayName: String!
  dateOfBirth: DateTime!
  email: String!
  password: String!
  notificationMail: String!
  contactNo: String!
  emailVerified: Boolean
  emailOtp: Int
  emailOtpSentTime: DateTime
  lastLogin: DateTime
  uuid: String
  ip: String
  location: String
  permissions: String!
  adminDepartmentId: Int!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input AdminTypeUpdateInput {
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  thumbnail: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  Admin: AdminUpdateManyWithoutAdminTypeInput
}

input AdminUpdateManyWithoutAdminTypeInput {
  create: [AdminCreateWithoutAdminTypeInput!]
  connectOrCreate: [AdminCreateOrConnectWithoutAdminTypeInput!]
  upsert: [AdminUpsertWithWhereUniqueWithoutAdminTypeInput!]
  createMany: AdminCreateManyAdminTypeInputEnvelope
  set: [AdminWhereUniqueInput!]
  disconnect: [AdminWhereUniqueInput!]
  delete: [AdminWhereUniqueInput!]
  connect: [AdminWhereUniqueInput!]
  update: [AdminUpdateWithWhereUniqueWithoutAdminTypeInput!]
  updateMany: [AdminUpdateManyWithWhereWithoutAdminTypeInput!]
  deleteMany: [AdminScalarWhereInput!]
}

input AdminUpsertWithWhereUniqueWithoutAdminTypeInput {
  where: AdminWhereUniqueInput!
  update: AdminUpdateWithoutAdminTypeInput!
  create: AdminCreateWithoutAdminTypeInput!
}

input AdminUpdateWithoutAdminTypeInput {
  name: StringFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  dateOfBirth: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  notificationMail: StringFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailOtp: NullableIntFieldUpdateOperationsInput
  emailOtpSentTime: NullableDateTimeFieldUpdateOperationsInput
  lastLogin: NullableDateTimeFieldUpdateOperationsInput
  uuid: StringFieldUpdateOperationsInput
  ip: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  permissions: StringFieldUpdateOperationsInput
  adminDepartment: AdminDepartmentUpdateOneWithoutAdminInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  Address: AddressUpdateOneWithoutAdminInput
  courses: CourseUpdateManyWithoutCreatorInput
  Student: StudentUpdateManyWithoutAdminInput
  Faculty: FacultyUpdateManyWithoutAdminInput
  CollageCircular: CollageCircularUpdateManyWithoutAdminInput
  StudentFee: StudentFeeUpdateManyWithoutAdminInput
}

input AdminUpdateWithWhereUniqueWithoutAdminTypeInput {
  where: AdminWhereUniqueInput!
  data: AdminUpdateWithoutAdminTypeInput!
}

input AdminUpdateManyWithWhereWithoutAdminTypeInput {
  where: AdminScalarWhereInput!
  data: AdminUpdateManyMutationInput!
}

input AdminScalarWhereInput {
  AND: [AdminScalarWhereInput!]
  OR: [AdminScalarWhereInput!]
  NOT: [AdminScalarWhereInput!]
  id: IntFilter
  name: StringFilter
  displayName: StringFilter
  dateOfBirth: DateTimeFilter
  email: StringFilter
  password: StringFilter
  notificationMail: StringFilter
  contactNo: StringFilter
  emailVerified: BoolFilter
  emailOtp: IntNullableFilter
  emailOtpSentTime: DateTimeNullableFilter
  lastLogin: DateTimeNullableFilter
  uuid: StringFilter
  ip: StringNullableFilter
  location: StringNullableFilter
  permissions: StringFilter
  adminTypeId: IntFilter
  adminDepartmentId: IntFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
}

input AdminUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  dateOfBirth: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  notificationMail: StringFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailOtp: NullableIntFieldUpdateOperationsInput
  emailOtpSentTime: NullableDateTimeFieldUpdateOperationsInput
  lastLogin: NullableDateTimeFieldUpdateOperationsInput
  uuid: StringFieldUpdateOperationsInput
  ip: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  permissions: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input AdminDepartmentCreateInput {
  name: String!
  description: String!
  thumbnail: String!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  Admin: AdminCreateNestedManyWithoutAdminDepartmentInput
}

input AdminCreateNestedManyWithoutAdminDepartmentInput {
  create: [AdminCreateWithoutAdminDepartmentInput!]
  connectOrCreate: [AdminCreateOrConnectWithoutAdminDepartmentInput!]
  createMany: AdminCreateManyAdminDepartmentInputEnvelope
  connect: [AdminWhereUniqueInput!]
}

input AdminCreateWithoutAdminDepartmentInput {
  name: String!
  displayName: String!
  dateOfBirth: DateTime!
  email: String!
  password: String!
  notificationMail: String!
  contactNo: String!
  emailVerified: Boolean
  emailOtp: Int
  emailOtpSentTime: DateTime
  lastLogin: DateTime
  uuid: String
  ip: String
  location: String
  permissions: String!
  adminType: AdminTypeCreateNestedOneWithoutAdminInput
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  Address: AddressCreateNestedOneWithoutAdminInput
  courses: CourseCreateNestedManyWithoutCreatorInput
  Student: StudentCreateNestedManyWithoutAdminInput
  Faculty: FacultyCreateNestedManyWithoutAdminInput
  CollageCircular: CollageCircularCreateNestedManyWithoutAdminInput
  StudentFee: StudentFeeCreateNestedManyWithoutAdminInput
}

input AdminCreateOrConnectWithoutAdminDepartmentInput {
  where: AdminWhereUniqueInput!
  create: AdminCreateWithoutAdminDepartmentInput!
}

input AdminCreateManyAdminDepartmentInputEnvelope {
  data: [AdminCreateManyAdminDepartmentInput!]!
  skipDuplicates: Boolean
}

input AdminCreateManyAdminDepartmentInput {
  id: Int
  name: String!
  displayName: String!
  dateOfBirth: DateTime!
  email: String!
  password: String!
  notificationMail: String!
  contactNo: String!
  emailVerified: Boolean
  emailOtp: Int
  emailOtpSentTime: DateTime
  lastLogin: DateTime
  uuid: String
  ip: String
  location: String
  permissions: String!
  adminTypeId: Int!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input AdminDepartmentUpdateInput {
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  thumbnail: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  Admin: AdminUpdateManyWithoutAdminDepartmentInput
}

input AdminUpdateManyWithoutAdminDepartmentInput {
  create: [AdminCreateWithoutAdminDepartmentInput!]
  connectOrCreate: [AdminCreateOrConnectWithoutAdminDepartmentInput!]
  upsert: [AdminUpsertWithWhereUniqueWithoutAdminDepartmentInput!]
  createMany: AdminCreateManyAdminDepartmentInputEnvelope
  set: [AdminWhereUniqueInput!]
  disconnect: [AdminWhereUniqueInput!]
  delete: [AdminWhereUniqueInput!]
  connect: [AdminWhereUniqueInput!]
  update: [AdminUpdateWithWhereUniqueWithoutAdminDepartmentInput!]
  updateMany: [AdminUpdateManyWithWhereWithoutAdminDepartmentInput!]
  deleteMany: [AdminScalarWhereInput!]
}

input AdminUpsertWithWhereUniqueWithoutAdminDepartmentInput {
  where: AdminWhereUniqueInput!
  update: AdminUpdateWithoutAdminDepartmentInput!
  create: AdminCreateWithoutAdminDepartmentInput!
}

input AdminUpdateWithoutAdminDepartmentInput {
  name: StringFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  dateOfBirth: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  notificationMail: StringFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailOtp: NullableIntFieldUpdateOperationsInput
  emailOtpSentTime: NullableDateTimeFieldUpdateOperationsInput
  lastLogin: NullableDateTimeFieldUpdateOperationsInput
  uuid: StringFieldUpdateOperationsInput
  ip: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  permissions: StringFieldUpdateOperationsInput
  adminType: AdminTypeUpdateOneWithoutAdminInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  Address: AddressUpdateOneWithoutAdminInput
  courses: CourseUpdateManyWithoutCreatorInput
  Student: StudentUpdateManyWithoutAdminInput
  Faculty: FacultyUpdateManyWithoutAdminInput
  CollageCircular: CollageCircularUpdateManyWithoutAdminInput
  StudentFee: StudentFeeUpdateManyWithoutAdminInput
}

input AdminUpdateWithWhereUniqueWithoutAdminDepartmentInput {
  where: AdminWhereUniqueInput!
  data: AdminUpdateWithoutAdminDepartmentInput!
}

input AdminUpdateManyWithWhereWithoutAdminDepartmentInput {
  where: AdminScalarWhereInput!
  data: AdminUpdateManyMutationInput!
}

input FacultyTypeCreateInput {
  name: String!
  description: String!
  thumbnail: String!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  Faculty: FacultyCreateNestedManyWithoutFacultyTypeInput
}

input FacultyCreateNestedManyWithoutFacultyTypeInput {
  create: [FacultyCreateWithoutFacultyTypeInput!]
  connectOrCreate: [FacultyCreateOrConnectWithoutFacultyTypeInput!]
  createMany: FacultyCreateManyFacultyTypeInputEnvelope
  connect: [FacultyWhereUniqueInput!]
}

input FacultyCreateWithoutFacultyTypeInput {
  name: String!
  displayName: String!
  dateOfBirth: DateTime!
  email: String!
  password: String!
  notificationMail: String!
  contactNo: String!
  emailVerified: Boolean
  emailOtp: Int
  emailOtpSentTime: DateTime
  lastLogin: DateTime
  uuid: String
  ip: String
  location: String
  admin: AdminCreateNestedOneWithoutFacultyInput!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  Address: AddressCreateNestedOneWithoutFacultyInput
  CollageDepartment: CollageDepartmentCreateNestedManyWithoutFacultyInput
  ClassroomSession: ClassroomSessionCreateNestedManyWithoutFacultyInput
  ClassroomAttendance: ClassroomAttendanceCreateNestedManyWithoutFacultyInput
  ClassroomQuiz: ClassroomQuizCreateNestedManyWithoutFacultyInput
}

input FacultyCreateOrConnectWithoutFacultyTypeInput {
  where: FacultyWhereUniqueInput!
  create: FacultyCreateWithoutFacultyTypeInput!
}

input FacultyCreateManyFacultyTypeInputEnvelope {
  data: [FacultyCreateManyFacultyTypeInput!]!
  skipDuplicates: Boolean
}

input FacultyCreateManyFacultyTypeInput {
  id: Int
  name: String!
  displayName: String!
  dateOfBirth: DateTime!
  email: String!
  password: String!
  notificationMail: String!
  contactNo: String!
  emailVerified: Boolean
  emailOtp: Int
  emailOtpSentTime: DateTime
  lastLogin: DateTime
  uuid: String
  ip: String
  location: String
  adminId: Int!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input FacultyTypeUpdateInput {
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  thumbnail: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  Faculty: FacultyUpdateManyWithoutFacultyTypeInput
}

input FacultyUpdateManyWithoutFacultyTypeInput {
  create: [FacultyCreateWithoutFacultyTypeInput!]
  connectOrCreate: [FacultyCreateOrConnectWithoutFacultyTypeInput!]
  upsert: [FacultyUpsertWithWhereUniqueWithoutFacultyTypeInput!]
  createMany: FacultyCreateManyFacultyTypeInputEnvelope
  set: [FacultyWhereUniqueInput!]
  disconnect: [FacultyWhereUniqueInput!]
  delete: [FacultyWhereUniqueInput!]
  connect: [FacultyWhereUniqueInput!]
  update: [FacultyUpdateWithWhereUniqueWithoutFacultyTypeInput!]
  updateMany: [FacultyUpdateManyWithWhereWithoutFacultyTypeInput!]
  deleteMany: [FacultyScalarWhereInput!]
}

input FacultyUpsertWithWhereUniqueWithoutFacultyTypeInput {
  where: FacultyWhereUniqueInput!
  update: FacultyUpdateWithoutFacultyTypeInput!
  create: FacultyCreateWithoutFacultyTypeInput!
}

input FacultyUpdateWithoutFacultyTypeInput {
  name: StringFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  dateOfBirth: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  notificationMail: StringFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  emailVerified: BoolFieldUpdateOperationsInput
  emailOtp: NullableIntFieldUpdateOperationsInput
  emailOtpSentTime: NullableDateTimeFieldUpdateOperationsInput
  lastLogin: NullableDateTimeFieldUpdateOperationsInput
  uuid: StringFieldUpdateOperationsInput
  ip: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  admin: AdminUpdateOneRequiredWithoutFacultyInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  Address: AddressUpdateOneWithoutFacultyInput
  CollageDepartment: CollageDepartmentUpdateManyWithoutFacultyInput
  ClassroomSession: ClassroomSessionUpdateManyWithoutFacultyInput
  ClassroomAttendance: ClassroomAttendanceUpdateManyWithoutFacultyInput
  ClassroomQuiz: ClassroomQuizUpdateManyWithoutFacultyInput
}

input FacultyUpdateWithWhereUniqueWithoutFacultyTypeInput {
  where: FacultyWhereUniqueInput!
  data: FacultyUpdateWithoutFacultyTypeInput!
}

input FacultyUpdateManyWithWhereWithoutFacultyTypeInput {
  where: FacultyScalarWhereInput!
  data: FacultyUpdateManyMutationInput!
}

input ModuleCreateInput {
  name: String!
  description: String!
  thumbnail: String!
  active: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input ModuleUpdateInput {
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  thumbnail: StringFieldUpdateOperationsInput
  active: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input AddressCreateInput {
  name: String!
  line1: String!
  line2: String
  zipcode: String!
  contactNo: String!
  city: CityCreateNestedOneWithoutAddressInput!
  student: StudentCreateNestedOneWithoutAddressInput
  faculty: FacultyCreateNestedOneWithoutAddressInput
  admin: AdminCreateNestedOneWithoutAddressInput
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input AddressUpdateInput {
  name: StringFieldUpdateOperationsInput
  line1: StringFieldUpdateOperationsInput
  line2: NullableStringFieldUpdateOperationsInput
  zipcode: BigIntFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  city: CityUpdateOneRequiredWithoutAddressInput
  student: StudentUpdateOneWithoutAddressInput
  faculty: FacultyUpdateOneWithoutAddressInput
  admin: AdminUpdateOneWithoutAddressInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input CountryCreateInput {
  name: String!
  description: String
  image: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  State: StateCreateNestedManyWithoutCountryInput
}

input StateCreateNestedManyWithoutCountryInput {
  create: [StateCreateWithoutCountryInput!]
  connectOrCreate: [StateCreateOrConnectWithoutCountryInput!]
  createMany: StateCreateManyCountryInputEnvelope
  connect: [StateWhereUniqueInput!]
}

input StateCreateWithoutCountryInput {
  name: String!
  description: String
  image: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  City: CityCreateNestedManyWithoutStateInput
}

input CityCreateNestedManyWithoutStateInput {
  create: [CityCreateWithoutStateInput!]
  connectOrCreate: [CityCreateOrConnectWithoutStateInput!]
  createMany: CityCreateManyStateInputEnvelope
  connect: [CityWhereUniqueInput!]
}

input CityCreateWithoutStateInput {
  name: String!
  description: String
  image: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  Address: AddressCreateNestedManyWithoutCityInput
}

input AddressCreateNestedManyWithoutCityInput {
  create: [AddressCreateWithoutCityInput!]
  connectOrCreate: [AddressCreateOrConnectWithoutCityInput!]
  createMany: AddressCreateManyCityInputEnvelope
  connect: [AddressWhereUniqueInput!]
}

input AddressCreateWithoutCityInput {
  name: String!
  line1: String!
  line2: String
  zipcode: String!
  contactNo: String!
  student: StudentCreateNestedOneWithoutAddressInput
  faculty: FacultyCreateNestedOneWithoutAddressInput
  admin: AdminCreateNestedOneWithoutAddressInput
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input AddressCreateOrConnectWithoutCityInput {
  where: AddressWhereUniqueInput!
  create: AddressCreateWithoutCityInput!
}

input AddressCreateManyCityInputEnvelope {
  data: [AddressCreateManyCityInput!]!
  skipDuplicates: Boolean
}

input AddressCreateManyCityInput {
  id: Int
  name: String!
  line1: String!
  line2: String
  zipcode: String!
  contactNo: String!
  studentId: Int
  facultyId: Int
  adminId: Int
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input CityCreateOrConnectWithoutStateInput {
  where: CityWhereUniqueInput!
  create: CityCreateWithoutStateInput!
}

input CityCreateManyStateInputEnvelope {
  data: [CityCreateManyStateInput!]!
  skipDuplicates: Boolean
}

input CityCreateManyStateInput {
  id: Int
  name: String!
  description: String
  image: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input StateCreateOrConnectWithoutCountryInput {
  where: StateWhereUniqueInput!
  create: StateCreateWithoutCountryInput!
}

input StateCreateManyCountryInputEnvelope {
  data: [StateCreateManyCountryInput!]!
  skipDuplicates: Boolean
}

input StateCreateManyCountryInput {
  id: Int
  name: String!
  description: String
  image: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input CountryUpdateInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  State: StateUpdateManyWithoutCountryInput
}

input StateUpdateManyWithoutCountryInput {
  create: [StateCreateWithoutCountryInput!]
  connectOrCreate: [StateCreateOrConnectWithoutCountryInput!]
  upsert: [StateUpsertWithWhereUniqueWithoutCountryInput!]
  createMany: StateCreateManyCountryInputEnvelope
  set: [StateWhereUniqueInput!]
  disconnect: [StateWhereUniqueInput!]
  delete: [StateWhereUniqueInput!]
  connect: [StateWhereUniqueInput!]
  update: [StateUpdateWithWhereUniqueWithoutCountryInput!]
  updateMany: [StateUpdateManyWithWhereWithoutCountryInput!]
  deleteMany: [StateScalarWhereInput!]
}

input StateUpsertWithWhereUniqueWithoutCountryInput {
  where: StateWhereUniqueInput!
  update: StateUpdateWithoutCountryInput!
  create: StateCreateWithoutCountryInput!
}

input StateUpdateWithoutCountryInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  City: CityUpdateManyWithoutStateInput
}

input CityUpdateManyWithoutStateInput {
  create: [CityCreateWithoutStateInput!]
  connectOrCreate: [CityCreateOrConnectWithoutStateInput!]
  upsert: [CityUpsertWithWhereUniqueWithoutStateInput!]
  createMany: CityCreateManyStateInputEnvelope
  set: [CityWhereUniqueInput!]
  disconnect: [CityWhereUniqueInput!]
  delete: [CityWhereUniqueInput!]
  connect: [CityWhereUniqueInput!]
  update: [CityUpdateWithWhereUniqueWithoutStateInput!]
  updateMany: [CityUpdateManyWithWhereWithoutStateInput!]
  deleteMany: [CityScalarWhereInput!]
}

input CityUpsertWithWhereUniqueWithoutStateInput {
  where: CityWhereUniqueInput!
  update: CityUpdateWithoutStateInput!
  create: CityCreateWithoutStateInput!
}

input CityUpdateWithoutStateInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  Address: AddressUpdateManyWithoutCityInput
}

input AddressUpdateManyWithoutCityInput {
  create: [AddressCreateWithoutCityInput!]
  connectOrCreate: [AddressCreateOrConnectWithoutCityInput!]
  upsert: [AddressUpsertWithWhereUniqueWithoutCityInput!]
  createMany: AddressCreateManyCityInputEnvelope
  set: [AddressWhereUniqueInput!]
  disconnect: [AddressWhereUniqueInput!]
  delete: [AddressWhereUniqueInput!]
  connect: [AddressWhereUniqueInput!]
  update: [AddressUpdateWithWhereUniqueWithoutCityInput!]
  updateMany: [AddressUpdateManyWithWhereWithoutCityInput!]
  deleteMany: [AddressScalarWhereInput!]
}

input AddressUpsertWithWhereUniqueWithoutCityInput {
  where: AddressWhereUniqueInput!
  update: AddressUpdateWithoutCityInput!
  create: AddressCreateWithoutCityInput!
}

input AddressUpdateWithoutCityInput {
  name: StringFieldUpdateOperationsInput
  line1: StringFieldUpdateOperationsInput
  line2: NullableStringFieldUpdateOperationsInput
  zipcode: BigIntFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  student: StudentUpdateOneWithoutAddressInput
  faculty: FacultyUpdateOneWithoutAddressInput
  admin: AdminUpdateOneWithoutAddressInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input AddressUpdateWithWhereUniqueWithoutCityInput {
  where: AddressWhereUniqueInput!
  data: AddressUpdateWithoutCityInput!
}

input AddressUpdateManyWithWhereWithoutCityInput {
  where: AddressScalarWhereInput!
  data: AddressUpdateManyMutationInput!
}

input AddressScalarWhereInput {
  AND: [AddressScalarWhereInput!]
  OR: [AddressScalarWhereInput!]
  NOT: [AddressScalarWhereInput!]
  id: IntFilter
  name: StringFilter
  line1: StringFilter
  line2: StringNullableFilter
  zipcode: BigIntFilter
  contactNo: StringFilter
  cityId: IntFilter
  studentId: IntNullableFilter
  facultyId: IntNullableFilter
  adminId: IntNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
}

input AddressUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
  line1: StringFieldUpdateOperationsInput
  line2: NullableStringFieldUpdateOperationsInput
  zipcode: BigIntFieldUpdateOperationsInput
  contactNo: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input CityUpdateWithWhereUniqueWithoutStateInput {
  where: CityWhereUniqueInput!
  data: CityUpdateWithoutStateInput!
}

input CityUpdateManyWithWhereWithoutStateInput {
  where: CityScalarWhereInput!
  data: CityUpdateManyMutationInput!
}

input CityScalarWhereInput {
  AND: [CityScalarWhereInput!]
  OR: [CityScalarWhereInput!]
  NOT: [CityScalarWhereInput!]
  id: IntFilter
  name: StringFilter
  description: StringNullableFilter
  image: StringNullableFilter
  stateId: IntFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
}

input CityUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input StateUpdateWithWhereUniqueWithoutCountryInput {
  where: StateWhereUniqueInput!
  data: StateUpdateWithoutCountryInput!
}

input StateUpdateManyWithWhereWithoutCountryInput {
  where: StateScalarWhereInput!
  data: StateUpdateManyMutationInput!
}

input StateScalarWhereInput {
  AND: [StateScalarWhereInput!]
  OR: [StateScalarWhereInput!]
  NOT: [StateScalarWhereInput!]
  id: IntFilter
  name: StringFilter
  description: StringNullableFilter
  image: StringNullableFilter
  countryId: IntFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
}

input StateUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input StateCreateInput {
  name: String!
  description: String
  image: String
  country: CountryCreateNestedOneWithoutStateInput!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  City: CityCreateNestedManyWithoutStateInput
}

input StateUpdateInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  country: CountryUpdateOneRequiredWithoutStateInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  City: CityUpdateManyWithoutStateInput
}

input CityCreateInput {
  name: String!
  description: String
  image: String
  state: StateCreateNestedOneWithoutCityInput!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  Address: AddressCreateNestedManyWithoutCityInput
}

input CityUpdateInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  state: StateUpdateOneRequiredWithoutCityInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  Address: AddressUpdateManyWithoutCityInput
}

input CollageDepartmentCreateInput {
  name: String!
  description: String!
  thumbnail: String!
  faculty: FacultyCreateNestedOneWithoutCollageDepartmentInput
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  CollageClassroom: CollageClassroomCreateNestedManyWithoutCollageDepartmentInput
}

input CollageDepartmentUpdateInput {
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  thumbnail: StringFieldUpdateOperationsInput
  faculty: FacultyUpdateOneWithoutCollageDepartmentInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  CollageClassroom: CollageClassroomUpdateManyWithoutCollageDepartmentInput
}

input CollageClassroomCreateInput {
  name: String!
  description: String!
  classCode: String!
  syllabus: String!
  thumbnail: String!
  collageDepartment: CollageDepartmentCreateNestedOneWithoutCollageClassroomInput!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  ClassroomSession: ClassroomSessionCreateNestedManyWithoutCollageClassroomInput
  ClassroomQuiz: ClassroomQuizCreateNestedManyWithoutCollageClassroomInput
}

input CollageClassroomUpdateInput {
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  classCode: BigIntFieldUpdateOperationsInput
  syllabus: StringFieldUpdateOperationsInput
  thumbnail: StringFieldUpdateOperationsInput
  collageDepartment: CollageDepartmentUpdateOneRequiredWithoutCollageClassroomInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  ClassroomSession: ClassroomSessionUpdateManyWithoutCollageClassroomInput
  ClassroomQuiz: ClassroomQuizUpdateManyWithoutCollageClassroomInput
}

input ClassroomSessionCreateInput {
  name: String!
  description: String!
  collageClassroom: CollageClassroomCreateNestedOneWithoutClassroomSessionInput!
  active: Boolean!
  meta: JSON!
  attendanceActive: Boolean!
  faculty: FacultyCreateNestedOneWithoutClassroomSessionInput!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  ClassroomAttendance: ClassroomAttendanceCreateNestedManyWithoutClassroomSessionInput
}

input ClassroomSessionUpdateInput {
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  collageClassroom: CollageClassroomUpdateOneRequiredWithoutClassroomSessionInput
  active: BoolFieldUpdateOperationsInput
  meta: JSON
  attendanceActive: BoolFieldUpdateOperationsInput
  faculty: FacultyUpdateOneRequiredWithoutClassroomSessionInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  ClassroomAttendance: ClassroomAttendanceUpdateManyWithoutClassroomSessionInput
}

input ClassroomAttendanceCreateInput {
  semester: Int!
  student: StudentCreateNestedOneWithoutClassroomAttendanceInput!
  faculty: FacultyCreateNestedOneWithoutClassroomAttendanceInput!
  classroomSession: ClassroomSessionCreateNestedOneWithoutClassroomAttendanceInput!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

input ClassroomAttendanceUpdateInput {
  semester: IntFieldUpdateOperationsInput
  student: StudentUpdateOneRequiredWithoutClassroomAttendanceInput
  faculty: FacultyUpdateOneRequiredWithoutClassroomAttendanceInput
  classroomSession: ClassroomSessionUpdateOneRequiredWithoutClassroomAttendanceInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
}

input ClassroomQuizCreateInput {
  name: String!
  description: String!
  takeTime: DateTime!
  duration: String!
  collageClassroom: CollageClassroomCreateNestedOneWithoutClassroomQuizInput!
  faculty: FacultyCreateNestedOneWithoutClassroomQuizInput!
  active: Boolean!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  QuizQuestion: QuizQuestionCreateNestedManyWithoutClassroomQuizInput
  QuizAttempts: QuizAttemptsCreateNestedManyWithoutClassroomQuizInput
  QuizResult: QuizResultCreateNestedManyWithoutClassroomQuizInput
}

input ClassroomQuizUpdateInput {
  name: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  takeTime: DateTimeFieldUpdateOperationsInput
  duration: StringFieldUpdateOperationsInput
  collageClassroom: CollageClassroomUpdateOneRequiredWithoutClassroomQuizInput
  faculty: FacultyUpdateOneRequiredWithoutClassroomQuizInput
  active: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  QuizQuestion: QuizQuestionUpdateManyWithoutClassroomQuizInput
  QuizAttempts: QuizAttemptsUpdateManyWithoutClassroomQuizInput
  QuizResult: QuizResultUpdateManyWithoutClassroomQuizInput
}